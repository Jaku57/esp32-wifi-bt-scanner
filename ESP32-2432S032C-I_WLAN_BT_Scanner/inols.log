






Started logging.

<<<
Content-Length: 3200

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":20664,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"c:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","rootUri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a","name":"sketch_oct5a"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 382

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","languageId":"cpp","version":1,"text":"void setup() {\n  // put your setup code here, to run once:\n\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\n\n}\n"}}}Content-Length: 316

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 217

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 244

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":1}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 244

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 256

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":1}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 217

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 217

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 217

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}Content-Length: 217

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}Content-Length: 218

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 218

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}Content-Length: 218

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 218

{"jsonrpc":"2.0","id":13,"method":"textDocument/documentSymbol","params
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 3033

{"jsonrpc":"2.0","id":2,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}Content-Length: 3033

{"jsonrpc":"2.0","id":6,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3033

{"jsonrpc":"2.0","id":7,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3033

{"jsonrpc":"2.0","id":8,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3033

{"jsonrpc":"2.0","id":9,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":10,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":11,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":12,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}
<<<
":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":13}}Content-Length: 218

{"jsonrpc":"2.0","id":14,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}Content-Length: 218

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}Content-Length: 218

{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}Content-Length: 218

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}Content-Length: 218

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}Content-Length: 218

{"jsonrpc":"2.0","id":19,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}Content-Length: 218

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}Content-Length: 218

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}Content-Length: 218

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 317

{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":9,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 340

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":2},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":9,"character":0}},"rangeLength":129,"text":""}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 218

{"jsonrpc":"2.0","id":24,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baer
>>>
Content-Length: 3034

{"jsonrpc":"2.0","id":13,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":14,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":15,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":16,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":17,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":18,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":19,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":20,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":21,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 3034

{"jsonrpc":"2.0","id":22,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":23,"result":[]}
<<<
b/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":23}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":24}}Content-Length: 218

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 225

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":2},"text":""}}Content-Length: 4657

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":3},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: nur Zahl (ohne dBm, nur weiß, mit Leerzeichen nach SSID)\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x, y + 12);\n  tft.printf(\"%d\", rssi);\n}\n\n// Kopfzeile mit „dBm“ über den Spalten\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // Spaltenüberschriften\n  tft.setCursor(42, 12);\n  tft.print(\"WLAN\");\n  tft.setCursor(170, 12);\n  tft.print(\"Bluetooth\");\n\n  // „dBm“ über den Messwerten\n  tft.setCursor(122, 12);\n  tft.print(\"dBm\");\n  tft.setCursor(282, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(160, 0, 160, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse anzeigen\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 159, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      tft.setCursor(0, y);\n      String line = entries[i].ssid;\n      if (line.length() > 8) line = line.substring(0, 8); // Kürzer für Kanalanzeige\n      line += \" CH\" + String(entries[i].channel);\n      tft.print(line + \" \");\n      drawRSSIValue(121, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse anzeigen\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI (absteigend)\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(163, y - 19, 154, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(163, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC-Adresse kürzen: nur letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 10) na
>>>
Content-Length: 4113

{"jsonrpc":"2.0","id":24,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":12}},"selectionRange":{"start":{"line":0,"character":9},"end":{"line":0,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":24}},"selectionRange":{"start":{"line":2,"character":16},"end":{"line":2,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":17}},"selectionRange":{"start":{"line":3,"character":9},"end":{"line":3,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":5,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":5,"character":7},"end":{"line":5,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":9},"end":{"line":6,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":14}},"selectionRange":{"start":{"line":7,"character":10},"end":{"line":7,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":17}},"selectionRange":{"start":{"line":8,"character":10},"end":{"line":8,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":29}},"selectionRange":{"start":{"line":9,"character":19},"end":{"line":9,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":42}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":17}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":47}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":49}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":11}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":18}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":42,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":42,"character":5},"end":{"line":42,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":60,"character":0},"end":{"line":108,"character":1}},"selectionRange":{"start":{"line":60,"character":5},"end":{"line":60,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":110,"character":0},"end":{"line":128,"character":1}},"selectionRange":{"start":{"line":110,"character":5},"end":{"line":110,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":130,"character":0},"end":{"line":158,"character":1}},"selectionRange":{"start":{"line":130,"character":5},"end":{"line":130,"character":9}}}]}Content-Length: 4113

{"jsonrpc":"2.0","id":25,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":12}},"selectionRange":{"start":{"line":0,"character":9},"end":{"line":0,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":2,"character":0},"end":{"line":2,"character":24}},"selectionRange":{"start":{"line":2,"character":16},"end":{"line":2,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":3,"character":0},"end":{"line":3,"character":17}},"selectionRange":{"start":{"line":3,"character":9},"end":{"line":3,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":5,"character":0},"end":{"line":10,"character":1}},"selectionRange":{"start":{"line":5,"character":7},"end":{"line":5,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":13}},"selectionRange":{"start":{"line":6,"character":9},"end":{"line":6,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":7,"character":2},"end":{"line":7,"character":14}},"selectionRange":{"start":{"line":7,"character":10},"end":{"line":7,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":8,"character":2},"end":{"line":8,"character":17}},"selectionRange":{"start":{"line":8,"character":10},"end":{"line":8,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":9,"character":2},"end":{"line":9,"character":29}},"selectionRange":{"start":{"line":9,"character":19},"end":{"line":9,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":22,"character":42}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":17}},"selectionRange":{"start":{"line":16,"character":5},"end":{"line":16,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":15,"character":0},"end":{"line":15,"character":47}},"selectionRange":{"start":{"line":15,"character":5},"end":{"line":15,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":14,"character":0},"end":{"line":14,"character":49}},"selectionRange":{"start":{"line":14,"character":5},"end":{"line":14,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":13,"character":0},"end":{"line":13,"character":12}},"selectionRange":{"start":{"line":13,"character":5},"end":{"line":13,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":21,"character":11}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":9}}},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":43,"character":0},"end":{"line":111,"character":1}},"selectionRange":{"start":{"line":43,"character":5},"end":{"line":43,"character":18}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":42,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":42,"character":5},"end":{"line":42,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":60,"character":0},"end":{"line":108,"character":1}},"selectionRange":{"start":{"line":60,"character":5},"end":{"line":60,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":110,"character":0},"end":{"line":128,"character":1}},"selectionRange":{"start":{"line":110,"character":5},"end":{"line":110,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":130,"character":0},"end":{"line":158,"character":1}},"selectionRange":{"start":{"line":130,"character":5},"end":{"line":130,"character":9}}}]}
<<<
me = name.substring(0, 10);\n      tft.print(name + \" \");\n      drawRSSIValue(283, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 218

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":26}}Content-Length: 218

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 4544

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":3},"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: nur Zahl (ohne dBm, nur weiß, mit Leerzeichen nach SSID)\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x, y + 12);\n  tft.printf(\"%d\", rssi);\n}\n\n// Kopfzeile mit „dBm“ über den Spalten\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // Spaltenüberschriften\n  tft.setCursor(42, 12);\n  tft.print(\"WLAN\");\n  tft.setCursor(170, 12);\n  tft.print(\"Bluetooth\");\n\n  // „dBm“ über den Messwerten\n  tft.setCursor(122, 12);\n  tft.print(\"dBm\");\n  tft.setCursor(282, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(160, 0, 160, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse anzeigen\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 159, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      tft.setCursor(0, y);\n      String line = entries[i].ssid;\n      if (line.length() > 8) line = line.substring(0, 8); // Kürzer für Kanalanzeige\n      line += \" CH\" + String(entries[i].channel);\n      tft.print(line + \" \");\n      drawRSSIValue(121, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse anzeigen\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  int maxRows = 9;\n  int count = found
>>>
Content-Length: 6129

{"jsonrpc":"2.0","id":26,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}},{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":168,"character":0},"end":{"line":168,"character":12}},"selectionRange":{"start":{"line":168,"character":9},"end":{"line":168,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":170,"character":0},"end":{"line":170,"character":24}},"selectionRange":{"start":{"line":170,"character":16},"end":{"line":170,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":171,"character":0},"end":{"line":171,"character":17}},"selectionRange":{"start":{"line":171,"character":9},"end":{"line":171,"character":17}}},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":190,"character":0},"end":{"line":190,"character":42}},"selectionRange":{"start":{"line":190,"character":5},"end":{"line":190,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":184,"character":0},"end":{"line":184,"character":17}},"selectionRange":{"start":{"line":184,"character":5},"end":{"line":184,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":183,"character":0},"end":{"line":183,"character":47}},"selectionRange":{"start":{"line":183,"character":5},"end":{"line":183,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":182,"character":0},"end":{"line":182,"character":49}},"selectionRange":{"start":{"line":182,"character":5},"end":{"line":182,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":181,"character":0},"end":{"line":181,"character":12}},"selectionRange":{"start":{"line":181,"character":5},"end":{"line":181,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":189,"character":0},"end":{"line":189,"character":11}},"selectionRange":{"start":{"line":189,"character":5},"end":{"line":189,"character":9}}},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":211,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":211,"character":5},"end":{"line":211,"character":18}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":225,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":228,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":228,"character":5},"end":{"line":228,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":296,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":298,"character":0},"end":{"line":326,"character":1}},"selectionRange":{"start":{"line":298,"character":5},"end":{"line":298,"character":9}}}]}Content-Length: 6129

{"jsonrpc":"2.0","id":27,"result":[{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":12}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"int","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":48,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":51,"character":0},"end":{"line":66,"character":1}},"selectionRange":{"start":{"line":51,"character":5},"end":{"line":51,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":69,"character":0},"end":{"line":117,"character":1}},"selectionRange":{"start":{"line":69,"character":5},"end":{"line":69,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":119,"character":0},"end":{"line":137,"character":1}},"selectionRange":{"start":{"line":119,"character":5},"end":{"line":119,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":139,"character":0},"end":{"line":167,"character":1}},"selectionRange":{"start":{"line":139,"character":5},"end":{"line":139,"character":9}}},{"name":"tft","detail":"int","kind":13,"range":{"start":{"line":168,"character":0},"end":{"line":168,"character":12}},"selectionRange":{"start":{"line":168,"character":9},"end":{"line":168,"character":12}}},{"name":"SerialBT","detail":"int","kind":13,"range":{"start":{"line":170,"character":0},"end":{"line":170,"character":24}},"selectionRange":{"start":{"line":170,"character":16},"end":{"line":170,"character":24}}},{"name":"pBLEScan","detail":"int *","kind":13,"range":{"start":{"line":171,"character":0},"end":{"line":171,"character":17}},"selectionRange":{"start":{"line":171,"character":9},"end":{"line":171,"character":17}}},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":190,"character":0},"end":{"line":190,"character":42}},"selectionRange":{"start":{"line":190,"character":5},"end":{"line":190,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":184,"character":0},"end":{"line":184,"character":17}},"selectionRange":{"start":{"line":184,"character":5},"end":{"line":184,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":183,"character":0},"end":{"line":183,"character":47}},"selectionRange":{"start":{"line":183,"character":5},"end":{"line":183,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":182,"character":0},"end":{"line":182,"character":49}},"selectionRange":{"start":{"line":182,"character":5},"end":{"line":182,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":181,"character":0},"end":{"line":181,"character":12}},"selectionRange":{"start":{"line":181,"character":5},"end":{"line":181,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":189,"character":0},"end":{"line":189,"character":11}},"selectionRange":{"start":{"line":189,"character":5},"end":{"line":189,"character":9}}},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":211,"character":0},"end":{"line":279,"character":1}},"selectionRange":{"start":{"line":211,"character":5},"end":{"line":211,"character":18}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":210,"character":0},"end":{"line":225,"character":1}},"selectionRange":{"start":{"line":210,"character":5},"end":{"line":210,"character":20}}},{"name":"drawBleResults","detail":"void (int *)","kind":12,"range":{"start":{"line":228,"character":0},"end":{"line":276,"character":1}},"selectionRange":{"start":{"line":228,"character":5},"end":{"line":228,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":278,"character":0},"end":{"line":296,"character":1}},"selectionRange":{"start":{"line":278,"character":5},"end":{"line":278,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":298,"character":0},"end":{"line":326,"character":1}},"selectionRange":{"start":{"line":298,"character":5},"end":{"line":298,"character":9}}}]}
<<<
Devices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI (absteigend)\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(163, y - 19, 154, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(163, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC-Adresse kürzen: nur letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 10) name = name.substring(0, 10);\n      tft.print(name + \" \");\n      drawRSSIValue(283, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/57","percentage":15}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/57","percentage":17}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/57","percentage":17}}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/57","percentage":19}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/57","percentage":19}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/57","percentage":21}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/57","percentage":21}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/57","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/57","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/57","percentage":24}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/57","percentage":24}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/57","percentage":26}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/57","percentage":26}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/57","percentage":29}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/57","percentage":29}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/57","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/58","percentage":34}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/58","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/58","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/58","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/58","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/58","percentage":37}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/58","percentage":39}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/58","percentage":39}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/58","percentage":41}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/58","percentage":41}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/58","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/58","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/58","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/58","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/58","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/58","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/58","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/58","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/58","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/58","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/58","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/58","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/58","percentage":68}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/58","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/58","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/58","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/58","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/58","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/58","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/58","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/58","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/58","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/58","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/58","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/58","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/58","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/58","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/58","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/58","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/58","percentage":91}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/58","percentage":91}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/58","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/58","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/58","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/58","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/58","percentage":96}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/58","percentage":96}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/58","percentage":98}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/58","percentage":98}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 80670

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildPath":"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94","buildOutputUri":"file:///c%3A/Users/baerb/AppData/Local/arduino/sketches/DB967282F33456BE0552555DDE24DC94","executableSectionsSize":[{"name":"text","size":1686831,"maxSize":3145728},{"name":"data","size":59752,"maxSize":327680}],"usedLibraries":[{"name":"WiFi","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"Enables network connection (local and Internet) using the ESP32 built-in WiFi.","paragraph":"With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks. The IP address can be assigned statically or through a DHCP. The library can also manage DNS.","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\FTM\\FTM_Initiator","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\FTM\\FTM_Responder","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\SimpleWiFiServer","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WPS","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiAccessPoint","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiBlueToothSwitch","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClient","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientBasic","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientConnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientEnterprise","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientEvents","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientStaticIP","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiExtender","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiIPv6","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiMulti","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiMultiAdvanced","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanAsync","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanDualAntenna","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanTime","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiSmartConfig","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiTelnetToSerial","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiUDPClient"],"providesIncludes":["WiFi.h","WiFiAP.h","WiFiClient.h","WiFiGeneric.h","WiFiMulti.h","WiFiSTA.h","WiFiScan.h","WiFiServer.h","WiFiType.h","WiFiUdp.h"],"properties":{},"compatibleWith":{}},{"name":"Networking","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"General network management library.","paragraph":"This library holds all common functionality of the different network interfaces.","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\Network","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\Network\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":[],"providesIncludes":["Network.h","NetworkClient.h","NetworkEvents.h","NetworkInterface.h","NetworkManager.h","NetworkServer.h","NetworkUdp.h"],"properties":{},"compatibleWith":{}},{"name":"BluetoothSerial","author":"Evandro Copercini","maintainer":"Evandro Copercini","sentence":"Simple UART to Classical Bluetooth bridge for ESP32","paragraph":"","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\DiscoverConnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\GetLocalMAC","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBTM","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT_Legacy","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT_SSP","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\bt_classic_device_discovery","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\bt_remove_paired_devices"],"providesIncludes":["BTAddress.h","BTAdvertisedDevice.h","BTScan.h","BluetoothSerial.h"],"properties":{},"compatibleWith":{}},{"name":"BLE","author":"Neil Kolban <kolban1@kolban.com>","maintainer":"lucasssvaz","sentence":"BLE functions for ESP32","paragraph":"This library provides an implementation Bluetooth Low Energy support for the ESP32 using the Arduino platform.","website":"https://github.com/espressif/arduino-esp32/tree/master/libraries/BLE","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_extended_scan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_multi_advertising","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_periodic_advertising","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_periodic_sync","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Beacon_Scanner","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Client","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Client_secure_static_passkey","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\EddystoneTLM_Beacon","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\EddystoneURL_Beacon","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Notify","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Scan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_multiconnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_secure_authorization","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_secure_static_passkey","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\UART","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Write","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\iBeacon"],"providesIncludes":["BLEDevice.h","BLEUtils.h","BLEScan.h","BLEAdvertisedDevice.h"],"properties":{},"compatibleWith":{}},{"name":"TFT_eSPI","author":"Bodmer","maintainer":"Bodmer","sentence":"TFT graphics library for Arduino processors with performance optimisation for RP2040, STM32, ESP8266 and ESP32","paragraph":"Supports TFT displays using drivers (ILI9341 etc.) that operate with hardware SPI or 8/16-bit parallel.","website":"https://github.com/Bodmer/TFT_eSPI","category":"Display","installDir":"C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI","sourceDir":"c:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.5.43","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\Arduino_Life","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\Pong_v3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Clock_Digital","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Meter_5","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Rainbow","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_flash_jpg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_graphicstest_PDQ3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_graphicstest_small","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\UTFT_demo_fast","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\All_Free_Fonts_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Cellular_Automata","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Free_Font_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Keypad_240x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Read_ID_bitbash","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_ArcFill","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Clock_Digital","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Custom_Fonts","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_FillArcSpiral","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Float_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Mandlebrot","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Matrix","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Meter_linear","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Pie_Chart","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Pong","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Rainbow_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Read_Reg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Spiro","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Starfield","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_String_Align","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Terminal","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_graphicstest_PDQ","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_graphicstest_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\UTFT_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Cellular_Automata","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Demo_3D_cube","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Free_Font_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Graph_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Keypad_480x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Meter_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Padding_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Rainbow480","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_String_Align","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_flash_jpg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_graphicstest_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_ring_meter","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Touch_Controller_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\UTFT_Demo_480x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\Bouncy_Circles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\Flash_Jpg_DMA","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\SpriteRotatingCube","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\boing_ball","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Buttons\\Button_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Graphs\\Graph_demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Graphs\\Graph_demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Meters\\Analogue_meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Sliders\\Slider_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Animated_Eyes_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Animated_Eyes_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\ESP32_SDcard_jpeg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\ESP8266_uncannyEyes","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Gradient_Fill","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Julia_Set","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Local_Custom_Fonts","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\On_Off_Button","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Button_Label_Datum","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Flash_Bitmap","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_SPIFFS_BMP","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Screen_Capture","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Touch_calibrate","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Viewport_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Viewport_graphicstest","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\alphaBlend_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\drawXBitmap","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\Flash_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\Flash_transparent_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\LittleFS_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\LittleFS_PNG_DMA","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_1_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_2_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_3_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_4_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SD_Card\\ESP32_Smooth_Font_SD","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Anti-aliased_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Arc_meter_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Colour_Wheel","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Draw_Arc","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Draw_Smooth_Circles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Arc","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Graphics_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Rounded_Rectangles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Animated_dial","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\ESP32-2432S032C-I_Sprites","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\One_bit_Sprite_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\One_bit_Yin_Yang","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Orrery","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_TFT_Rainbow","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_draw","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_draw_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_image_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_16bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_1bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_8bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_wrap_1bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Transparent_Sprite_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Transparent_Sprite_Demo_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Colour_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Read_User_Setup","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\TFT_ReadWrite_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Test_Touch_Controller","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\ePaper\\Floyd_Steinberg"],"providesIncludes":["TFT_eSPI.h"],"properties":{},"compatibleWith":{}},{"name":"SPI","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus. For all Arduino boards, BUT Arduino DUE.","paragraph":"","website":"http://arduino.cc/en/Reference/SPI","category":"Signal Input/Output","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI\\examples\\SPI_Multiple_Buses"],"providesIncludes":["SPI.h"],"properties":{},"compatibleWith":{}},{"name":"FS","author":"Hristo Gochkov, Ivan Grokhtkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"ESP32 File System","paragraph":"","website":"","category":"Data Storage","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\FS","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\FS\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":[],"providesIncludes":["FS.h","FSImpl.h","vfs_api.h"],"properties":{},"compatibleWith":{}},{"name":"SPIFFS","author":"Hristo Gochkov, Ivan Grokhtkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"ESP32 SPIFFS File System","paragraph":"","website":"","category":"Data Storage","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\examples\\SPIFFS_Test","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\examples\\SPIFFS_time"],"providesIncludes":["SPIFFS.h"],"properties":{},"compatibleWith":{}}],"buildPlatform":{"id":"esp32:esp32","version":"3.3.1","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","packageUrl":"https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json"},"buildProperties":["_id=esp32","bootloader.tool=esptool_py","bootloader.tool.default=esptool_py","build.arch=ESP32","build.board=ESP32_DEV","build.board.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","build.boot=qio","build.boot_freq=80m","build.bootloader_addr=0x1000","build.code_debug=0","build.copy_jtag_files=0","build.core=esp32","build.core.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\cores\\esp32","build.core.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","build.custom_bootloader=bootloader","build.custom_partitions=partitions","build.defines=","build.event_core=-DARDUINO_EVENT_RUNNING_CORE=1","build.extra_flags=-DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0 ","build.extra_flags.esp32=-DARDUINO_USB_CDC_ON_BOOT=0","build.extra_flags.esp32c2=-DARDUINO_USB_CDC_ON_BOOT=0","build.extra_flags.esp32c3=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32c5=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32c6=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32h2=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32p4=-DARDUINO_USB_MODE={build.usb_mode} -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_flags.esp32s2=-DARDUINO_USB_MODE=0 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_flags.esp32s3=-DARDUINO_USB_MODE={build.usb_mode} -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_libs=","build.f_cpu=240000000L","build.flash_freq=80m","build.flash_mode=dio","build.flash_size=4MB","build.fqbn=esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default","build.img_freq=80m","build.library_discovery_phase=0","build.loop_core=-DARDUINO_RUNNING_CORE=1","build.mcu=esp32","build.memory_type=qio_qspi","build.opt.name=build_opt.h","build.opt.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h","build.partitions=huge_app","build.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94","build.project_name=sketch_oct5a.ino","build.source.path=C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","build.system.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\system","build.tarch=xtensa","build.target=esp32","build.variant=esp32","build.variant.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32","build.zigbee_libs=","build.zigbee_mode=","compiler.S.cmd=xtensa-esp32-elf-gcc","compiler.S.extra_flags=","compiler.S.flags=-MMD -c -x assembler-with-cpp \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/S_flags\" -w -Os","compiler.ar.cmd=xtensa-esp32-elf-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=cr","compiler.as.cmd=xtensa-esp32-elf-as","compiler.c.cmd=xtensa-esp32-elf-gcc","compiler.c.elf.cmd=xtensa-esp32-elf-g++","compiler.c.elf.extra_flags=","compiler.c.elf.flags=\"-Wl,--Map=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.map\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/lib\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/ld\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi\" \"-Wl,--wrap=esp_panic_handler\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_flags\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_scripts\"","compiler.c.elf.libs=\"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_libs\"","compiler.c.extra_flags=","compiler.c.flags=-MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/c_flags\" -w -Os -Werror=return-type","compiler.common_werror_flags=-Werror=return-type","compiler.cpp.cmd=xtensa-esp32-elf-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/cpp_flags\" -w -Os -Werror=return-type","compiler.cpreprocessor.flags=\"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\"","compiler.elf2hex.extra_flags=","compiler.libraries.ldflags=","compiler.objcopy.eep.extra_flags=","compiler.optimization_flags=-Os","compiler.optimization_flags.debug=-Og -g3","compiler.optimization_flags.release=-Os","compiler.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/","compiler.prefix=xtensa-esp32-elf-","compiler.sdk.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32","compiler.size.cmd=xtensa-esp32-elf-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","debug.additional_config=debug_config.esp32","debug.cortex-debug.custom.objdumpPath=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-objdump","debug.cortex-debug.custom.request=attach","debug.executable=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf","debug.server=openocd","debug.server.openocd.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707/bin/openocd","debug.server.openocd.scripts.0=board/esp32-wrover-kit-3.3v.cfg","debug.server.openocd.scripts_dir=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707\\share\\openocd\\scripts\\","debug.svd_file=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/ide-debug/svd/esp32.svd","debug.toolchain=gcc","debug.toolchain.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324/bin/","debug.toolchain.prefix=xtensa-esp32-elf","debug_config.esp32.cortex-debug.custom.name=Arduino on ESP32","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.2=thb setup","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.3=c","debug_config.esp32.cortex-debug.custom.postAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32.cortex-debug.custom.postAttachCommands.1=monitor reset halt","debug_config.esp32.cortex-debug.custom.postAttachCommands.2=monitor gdb_sync","debug_config.esp32.cortex-debug.custom.postAttachCommands.3=thb setup","debug_config.esp32.cortex-debug.custom.postAttachCommands.4=c","debug_config.esp32c3.cortex-debug.custom.name=Arduino on ESP32-C3","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.0=set remote hardware-watchpoint-limit 8","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.1=monitor reset","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.2=monitor halt","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.3=monitor gdb_sync","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.4=thb setup","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.0=monitor reset","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.1=monitor halt","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.2=monitor gdb_sync","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.3=thb setup","debug_config.esp32c3.cortex-debug.custom.serverArgs.0=-d3","debug_config.esp32c5=","debug_config.esp32c6=","debug_config.esp32h2=","debug_config.esp32p4=","debug_config.esp32s2.cortex-debug.custom.name=Arduino on ESP32-S2","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.2=thb setup","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.3=c","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.1=monitor reset halt","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.2=monitor gdb_sync","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.3=thb setup","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.4=c","debug_config.esp32s3.cortex-debug.custom.name=Arduino on ESP32-S3","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.1=monitor reset halt","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.2=monitor gdb_sync","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.3=thb setup","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.4=c","debug_config.esp32s3.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32s3.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_script.esp32=esp32-wrover-kit-3.3v.cfg","debug_script.esp32c3=esp32c3-builtin.cfg","debug_script.esp32c5=esp32c5-builtin.cfg","debug_script.esp32c6=esp32c6-builtin.cfg","debug_script.esp32h2=esp32h2-builtin.cfg","debug_script.esp32p4=esp32p4-builtin.cfg","debug_script.esp32s2=esp32s2-kaluga-1.cfg","debug_script.esp32s3=esp32s3-builtin.cfg","extra.time.dst=3600","extra.time.local=1759662541","extra.time.utc=1759655341","extra.time.zone=3600","file_opts.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts","ide_version=10607","menu.CPUFreq.10=10MHz (40MHz XTAL)","menu.CPUFreq.10.build.f_cpu=10000000L","menu.CPUFreq.13=13MHz (26MHz XTAL)","menu.CPUFreq.13.build.f_cpu=13000000L","menu.CPUFreq.160=160MHz (WiFi/BT)","menu.CPUFreq.160.build.f_cpu=160000000L","menu.CPUFreq.20=20MHz (40MHz XTAL)","menu.CPUFreq.20.build.f_cpu=20000000L","menu.CPUFreq.240=240MHz (WiFi/BT)","menu.CPUFreq.240.build.f_cpu=240000000L","menu.CPUFreq.26=26MHz (26MHz XTAL)","menu.CPUFreq.26.build.f_cpu=26000000L","menu.CPUFreq.40=40MHz (40MHz XTAL)","menu.CPUFreq.40.build.f_cpu=40000000L","menu.CPUFreq.80=80MHz (WiFi/BT)","menu.CPUFreq.80.build.f_cpu=80000000L","menu.DebugLevel.debug=Debug","menu.DebugLevel.debug.build.code_debug=4","menu.DebugLevel.error=Error","menu.DebugLevel.error.build.code_debug=1","menu.DebugLevel.info=Info","menu.DebugLevel.info.build.code_debug=3","menu.DebugLevel.none=None","menu.DebugLevel.none.build.code_debug=0","menu.DebugLevel.verbose=Verbose","menu.DebugLevel.verbose.build.code_debug=5","menu.DebugLevel.warn=Warn","menu.DebugLevel.warn.build.code_debug=2","menu.EraseFlash.all=Enabled","menu.EraseFlash.all.upload.erase_cmd=-e","menu.EraseFlash.none=Disabled","menu.EraseFlash.none.upload.erase_cmd=","menu.EventsCore.0=Core 0","menu.EventsCore.0.build.event_core=-DARDUINO_EVENT_RUNNING_CORE=0","menu.EventsCore.1=Core 1","menu.EventsCore.1.build.event_core=-DARDUINO_EVENT_RUNNING_CORE=1","menu.FlashFreq.40=40MHz","menu.FlashFreq.40.build.flash_freq=40m","menu.FlashFreq.80=80MHz","menu.FlashFreq.80.build.flash_freq=80m","menu.FlashMode.dio=DIO","menu.FlashMode.dio.build.boot=dio","menu.FlashMode.dio.build.flash_mode=dio","menu.FlashMode.qio=QIO","menu.FlashMode.qio.build.boot=qio","menu.FlashMode.qio.build.flash_mode=dio","menu.FlashSize.16M=16MB (128Mb)","menu.FlashSize.16M.build.flash_size=16MB","menu.FlashSize.2M=2MB (16Mb)","menu.FlashSize.2M.build.flash_size=2MB","menu.FlashSize.4M=4MB (32Mb)","menu.FlashSize.4M.build.flash_size=4MB","menu.FlashSize.8M=8MB (64Mb)","menu.FlashSize.8M.build.flash_size=8MB","menu.JTAGAdapter.bridge=ESP USB Bridge","menu.JTAGAdapter.bridge.build.copy_jtag_files=1","menu.JTAGAdapter.bridge.build.openocdscript=esp32-bridge.cfg","menu.JTAGAdapter.default=Disabled","menu.JTAGAdapter.default.build.copy_jtag_files=0","menu.JTAGAdapter.external=FTDI Adapter","menu.JTAGAdapter.external.build.copy_jtag_files=1","menu.JTAGAdapter.external.build.openocdscript=esp32-wrover-kit-3.3v.cfg","menu.LoopCore.0=Core 0","menu.LoopCore.0.build.loop_core=-DARDUINO_RUNNING_CORE=0","menu.LoopCore.1=Core 1","menu.LoopCore.1.build.loop_core=-DARDUINO_RUNNING_CORE=1","menu.PSRAM.disabled=Disabled","menu.PSRAM.disabled.build.defines=","menu.PSRAM.disabled.build.extra_libs=","menu.PSRAM.enabled=Enabled","menu.PSRAM.enabled.build.defines=-DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -mfix-esp32-psram-cache-strategy=memw","menu.PSRAM.enabled.build.extra_libs=","menu.PartitionScheme.app3M_fat9M_16MB=16M Flash (3MB APP/9.9MB FATFS)","menu.PartitionScheme.app3M_fat9M_16MB.build.partitions=app3M_fat9M_16MB","menu.PartitionScheme.app3M_fat9M_16MB.upload.maximum_size=3145728","menu.PartitionScheme.custom=Custom","menu.PartitionScheme.custom.build.partitions=","menu.PartitionScheme.custom.upload.maximum_size=16777216","menu.PartitionScheme.default=Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)","menu.PartitionScheme.default.build.partitions=default","menu.PartitionScheme.default_8MB=8M with spiffs (3MB APP/1.5MB SPIFFS)","menu.PartitionScheme.default_8MB.build.partitions=default_8MB","menu.PartitionScheme.default_8MB.upload.maximum_size=3342336","menu.PartitionScheme.defaultffat=Default 4MB with ffat (1.2MB APP/1.5MB FATFS)","menu.PartitionScheme.defaultffat.build.partitions=default_ffat","menu.PartitionScheme.fatflash=16M Flash (2MB APP/12.5MB FATFS)","menu.PartitionScheme.fatflash.build.partitions=ffat","menu.PartitionScheme.fatflash.upload.maximum_size=2097152","menu.PartitionScheme.huge_app=Huge APP (3MB No OTA/1MB SPIFFS)","menu.PartitionScheme.huge_app.build.partitions=huge_app","menu.PartitionScheme.huge_app.upload.maximum_size=3145728","menu.PartitionScheme.min_spiffs=Minimal SPIFFS (1.9MB APP with OTA/190KB SPIFFS)","menu.PartitionScheme.min_spiffs.build.partitions=min_spiffs","menu.PartitionScheme.min_spiffs.upload.maximum_size=1966080","menu.PartitionScheme.minimal=Minimal (1.3MB APP/700KB SPIFFS)","menu.PartitionScheme.minimal.build.partitions=minimal","menu.PartitionScheme.no_fs=No FS 4MB (2MB APP x2)","menu.PartitionScheme.no_fs.build.partitions=no_fs","menu.PartitionScheme.no_fs.upload.maximum_size=2031616","menu.PartitionScheme.no_ota=No OTA (2MB APP/2MB SPIFFS)","menu.PartitionScheme.no_ota.build.partitions=no_ota","menu.PartitionScheme.no_ota.upload.maximum_size=2097152","menu.PartitionScheme.noota_3g=No OTA (1MB APP/3MB SPIFFS)","menu.PartitionScheme.noota_3g.build.partitions=noota_3g","menu.PartitionScheme.noota_3g.upload.maximum_size=1048576","menu.PartitionScheme.noota_3gffat=No OTA (1MB APP/3MB FATFS)","menu.PartitionScheme.noota_3gffat.build.partitions=noota_3gffat","menu.PartitionScheme.noota_3gffat.upload.maximum_size=1048576","menu.PartitionScheme.noota_ffat=No OTA (2MB APP/2MB FATFS)","menu.PartitionScheme.noota_ffat.build.partitions=noota_ffat","menu.PartitionScheme.noota_ffat.upload.maximum_size=2097152","menu.PartitionScheme.rainmaker=RainMaker 4MB","menu.PartitionScheme.rainmaker.build.partitions=rainmaker","menu.PartitionScheme.rainmaker.upload.maximum_size=1966080","menu.PartitionScheme.rainmaker_4MB=RainMaker 4MB No OTA","menu.PartitionScheme.rainmaker_4MB.build.partitions=rainmaker_4MB_no_ota","menu.PartitionScheme.rainmaker_4MB.upload.maximum_size=4038656","menu.PartitionScheme.rainmaker_8MB=RainMaker 8MB","menu.PartitionScheme.rainmaker_8MB.build.partitions=rainmaker_8MB","menu.PartitionScheme.rainmaker_8MB.upload.maximum_size=4096000","menu.PartitionScheme.zigbee_zczr=Zigbee ZCZR 4MB with spiffs","menu.PartitionScheme.zigbee_zczr.build.partitions=zigbee_zczr","menu.PartitionScheme.zigbee_zczr.upload.maximum_size=1310720","menu.PartitionScheme.zigbee_zczr_8MB=Zigbee ZCZR 8MB with spiffs","menu.PartitionScheme.zigbee_zczr_8MB.build.partitions=zigbee_zczr_8MB","menu.PartitionScheme.zigbee_zczr_8MB.upload.maximum_size=3407872","menu.UploadSpeed.115200=115200","menu.UploadSpeed.115200.upload.speed=115200","menu.UploadSpeed.230400=230400","menu.UploadSpeed.230400.upload.speed=230400","menu.UploadSpeed.256000=256000","menu.UploadSpeed.256000.upload.speed=256000","menu.UploadSpeed.460800.linux=460800","menu.UploadSpeed.460800.macosx=460800","menu.UploadSpeed.460800.upload.speed=460800","menu.UploadSpeed.512000=512000","menu.UploadSpeed.512000.upload.speed=512000","menu.UploadSpeed.921600=921600","menu.UploadSpeed.921600.upload.speed=921600","menu.ZigbeeMode.default=Disabled","menu.ZigbeeMode.default.build.zigbee_libs=","menu.ZigbeeMode.default.build.zigbee_mode=","menu.ZigbeeMode.zczr=Zigbee ZCZR (coordinator/router)","menu.ZigbeeMode.zczr.build.zigbee_libs=-lesp_zb_api.zczr -lzboss_stack.zczr -lzboss_port.remote","menu.ZigbeeMode.zczr.build.zigbee_mode=-DZIGBEE_MODE_ZCZR","monitor_port.serial.dtr=off","monitor_port.serial.rts=off","name=ESP32 Dev Module","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","recipe.S.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc\"  -MMD -c -x assembler-with-cpp \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/S_flags\" -w -Os -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc-ar\" cr  \"{archive_file_path}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-g++\" \"-Wl,--Map=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.map\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/lib\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/ld\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi\" \"-Wl,--wrap=esp_panic_handler\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_flags\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_scripts\"  -Wl,--start-group {object_files} \"{archive_file_path}\"   \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_libs\"  -Wl,--end-group -Wl,-EL -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.c.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc\"  -MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/c_flags\" -w -Os -Werror=return-type -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-g++\"  -MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/cpp_flags\" -w -Os -Werror=return-type -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.hooks.core.postbuild.1.pattern=cmd /c type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.core.prebuild.1.pattern=cmd /c echo \"-DARDUINO_CORE_BUILD\" > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.objcopy.postobjcopy.1.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\libraries\\Insights\" \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_insights_package.exe\" C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94 sketch_oct5a.ino \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\"","recipe.hooks.objcopy.postobjcopy.1.pattern_args=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94 sketch_oct5a.ino \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\"","recipe.hooks.objcopy.postobjcopy.2.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\libraries\\ESP_SR\" if exist \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\esp_sr\\srmodels.bin\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\esp_sr\\srmodels.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\srmodels.bin\"","recipe.hooks.objcopy.postobjcopy.3.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0/esptool.exe\" --chip esp32 merge-bin -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.merged.bin\" --pad-to-size 4MB --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","recipe.hooks.objcopy.postobjcopy.3.pattern_args=--chip esp32 merge-bin -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.merged.bin\" --pad-to-size 4MB --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","recipe.hooks.prebuild.1.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\partitions.csv\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.2.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\" if exist \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\partitions.csv\" COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.3.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\" COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\partitions\\huge_app.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.4.pattern=cmd /c IF EXIST \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\bootloader.bin\" ( COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" ) ELSE ( IF EXIST \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\bootloader.bin\" ( COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" ) ELSE ( \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0\\esptool.exe\" --chip esp32 elf2image --flash-mode dio --flash-freq 80m --flash-size 4MB -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\bin\\bootloader_qio_80m.elf\" ) )","recipe.hooks.prebuild.4.pattern_args=--chip esp32 elf2image --flash-mode dio --flash-freq 80m --flash-size 4MB -o","recipe.hooks.prebuild.5.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\build_opt.h\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\build_opt.h\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\"","recipe.hooks.prebuild.6.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\" type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\"","recipe.hooks.prebuild.7.pattern=cmd /c type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.prebuild.8.pattern=cmd /c COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\sdkconfig\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sdkconfig\"","recipe.objcopy.bin.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0/esptool.exe\" --chip esp32 elf2image --flash-mode \"dio\" --flash-freq \"80m\" --flash-size \"4MB\" --elf-sha256-offset 0xb0 -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.objcopy.bin.pattern_args=--chip esp32 elf2image --flash-mode \"dio\" --flash-freq \"80m\" --flash-size \"4MB\" --elf-sha256-offset 0xb0 -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.objcopy.partitions.bin.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_esp32part.exe\" -q \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\"","recipe.output.save_file=sketch_oct5a.ino.esp32.bin","recipe.output.tmp_file=sketch_oct5a.ino.bin","recipe.size.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-size\" -A \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.size.regex=^(?:\\.iram0\\.text|\\.iram0\\.vectors|\\.dram0\\.data|\\.dram1\\.data|\\.flash\\.text|\\.flash\\.rodata|\\.flash\\.appdesc|\\.flash\\.init_array|\\.eh_frame|)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.dram0\\.data|\\.dram0\\.bss|\\.dram1\\.data|\\.dram1\\.bss|\\.noinit)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32","runtime.ide.path=C:\\Program Files\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esp-rv32-2411.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-rv32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-x32-2411.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp-x32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp32-arduino-libs-idf-release_v5.5-129cd0d2-v4.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","runtime.tools.esp32-arduino-libs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","runtime.tools.esptool_py-5.1.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","runtime.tools.esptool_py.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","runtime.tools.mdns-discovery-1.0.6.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.6","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs-4.0.2-db0513a.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\4.0.2-db0513a","runtime.tools.mklittlefs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\4.0.2-db0513a","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.openocd-esp32-v0.12.0-esp32-20250707.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707","runtime.tools.openocd-esp32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gdb-16.2_20250324.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.2.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.2","runtime.tools.serial-discovery-1.3.3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.3","runtime.tools.serial-discovery-1.3.5.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.5","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery-1.4.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-monitor-0.10.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.10.0","runtime.tools.serial-monitor-0.11.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.11.0","runtime.tools.serial-monitor-0.12.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.12.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.14.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.14.1","runtime.tools.serial-monitor-0.15.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.xtensa-esp-elf-gdb-16.2_20250324.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","serial.disableDTR=true","serial.disableRTS=true","sketch_path=C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","software=ARDUINO","tools.avrdude.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.dfu-util.cmd=dfu-util","tools.dfu-util.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","tools.dfu-util.upload.params.quiet=","tools.dfu-util.upload.params.verbose=-d","tools.dfu-util.upload.pattern=\"{path}/{cmd}\" --device {vid.0}:{pid.0} -D \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" -Q","tools.esp32-arduino-libs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","tools.esp_ota.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\espota.exe\" -r","tools.esp_ota.upload.field.password=Password","tools.esp_ota.upload.field.password.secret=true","tools.esp_ota.upload.pattern={cmd} -i {upload.port.address} -p {upload.port.properties.port} \"--auth={upload.field.password}\" -f \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esp_ota.upload.protocol=network","tools.esptool_py.bootloader.params.quiet=","tools.esptool_py.bootloader.params.verbose=","tools.esptool_py.bootloader.pattern=","tools.esptool_py.bootloader.protocol=serial","tools.esptool_py.cmd=esptool.exe","tools.esptool_py.erase.params.quiet=","tools.esptool_py.erase.params.verbose=","tools.esptool_py.erase.pattern=\"{path}/{cmd}\" {erase.pattern_args}","tools.esptool_py.erase.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset erase-flash","tools.esptool_py.erase.protocol=serial","tools.esptool_py.network_cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\espota.exe\" -r","tools.esptool_py.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","tools.esptool_py.program.params.quiet=","tools.esptool_py.program.params.verbose=","tools.esptool_py.program.pattern=\"{path}/{cmd}\" {program.pattern_args}","tools.esptool_py.program.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset write-flash -z --flash-mode keep --flash-freq keep --flash-size keep 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esptool_py.upload.network_pattern={network_cmd} -i \"{serial.port}\" -p \"{network.port}\" \"--auth={network.password}\" -f \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esptool_py.upload.params.quiet=","tools.esptool_py.upload.params.verbose=","tools.esptool_py.upload.pattern=\"{path}/{cmd}\" {upload.pattern_args}","tools.esptool_py.upload.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset write-flash  -z --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py.upload.protocol=serial","tools.esptool_py_app_only.cmd=esptool.exe","tools.esptool_py_app_only.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","tools.esptool_py_app_only.upload.params.quiet=","tools.esptool_py_app_only.upload.params.verbose=","tools.esptool_py_app_only.upload.pattern=\"{path}/{cmd}\" --chip esp32 --port \"{serial.port}\" --baud 921600  --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB {build.flash_offset} \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py_app_only.upload.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB {build.flash_offset} \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py_app_only.upload.protocol=serial","tools.gen_esp32part.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_esp32part.exe\"","tools.gen_insights_pkg.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_insights_package.exe\"","tools.riscv32-esp-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","tools.riscv32-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","tools.xtensa-esp-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","tools.xtensa-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","upload.erase_cmd=","upload.extra_flags=","upload.flags=","upload.maximum_data_size=327680","upload.maximum_size=3145728","upload.speed=921600","upload.tool=esptool_py","upload.tool.default=esptool_py","upload.tool.network=esp_ota","version=3.3.1"]}}
>>>
Content-Length: 118

{"jsonrpc":"2.0","id":"3","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"3","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 113

{"jsonrpc":"2.0","id":"4","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"4","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 141

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"0/1","percentage":0}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 245

{"jsonrpc":"2.0","id":28,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":1}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":28,"result":null}
<<<
Content-Length: 245

{"jsonrpc":"2.0","id":29,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":29,"result":null}
<<<
Content-Length: 245

{"jsonrpc":"2.0","id":30,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 39

{"jsonrpc":"2.0","id":30,"result":null}
<<<
Content-Length: 319

{"jsonrpc":"2.0","id":31,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":168,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":31,"result":[]}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":4},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":168,"character":0}},"rangeLength":4114,"text":""}]}}Content-Length: 218

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":32}}Content-Length: 218

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}
>>>
Content-Length: 37

{"jsonrpc":"2.0","id":32,"result":[]}Content-Length: 37

{"jsonrpc":"2.0","id":33,"result":[]}Content-Length: 118

{"jsonrpc":"2.0","id":"5","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"5","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}
<<<
Content-Length: 225

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":4},"text":""}}Content-Length: 4585

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":5},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x, y + 12);\n  tft.printf(\"%d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(20, 12);\n  tft.print(\"WLAN\");\n  tft.setCursor(120, 12);\n  tft.print(\"CH\");\n  tft.setCursor(155, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen\n  tft.setCursor(210, 12);\n  tft.print(\"Bluetooth\");\n  tft.setCursor(292, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(190, 0, 190, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 189, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);\n      tft.print(ssid);\n\n      // Kanal\n      tft.setCursor(120, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI\n      drawRSSIValue(160, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(193, y - 19, 127, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(195, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: nur letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 10) name = name.substring(0, 10);\n      tft.print(name);\n\n      drawRSSIValue(283, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}]}}






Started logging.

<<<
Content-Length: 3200

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":20664,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"c:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","rootUri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a","name":"sketch_oct5a"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4491

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","languageId":"cpp","version":5,"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x, y + 12);\n  tft.printf(\"%d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(20, 12);\n  tft.print(\"WLAN\");\n  tft.setCursor(120, 12);\n  tft.print(\"CH\");\n  tft.setCursor(155, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen\n  tft.setCursor(210, 12);\n  tft.print(\"Bluetooth\");\n  tft.setCursor(292, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(190, 0, 190, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 189, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);\n      tft.print(ssid);\n\n      // Kanal\n      tft.setCursor(120, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI\n      drawRSSIValue(160, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(193, y - 19, 127, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(195, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: nur letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 10) name = name.substring(0, 10);\n      tft.print(name);\n\n      drawRSSIValue(283, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}}Content-Length: 217

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 4472

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":5},"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x, y + 12);\n  tft.printf(\"%d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(20, 12);\n  tft.print(\"WLAN\");\n  tft.setCursor(120, 12);\n  tft.print(\"CH\");\n  tft.setCursor(155, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen\n  tft.setCursor(210, 12);\n  tft.print(\"Bluetooth\");\n  tft.setCursor(292, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(190, 0, 190, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 189, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);\n      tft.print(ssid);\n\n      // Kanal\n      tft.setCursor(120, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI\n      drawRSSIValue(160, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(193, y - 19, 127, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(195, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: nur letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 10) name = name.substring(0, 10);\n      tft.print(name);\n\n      drawRSSIValue(283, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3078

{"jsonrpc":"2.0","id":1,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":25}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":21,"character":0},"end":{"line":25,"character":1}},"selectionRange":{"start":{"line":21,"character":5},"end":{"line":21,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":28,"character":0},"end":{"line":49,"character":1}},"selectionRange":{"start":{"line":28,"character":5},"end":{"line":28,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":52,"character":0},"end":{"line":73,"character":1}},"selectionRange":{"start":{"line":52,"character":5},"end":{"line":52,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":76,"character":0},"end":{"line":125,"character":1}},"selectionRange":{"start":{"line":76,"character":5},"end":{"line":76,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":127,"character":0},"end":{"line":145,"character":1}},"selectionRange":{"start":{"line":127,"character":5},"end":{"line":127,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":147,"character":0},"end":{"line":175,"character":1}},"selectionRange":{"start":{"line":147,"character":5},"end":{"line":147,"character":9}}}]}
<<<
n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 80670

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildPath":"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94","buildOutputUri":"file:///c%3A/Users/baerb/AppData/Local/arduino/sketches/DB967282F33456BE0552555DDE24DC94","executableSectionsSize":[{"name":"text","size":1686431,"maxSize":3145728},{"name":"data","size":59752,"maxSize":327680}],"usedLibraries":[{"name":"WiFi","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"Enables network connection (local and Internet) using the ESP32 built-in WiFi.","paragraph":"With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks. The IP address can be assigned statically or through a DHCP. The library can also manage DNS.","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\FTM\\FTM_Initiator","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\FTM\\FTM_Responder","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\SimpleWiFiServer","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WPS","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiAccessPoint","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiBlueToothSwitch","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClient","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientBasic","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientConnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientEnterprise","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientEvents","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientStaticIP","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiExtender","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiIPv6","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiMulti","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiMultiAdvanced","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanAsync","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanDualAntenna","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanTime","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiSmartConfig","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiTelnetToSerial","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiUDPClient"],"providesIncludes":["WiFi.h","WiFiAP.h","WiFiClient.h","WiFiGeneric.h","WiFiMulti.h","WiFiSTA.h","WiFiScan.h","WiFiServer.h","WiFiType.h","WiFiUdp.h"],"properties":{},"compatibleWith":{}},{"name":"Networking","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"General network management library.","paragraph":"This library holds all common functionality of the different network interfaces.","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\Network","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\Network\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":[],"providesIncludes":["Network.h","NetworkClient.h","NetworkEvents.h","NetworkInterface.h","NetworkManager.h","NetworkServer.h","NetworkUdp.h"],"properties":{},"compatibleWith":{}},{"name":"BluetoothSerial","author":"Evandro Copercini","maintainer":"Evandro Copercini","sentence":"Simple UART to Classical Bluetooth bridge for ESP32","paragraph":"","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\DiscoverConnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\GetLocalMAC","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBTM","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT_Legacy","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT_SSP","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\bt_classic_device_discovery","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\bt_remove_paired_devices"],"providesIncludes":["BTAddress.h","BTAdvertisedDevice.h","BTScan.h","BluetoothSerial.h"],"properties":{},"compatibleWith":{}},{"name":"BLE","author":"Neil Kolban <kolban1@kolban.com>","maintainer":"lucasssvaz","sentence":"BLE functions for ESP32","paragraph":"This library provides an implementation Bluetooth Low Energy support for the ESP32 using the Arduino platform.","website":"https://github.com/espressif/arduino-esp32/tree/master/libraries/BLE","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_extended_scan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_multi_advertising","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_periodic_advertising","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_periodic_sync","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Beacon_Scanner","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Client","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Client_secure_static_passkey","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\EddystoneTLM_Beacon","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\EddystoneURL_Beacon","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Notify","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Scan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_multiconnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_secure_authorization","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_secure_static_passkey","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\UART","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Write","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\iBeacon"],"providesIncludes":["BLEDevice.h","BLEUtils.h","BLEScan.h","BLEAdvertisedDevice.h"],"properties":{},"compatibleWith":{}},{"name":"TFT_eSPI","author":"Bodmer","maintainer":"Bodmer","sentence":"TFT graphics library for Arduino processors with performance optimisation for RP2040, STM32, ESP8266 and ESP32","paragraph":"Supports TFT displays using drivers (ILI9341 etc.) that operate with hardware SPI or 8/16-bit parallel.","website":"https://github.com/Bodmer/TFT_eSPI","category":"Display","installDir":"C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI","sourceDir":"c:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.5.43","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\Arduino_Life","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\Pong_v3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Clock_Digital","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Meter_5","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Rainbow","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_flash_jpg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_graphicstest_PDQ3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_graphicstest_small","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\UTFT_demo_fast","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\All_Free_Fonts_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Cellular_Automata","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Free_Font_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Keypad_240x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Read_ID_bitbash","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_ArcFill","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Clock_Digital","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Custom_Fonts","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_FillArcSpiral","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Float_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Mandlebrot","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Matrix","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Meter_linear","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Pie_Chart","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Pong","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Rainbow_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Read_Reg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Spiro","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Starfield","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_String_Align","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Terminal","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_graphicstest_PDQ","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_graphicstest_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\UTFT_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Cellular_Automata","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Demo_3D_cube","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Free_Font_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Graph_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Keypad_480x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Meter_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Padding_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Rainbow480","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_String_Align","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_flash_jpg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_graphicstest_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_ring_meter","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Touch_Controller_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\UTFT_Demo_480x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\Bouncy_Circles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\Flash_Jpg_DMA","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\SpriteRotatingCube","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\boing_ball","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Buttons\\Button_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Graphs\\Graph_demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Graphs\\Graph_demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Meters\\Analogue_meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Sliders\\Slider_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Animated_Eyes_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Animated_Eyes_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\ESP32_SDcard_jpeg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\ESP8266_uncannyEyes","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Gradient_Fill","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Julia_Set","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Local_Custom_Fonts","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\On_Off_Button","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Button_Label_Datum","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Flash_Bitmap","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_SPIFFS_BMP","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Screen_Capture","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Touch_calibrate","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Viewport_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Viewport_graphicstest","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\alphaBlend_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\drawXBitmap","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\Flash_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\Flash_transparent_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\LittleFS_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\LittleFS_PNG_DMA","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_1_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_2_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_3_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_4_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SD_Card\\ESP32_Smooth_Font_SD","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Anti-aliased_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Arc_meter_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Colour_Wheel","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Draw_Arc","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Draw_Smooth_Circles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Arc","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Graphics_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Rounded_Rectangles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Animated_dial","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\ESP32-2432S032C-I_Sprites","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\One_bit_Sprite_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\One_bit_Yin_Yang","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Orrery","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_TFT_Rainbow","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_draw","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_draw_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_image_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_16bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_1bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_8bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_wrap_1bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Transparent_Sprite_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Transparent_Sprite_Demo_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Colour_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Read_User_Setup","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\TFT_ReadWrite_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Test_Touch_Controller","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\ePaper\\Floyd_Steinberg"],"providesIncludes":["TFT_eSPI.h"],"properties":{},"compatibleWith":{}},{"name":"SPI","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus. For all Arduino boards, BUT Arduino DUE.","paragraph":"","website":"http://arduino.cc/en/Reference/SPI","category":"Signal Input/Output","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI\\examples\\SPI_Multiple_Buses"],"providesIncludes":["SPI.h"],"properties":{},"compatibleWith":{}},{"name":"FS","author":"Hristo Gochkov, Ivan Grokhtkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"ESP32 File System","paragraph":"","website":"","category":"Data Storage","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\FS","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\FS\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":[],"providesIncludes":["FS.h","FSImpl.h","vfs_api.h"],"properties":{},"compatibleWith":{}},{"name":"SPIFFS","author":"Hristo Gochkov, Ivan Grokhtkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"ESP32 SPIFFS File System","paragraph":"","website":"","category":"Data Storage","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\examples\\SPIFFS_Test","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\examples\\SPIFFS_time"],"providesIncludes":["SPIFFS.h"],"properties":{},"compatibleWith":{}}],"buildPlatform":{"id":"esp32:esp32","version":"3.3.1","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","packageUrl":"https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json"},"buildProperties":["_id=esp32","bootloader.tool=esptool_py","bootloader.tool.default=esptool_py","build.arch=ESP32","build.board=ESP32_DEV","build.board.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","build.boot=qio","build.boot_freq=80m","build.bootloader_addr=0x1000","build.code_debug=0","build.copy_jtag_files=0","build.core=esp32","build.core.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\cores\\esp32","build.core.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","build.custom_bootloader=bootloader","build.custom_partitions=partitions","build.defines=","build.event_core=-DARDUINO_EVENT_RUNNING_CORE=1","build.extra_flags=-DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0 ","build.extra_flags.esp32=-DARDUINO_USB_CDC_ON_BOOT=0","build.extra_flags.esp32c2=-DARDUINO_USB_CDC_ON_BOOT=0","build.extra_flags.esp32c3=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32c5=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32c6=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32h2=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32p4=-DARDUINO_USB_MODE={build.usb_mode} -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_flags.esp32s2=-DARDUINO_USB_MODE=0 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_flags.esp32s3=-DARDUINO_USB_MODE={build.usb_mode} -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_libs=","build.f_cpu=240000000L","build.flash_freq=80m","build.flash_mode=dio","build.flash_size=4MB","build.fqbn=esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default","build.img_freq=80m","build.library_discovery_phase=0","build.loop_core=-DARDUINO_RUNNING_CORE=1","build.mcu=esp32","build.memory_type=qio_qspi","build.opt.name=build_opt.h","build.opt.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h","build.partitions=huge_app","build.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94","build.project_name=sketch_oct5a.ino","build.source.path=C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","build.system.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\system","build.tarch=xtensa","build.target=esp32","build.variant=esp32","build.variant.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32","build.zigbee_libs=","build.zigbee_mode=","compiler.S.cmd=xtensa-esp32-elf-gcc","compiler.S.extra_flags=","compiler.S.flags=-MMD -c -x assembler-with-cpp \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/S_flags\" -w -Os","compiler.ar.cmd=xtensa-esp32-elf-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=cr","compiler.as.cmd=xtensa-esp32-elf-as","compiler.c.cmd=xtensa-esp32-elf-gcc","compiler.c.elf.cmd=xtensa-esp32-elf-g++","compiler.c.elf.extra_flags=","compiler.c.elf.flags=\"-Wl,--Map=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.map\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/lib\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/ld\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi\" \"-Wl,--wrap=esp_panic_handler\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_flags\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_scripts\"","compiler.c.elf.libs=\"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_libs\"","compiler.c.extra_flags=","compiler.c.flags=-MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/c_flags\" -w -Os -Werror=return-type","compiler.common_werror_flags=-Werror=return-type","compiler.cpp.cmd=xtensa-esp32-elf-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/cpp_flags\" -w -Os -Werror=return-type","compiler.cpreprocessor.flags=\"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\"","compiler.elf2hex.extra_flags=","compiler.libraries.ldflags=","compiler.objcopy.eep.extra_flags=","compiler.optimization_flags=-Os","compiler.optimization_flags.debug=-Og -g3","compiler.optimization_flags.release=-Os","compiler.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/","compiler.prefix=xtensa-esp32-elf-","compiler.sdk.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32","compiler.size.cmd=xtensa-esp32-elf-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","debug.additional_config=debug_config.esp32","debug.cortex-debug.custom.objdumpPath=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-objdump","debug.cortex-debug.custom.request=attach","debug.executable=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf","debug.server=openocd","debug.server.openocd.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707/bin/openocd","debug.server.openocd.scripts.0=board/esp32-wrover-kit-3.3v.cfg","debug.server.openocd.scripts_dir=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707\\share\\openocd\\scripts\\","debug.svd_file=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/ide-debug/svd/esp32.svd","debug.toolchain=gcc","debug.toolchain.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324/bin/","debug.toolchain.prefix=xtensa-esp32-elf","debug_config.esp32.cortex-debug.custom.name=Arduino on ESP32","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.2=thb setup","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.3=c","debug_config.esp32.cortex-debug.custom.postAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32.cortex-debug.custom.postAttachCommands.1=monitor reset halt","debug_config.esp32.cortex-debug.custom.postAttachCommands.2=monitor gdb_sync","debug_config.esp32.cortex-debug.custom.postAttachCommands.3=thb setup","debug_config.esp32.cortex-debug.custom.postAttachCommands.4=c","debug_config.esp32c3.cortex-debug.custom.name=Arduino on ESP32-C3","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.0=set remote hardware-watchpoint-limit 8","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.1=monitor reset","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.2=monitor halt","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.3=monitor gdb_sync","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.4=thb setup","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.0=monitor reset","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.1=monitor halt","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.2=monitor gdb_sync","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.3=thb setup","debug_config.esp32c3.cortex-debug.custom.serverArgs.0=-d3","debug_config.esp32c5=","debug_config.esp32c6=","debug_config.esp32h2=","debug_config.esp32p4=","debug_config.esp32s2.cortex-debug.custom.name=Arduino on ESP32-S2","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.2=thb setup","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.3=c","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.1=monitor reset halt","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.2=monitor gdb_sync","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.3=thb setup","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.4=c","debug_config.esp32s3.cortex-debug.custom.name=Arduino on ESP32-S3","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.1=monitor reset halt","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.2=monitor gdb_sync","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.3=thb setup","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.4=c","debug_config.esp32s3.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32s3.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_script.esp32=esp32-wrover-kit-3.3v.cfg","debug_script.esp32c3=esp32c3-builtin.cfg","debug_script.esp32c5=esp32c5-builtin.cfg","debug_script.esp32c6=esp32c6-builtin.cfg","debug_script.esp32h2=esp32h2-builtin.cfg","debug_script.esp32p4=esp32p4-builtin.cfg","debug_script.esp32s2=esp32s2-kaluga-1.cfg","debug_script.esp32s3=esp32s3-builtin.cfg","extra.time.dst=3600","extra.time.local=1759662944","extra.time.utc=1759655744","extra.time.zone=3600","file_opts.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts","ide_version=10607","menu.CPUFreq.10=10MHz (40MHz XTAL)","menu.CPUFreq.10.build.f_cpu=10000000L","menu.CPUFreq.13=13MHz (26MHz XTAL)","menu.CPUFreq.13.build.f_cpu=13000000L","menu.CPUFreq.160=160MHz (WiFi/BT)","menu.CPUFreq.160.build.f_cpu=160000000L","menu.CPUFreq.20=20MHz (40MHz XTAL)","menu.CPUFreq.20.build.f_cpu=20000000L","menu.CPUFreq.240=240MHz (WiFi/BT)","menu.CPUFreq.240.build.f_cpu=240000000L","menu.CPUFreq.26=26MHz (26MHz XTAL)","menu.CPUFreq.26.build.f_cpu=26000000L","menu.CPUFreq.40=40MHz (40MHz XTAL)","menu.CPUFreq.40.build.f_cpu=40000000L","menu.CPUFreq.80=80MHz (WiFi/BT)","menu.CPUFreq.80.build.f_cpu=80000000L","menu.DebugLevel.debug=Debug","menu.DebugLevel.debug.build.code_debug=4","menu.DebugLevel.error=Error","menu.DebugLevel.error.build.code_debug=1","menu.DebugLevel.info=Info","menu.DebugLevel.info.build.code_debug=3","menu.DebugLevel.none=None","menu.DebugLevel.none.build.code_debug=0","menu.DebugLevel.verbose=Verbose","menu.DebugLevel.verbose.build.code_debug=5","menu.DebugLevel.warn=Warn","menu.DebugLevel.warn.build.code_debug=2","menu.EraseFlash.all=Enabled","menu.EraseFlash.all.upload.erase_cmd=-e","menu.EraseFlash.none=Disabled","menu.EraseFlash.none.upload.erase_cmd=","menu.EventsCore.0=Core 0","menu.EventsCore.0.build.event_core=-DARDUINO_EVENT_RUNNING_CORE=0","menu.EventsCore.1=Core 1","menu.EventsCore.1.build.event_core=-DARDUINO_EVENT_RUNNING_CORE=1","menu.FlashFreq.40=40MHz","menu.FlashFreq.40.build.flash_freq=40m","menu.FlashFreq.80=80MHz","menu.FlashFreq.80.build.flash_freq=80m","menu.FlashMode.dio=DIO","menu.FlashMode.dio.build.boot=dio","menu.FlashMode.dio.build.flash_mode=dio","menu.FlashMode.qio=QIO","menu.FlashMode.qio.build.boot=qio","menu.FlashMode.qio.build.flash_mode=dio","menu.FlashSize.16M=16MB (128Mb)","menu.FlashSize.16M.build.flash_size=16MB","menu.FlashSize.2M=2MB (16Mb)","menu.FlashSize.2M.build.flash_size=2MB","menu.FlashSize.4M=4MB (32Mb)","menu.FlashSize.4M.build.flash_size=4MB","menu.FlashSize.8M=8MB (64Mb)","menu.FlashSize.8M.build.flash_size=8MB","menu.JTAGAdapter.bridge=ESP USB Bridge","menu.JTAGAdapter.bridge.build.copy_jtag_files=1","menu.JTAGAdapter.bridge.build.openocdscript=esp32-bridge.cfg","menu.JTAGAdapter.default=Disabled","menu.JTAGAdapter.default.build.copy_jtag_files=0","menu.JTAGAdapter.external=FTDI Adapter","menu.JTAGAdapter.external.build.copy_jtag_files=1","menu.JTAGAdapter.external.build.openocdscript=esp32-wrover-kit-3.3v.cfg","menu.LoopCore.0=Core 0","menu.LoopCore.0.build.loop_core=-DARDUINO_RUNNING_CORE=0","menu.LoopCore.1=Core 1","menu.LoopCore.1.build.loop_core=-DARDUINO_RUNNING_CORE=1","menu.PSRAM.disabled=Disabled","menu.PSRAM.disabled.build.defines=","menu.PSRAM.disabled.build.extra_libs=","menu.PSRAM.enabled=Enabled","menu.PSRAM.enabled.build.defines=-DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -mfix-esp32-psram-cache-strategy=memw","menu.PSRAM.enabled.build.extra_libs=","menu.PartitionScheme.app3M_fat9M_16MB=16M Flash (3MB APP/9.9MB FATFS)","menu.PartitionScheme.app3M_fat9M_16MB.build.partitions=app3M_fat9M_16MB","menu.PartitionScheme.app3M_fat9M_16MB.upload.maximum_size=3145728","menu.PartitionScheme.custom=Custom","menu.PartitionScheme.custom.build.partitions=","menu.PartitionScheme.custom.upload.maximum_size=16777216","menu.PartitionScheme.default=Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)","menu.PartitionScheme.default.build.partitions=default","menu.PartitionScheme.default_8MB=8M with spiffs (3MB APP/1.5MB SPIFFS)","menu.PartitionScheme.default_8MB.build.partitions=default_8MB","menu.PartitionScheme.default_8MB.upload.maximum_size=3342336","menu.PartitionScheme.defaultffat=Default 4MB with ffat (1.2MB APP/1.5MB FATFS)","menu.PartitionScheme.defaultffat.build.partitions=default_ffat","menu.PartitionScheme.fatflash=16M Flash (2MB APP/12.5MB FATFS)","menu.PartitionScheme.fatflash.build.partitions=ffat","menu.PartitionScheme.fatflash.upload.maximum_size=2097152","menu.PartitionScheme.huge_app=Huge APP (3MB No OTA/1MB SPIFFS)","menu.PartitionScheme.huge_app.build.partitions=huge_app","menu.PartitionScheme.huge_app.upload.maximum_size=3145728","menu.PartitionScheme.min_spiffs=Minimal SPIFFS (1.9MB APP with OTA/190KB SPIFFS)","menu.PartitionScheme.min_spiffs.build.partitions=min_spiffs","menu.PartitionScheme.min_spiffs.upload.maximum_size=1966080","menu.PartitionScheme.minimal=Minimal (1.3MB APP/700KB SPIFFS)","menu.PartitionScheme.minimal.build.partitions=minimal","menu.PartitionScheme.no_fs=No FS 4MB (2MB APP x2)","menu.PartitionScheme.no_fs.build.partitions=no_fs","menu.PartitionScheme.no_fs.upload.maximum_size=2031616","menu.PartitionScheme.no_ota=No OTA (2MB APP/2MB SPIFFS)","menu.PartitionScheme.no_ota.build.partitions=no_ota","menu.PartitionScheme.no_ota.upload.maximum_size=2097152","menu.PartitionScheme.noota_3g=No OTA (1MB APP/3MB SPIFFS)","menu.PartitionScheme.noota_3g.build.partitions=noota_3g","menu.PartitionScheme.noota_3g.upload.maximum_size=1048576","menu.PartitionScheme.noota_3gffat=No OTA (1MB APP/3MB FATFS)","menu.PartitionScheme.noota_3gffat.build.partitions=noota_3gffat","menu.PartitionScheme.noota_3gffat.upload.maximum_size=1048576","menu.PartitionScheme.noota_ffat=No OTA (2MB APP/2MB FATFS)","menu.PartitionScheme.noota_ffat.build.partitions=noota_ffat","menu.PartitionScheme.noota_ffat.upload.maximum_size=2097152","menu.PartitionScheme.rainmaker=RainMaker 4MB","menu.PartitionScheme.rainmaker.build.partitions=rainmaker","menu.PartitionScheme.rainmaker.upload.maximum_size=1966080","menu.PartitionScheme.rainmaker_4MB=RainMaker 4MB No OTA","menu.PartitionScheme.rainmaker_4MB.build.partitions=rainmaker_4MB_no_ota","menu.PartitionScheme.rainmaker_4MB.upload.maximum_size=4038656","menu.PartitionScheme.rainmaker_8MB=RainMaker 8MB","menu.PartitionScheme.rainmaker_8MB.build.partitions=rainmaker_8MB","menu.PartitionScheme.rainmaker_8MB.upload.maximum_size=4096000","menu.PartitionScheme.zigbee_zczr=Zigbee ZCZR 4MB with spiffs","menu.PartitionScheme.zigbee_zczr.build.partitions=zigbee_zczr","menu.PartitionScheme.zigbee_zczr.upload.maximum_size=1310720","menu.PartitionScheme.zigbee_zczr_8MB=Zigbee ZCZR 8MB with spiffs","menu.PartitionScheme.zigbee_zczr_8MB.build.partitions=zigbee_zczr_8MB","menu.PartitionScheme.zigbee_zczr_8MB.upload.maximum_size=3407872","menu.UploadSpeed.115200=115200","menu.UploadSpeed.115200.upload.speed=115200","menu.UploadSpeed.230400=230400","menu.UploadSpeed.230400.upload.speed=230400","menu.UploadSpeed.256000=256000","menu.UploadSpeed.256000.upload.speed=256000","menu.UploadSpeed.460800.linux=460800","menu.UploadSpeed.460800.macosx=460800","menu.UploadSpeed.460800.upload.speed=460800","menu.UploadSpeed.512000=512000","menu.UploadSpeed.512000.upload.speed=512000","menu.UploadSpeed.921600=921600","menu.UploadSpeed.921600.upload.speed=921600","menu.ZigbeeMode.default=Disabled","menu.ZigbeeMode.default.build.zigbee_libs=","menu.ZigbeeMode.default.build.zigbee_mode=","menu.ZigbeeMode.zczr=Zigbee ZCZR (coordinator/router)","menu.ZigbeeMode.zczr.build.zigbee_libs=-lesp_zb_api.zczr -lzboss_stack.zczr -lzboss_port.remote","menu.ZigbeeMode.zczr.build.zigbee_mode=-DZIGBEE_MODE_ZCZR","monitor_port.serial.dtr=off","monitor_port.serial.rts=off","name=ESP32 Dev Module","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","recipe.S.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc\"  -MMD -c -x assembler-with-cpp \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/S_flags\" -w -Os -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc-ar\" cr  \"{archive_file_path}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-g++\" \"-Wl,--Map=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.map\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/lib\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/ld\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi\" \"-Wl,--wrap=esp_panic_handler\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_flags\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_scripts\"  -Wl,--start-group {object_files} \"{archive_file_path}\"   \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_libs\"  -Wl,--end-group -Wl,-EL -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.c.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc\"  -MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/c_flags\" -w -Os -Werror=return-type -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-g++\"  -MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/cpp_flags\" -w -Os -Werror=return-type -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.hooks.core.postbuild.1.pattern=cmd /c type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.core.prebuild.1.pattern=cmd /c echo \"-DARDUINO_CORE_BUILD\" > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.objcopy.postobjcopy.1.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\libraries\\Insights\" \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_insights_package.exe\" C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94 sketch_oct5a.ino \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\"","recipe.hooks.objcopy.postobjcopy.1.pattern_args=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94 sketch_oct5a.ino \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\"","recipe.hooks.objcopy.postobjcopy.2.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\libraries\\ESP_SR\" if exist \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\esp_sr\\srmodels.bin\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\esp_sr\\srmodels.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\srmodels.bin\"","recipe.hooks.objcopy.postobjcopy.3.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0/esptool.exe\" --chip esp32 merge-bin -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.merged.bin\" --pad-to-size 4MB --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","recipe.hooks.objcopy.postobjcopy.3.pattern_args=--chip esp32 merge-bin -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.merged.bin\" --pad-to-size 4MB --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","recipe.hooks.prebuild.1.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\partitions.csv\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.2.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\" if exist \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\partitions.csv\" COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.3.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\" COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\partitions\\huge_app.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.4.pattern=cmd /c IF EXIST \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\bootloader.bin\" ( COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" ) ELSE ( IF EXIST \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\bootloader.bin\" ( COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" ) ELSE ( \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0\\esptool.exe\" --chip esp32 elf2image --flash-mode dio --flash-freq 80m --flash-size 4MB -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\bin\\bootloader_qio_80m.elf\" ) )","recipe.hooks.prebuild.4.pattern_args=--chip esp32 elf2image --flash-mode dio --flash-freq 80m --flash-size 4MB -o","recipe.hooks.prebuild.5.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\build_opt.h\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\build_opt.h\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\"","recipe.hooks.prebuild.6.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\" type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\"","recipe.hooks.prebuild.7.pattern=cmd /c type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.prebuild.8.pattern=cmd /c COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\sdkconfig\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sdkconfig\"","recipe.objcopy.bin.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0/esptool.exe\" --chip esp32 elf2image --flash-mode \"dio\" --flash-freq \"80m\" --flash-size \"4MB\" --elf-sha256-offset 0xb0 -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.objcopy.bin.pattern_args=--chip esp32 elf2image --flash-mode \"dio\" --flash-freq \"80m\" --flash-size \"4MB\" --elf-sha256-offset 0xb0 -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.objcopy.partitions.bin.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_esp32part.exe\" -q \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\"","recipe.output.save_file=sketch_oct5a.ino.esp32.bin","recipe.output.tmp_file=sketch_oct5a.ino.bin","recipe.size.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-size\" -A \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.size.regex=^(?:\\.iram0\\.text|\\.iram0\\.vectors|\\.dram0\\.data|\\.dram1\\.data|\\.flash\\.text|\\.flash\\.rodata|\\.flash\\.appdesc|\\.flash\\.init_array|\\.eh_frame|)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.dram0\\.data|\\.dram0\\.bss|\\.dram1\\.data|\\.dram1\\.bss|\\.noinit)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32","runtime.ide.path=C:\\Program Files\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esp-rv32-2411.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-rv32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-x32-2411.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp-x32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp32-arduino-libs-idf-release_v5.5-129cd0d2-v4.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","runtime.tools.esp32-arduino-libs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","runtime.tools.esptool_py-5.1.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","runtime.tools.esptool_py.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","runtime.tools.mdns-discovery-1.0.6.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.6","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs-4.0.2-db0513a.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\4.0.2-db0513a","runtime.tools.mklittlefs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\4.0.2-db0513a","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.openocd-esp32-v0.12.0-esp32-20250707.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707","runtime.tools.openocd-esp32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gdb-16.2_20250324.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.2.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.2","runtime.tools.serial-discovery-1.3.3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.3","runtime.tools.serial-discovery-1.3.5.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.5","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery-1.4.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-monitor-0.10.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.10.0","runtime.tools.serial-monitor-0.11.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.11.0","runtime.tools.serial-monitor-0.12.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.12.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.14.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.14.1","runtime.tools.serial-monitor-0.15.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.xtensa-esp-elf-gdb-16.2_20250324.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","serial.disableDTR=true","serial.disableRTS=true","sketch_path=C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","software=ARDUINO","tools.avrdude.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.dfu-util.cmd=dfu-util","tools.dfu-util.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","tools.dfu-util.upload.params.quiet=","tools.dfu-util.upload.params.verbose=-d","tools.dfu-util.upload.pattern=\"{path}/{cmd}\" --device {vid.0}:{pid.0} -D \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" -Q","tools.esp32-arduino-libs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","tools.esp_ota.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\espota.exe\" -r","tools.esp_ota.upload.field.password=Password","tools.esp_ota.upload.field.password.secret=true","tools.esp_ota.upload.pattern={cmd} -i {upload.port.address} -p {upload.port.properties.port} \"--auth={upload.field.password}\" -f \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esp_ota.upload.protocol=network","tools.esptool_py.bootloader.params.quiet=","tools.esptool_py.bootloader.params.verbose=","tools.esptool_py.bootloader.pattern=","tools.esptool_py.bootloader.protocol=serial","tools.esptool_py.cmd=esptool.exe","tools.esptool_py.erase.params.quiet=","tools.esptool_py.erase.params.verbose=","tools.esptool_py.erase.pattern=\"{path}/{cmd}\" {erase.pattern_args}","tools.esptool_py.erase.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset erase-flash","tools.esptool_py.erase.protocol=serial","tools.esptool_py.network_cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\espota.exe\" -r","tools.esptool_py.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","tools.esptool_py.program.params.quiet=","tools.esptool_py.program.params.verbose=","tools.esptool_py.program.pattern=\"{path}/{cmd}\" {program.pattern_args}","tools.esptool_py.program.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset write-flash -z --flash-mode keep --flash-freq keep --flash-size keep 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esptool_py.upload.network_pattern={network_cmd} -i \"{serial.port}\" -p \"{network.port}\" \"--auth={network.password}\" -f \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esptool_py.upload.params.quiet=","tools.esptool_py.upload.params.verbose=","tools.esptool_py.upload.pattern=\"{path}/{cmd}\" {upload.pattern_args}","tools.esptool_py.upload.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset write-flash  -z --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py.upload.protocol=serial","tools.esptool_py_app_only.cmd=esptool.exe","tools.esptool_py_app_only.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","tools.esptool_py_app_only.upload.params.quiet=","tools.esptool_py_app_only.upload.params.verbose=","tools.esptool_py_app_only.upload.pattern=\"{path}/{cmd}\" --chip esp32 --port \"{serial.port}\" --baud 921600  --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB {build.flash_offset} \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py_app_only.upload.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB {build.flash_offset} \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py_app_only.upload.protocol=serial","tools.gen_esp32part.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_esp32part.exe\"","tools.gen_insights_pkg.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_insights_package.exe\"","tools.riscv32-esp-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","tools.riscv32-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","tools.xtensa-esp-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","tools.xtensa-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","upload.erase_cmd=","upload.extra_flags=","upload.flags=","upload.maximum_data_size=327680","upload.maximum_size=3145728","upload.speed=921600","upload.tool=esptool_py","upload.tool.default=esptool_py","upload.tool.network=esp_ota","version=3.3.1"]}}Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/57","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/57","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/57","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/57","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/57","percentage":14}}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/57","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/57","percentage":15}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/57","percentage":17}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/57","percentage":17}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/57","percentage":19}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/57","percentage":19}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/57","percentage":21}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/57","percentage":21}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/57","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/57","percentage":24}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/57","percentage":24}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/57","percentage":26}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/57","percentage":26}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/57","percentage":29}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/57","percentage":29}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/57","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/57","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/57","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/57","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/57","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/57","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/57","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/57","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/57","percentage":42}}}
<<<
Content-Length: 247

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":161,"character":23}}}
>>>
Content-Length: 272

{"jsonrpc":"2.0","id":2,"result":{"contents":{"kind":"markdown","value":"### variable `tmp`  \n\n---\nType: `struct WifiEntry`  \n\n---\n```cpp\n// In loop\nWifiEntry tmp = entries[i]\n```"},"range":{"start":{"line":161,"character":22},"end":{"line":161,"character":23}}}}
<<<
Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}
>>>
Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/57","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/57","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/57","percentage":45}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/57","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/57","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/57","percentage":49}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/57","percentage":49}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/58","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/58","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/58","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/58","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/58","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/58","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}
<<<
Content-Length: 247

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":112,"character":17}}}
>>>
Content-Length: 353

{"jsonrpc":"2.0","id":3,"result":{"contents":{"kind":"markdown","value":"### variable `mac`  \n\n---\nType: `class String`  \nMAC kürzen: nur letzte 3 Bytes anzeigen  \n\n---\n```cpp\n// In drawBleResults\nString mac = device-\u003egetAddress().toString().c_str()\n```"},"range":{"start":{"line":112,"character":15},"end":{"line":112,"character":18}}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}
<<<
Content-Length: 246

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":91,"character":12}}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":4,"result":{"contents":{"kind":"markdown","value":"### variable `devices`  \n\n---\nType: `BLEAdvertisedDevice *[count]`  \n\n---\n```cpp\n// In drawBleResults\nBLEAdvertisedDevice *devices[count]\n```"},"range":{"start":{"line":91,"character":8},"end":{"line":91,"character":15}}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}
<<<
Content-Length: 245

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":69,"character":7}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/58","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/58","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/58","percentage":68}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/58","percentage":68}}}
<<<
Content-Length: 244

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 244

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/58","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/58","percentage":74}}}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":176,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":6},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":176,"character":0}},"rangeLength":4050,"text":""}]}}Content-Length: 217

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}Content-Length: 218

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":9,"result":[]}Content-Length: 37

{"jsonrpc":"2.0","id":10,"result":[]}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}
<<<
Content-Length: 4714

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":7},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);  // rechtsbündig (ungefähr)\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(152, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen\n  tft.setCursor(210, 12);\n  tft.print(\"Bluetooth\");\n  tft.setCursor(290, 12);\n  tft.print(\"dBm\");\n\n  // Linien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 9) ssid = ssid.substring(0, 9);\n      tft.print(ssid);\n\n      // Kanal (rechtsbündig bei ca. x=138)\n      tft.setCursor(128, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI (rechtsbündig bei ca. x=178)\n      drawRSSIValue(178, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      drawRSSIValue(313, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}]}}






Started logging.

<<<
Content-Length: 3200

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":20664,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"c:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","rootUri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a","name":"sketch_oct5a"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4620

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","languageId":"cpp","version":7,"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);  // rechtsbündig (ungefähr)\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(152, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen\n  tft.setCursor(210, 12);\n  tft.print(\"Bluetooth\");\n  tft.setCursor(290, 12);\n  tft.print(\"dBm\");\n\n  // Linien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 9) ssid = ssid.substring(0, 9);\n      tft.print(ssid);\n\n      // Kanal (rechtsbündig bei ca. x=138)\n      tft.setCursor(128, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI (rechtsbündig bei ca. x=178)\n      drawRSSIValue(178, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      drawRSSIValue(313, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}}Content-Length: 217

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 4601

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":7},"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);  // rechtsbündig (ungefähr)\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(152, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen\n  tft.setCursor(210, 12);\n  tft.print(\"Bluetooth\");\n  tft.setCursor(290, 12);\n  tft.print(\"dBm\");\n\n  // Linien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 9) ssid = ssid.substring(0, 9);\n      tft.print(ssid);\n\n      // Kanal (rechtsbündig bei ca. x=138)\n      tft.setCursor(128, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI (rechtsbündig bei ca. x=178)\n      drawRSSIValue(178, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      drawRSSIValue(313, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3078

{"jsonrpc":"2.0","id":1,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":25}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":126,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":128,"character":0},"end":{"line":146,"character":1}},"selectionRange":{"start":{"line":128,"character":5},"end":{"line":128,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":148,"character":0},"end":{"line":176,"character":1}},"selectionRange":{"start":{"line":148,"character":5},"end":{"line":148,"character":9}}}]}
<<<
n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 80670

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildPath":"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94","buildOutputUri":"file:///c%3A/Users/baerb/AppData/Local/arduino/sketches/DB967282F33456BE0552555DDE24DC94","executableSectionsSize":[{"name":"text","size":1686419,"maxSize":3145728},{"name":"data","size":59752,"maxSize":327680}],"usedLibraries":[{"name":"WiFi","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"Enables network connection (local and Internet) using the ESP32 built-in WiFi.","paragraph":"With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks. The IP address can be assigned statically or through a DHCP. The library can also manage DNS.","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\FTM\\FTM_Initiator","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\FTM\\FTM_Responder","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\SimpleWiFiServer","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WPS","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiAccessPoint","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiBlueToothSwitch","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClient","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientBasic","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientConnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientEnterprise","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientEvents","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientStaticIP","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiExtender","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiIPv6","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiMulti","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiMultiAdvanced","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanAsync","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanDualAntenna","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanTime","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiSmartConfig","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiTelnetToSerial","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiUDPClient"],"providesIncludes":["WiFi.h","WiFiAP.h","WiFiClient.h","WiFiGeneric.h","WiFiMulti.h","WiFiSTA.h","WiFiScan.h","WiFiServer.h","WiFiType.h","WiFiUdp.h"],"properties":{},"compatibleWith":{}},{"name":"Networking","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"General network management library.","paragraph":"This library holds all common functionality of the different network interfaces.","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\Network","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\Network\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":[],"providesIncludes":["Network.h","NetworkClient.h","NetworkEvents.h","NetworkInterface.h","NetworkManager.h","NetworkServer.h","NetworkUdp.h"],"properties":{},"compatibleWith":{}},{"name":"BluetoothSerial","author":"Evandro Copercini","maintainer":"Evandro Copercini","sentence":"Simple UART to Classical Bluetooth bridge for ESP32","paragraph":"","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\DiscoverConnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\GetLocalMAC","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBTM","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT_Legacy","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT_SSP","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\bt_classic_device_discovery","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\bt_remove_paired_devices"],"providesIncludes":["BTAddress.h","BTAdvertisedDevice.h","BTScan.h","BluetoothSerial.h"],"properties":{},"compatibleWith":{}},{"name":"BLE","author":"Neil Kolban <kolban1@kolban.com>","maintainer":"lucasssvaz","sentence":"BLE functions for ESP32","paragraph":"This library provides an implementation Bluetooth Low Energy support for the ESP32 using the Arduino platform.","website":"https://github.com/espressif/arduino-esp32/tree/master/libraries/BLE","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_extended_scan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_multi_advertising","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_periodic_advertising","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_periodic_sync","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Beacon_Scanner","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Client","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Client_secure_static_passkey","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\EddystoneTLM_Beacon","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\EddystoneURL_Beacon","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Notify","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Scan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_multiconnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_secure_authorization","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_secure_static_passkey","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\UART","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Write","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\iBeacon"],"providesIncludes":["BLEDevice.h","BLEUtils.h","BLEScan.h","BLEAdvertisedDevice.h"],"properties":{},"compatibleWith":{}},{"name":"TFT_eSPI","author":"Bodmer","maintainer":"Bodmer","sentence":"TFT graphics library for Arduino processors with performance optimisation for RP2040, STM32, ESP8266 and ESP32","paragraph":"Supports TFT displays using drivers (ILI9341 etc.) that operate with hardware SPI or 8/16-bit parallel.","website":"https://github.com/Bodmer/TFT_eSPI","category":"Display","installDir":"C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI","sourceDir":"c:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.5.43","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\Arduino_Life","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\Pong_v3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Clock_Digital","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Meter_5","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Rainbow","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_flash_jpg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_graphicstest_PDQ3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_graphicstest_small","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\UTFT_demo_fast","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\All_Free_Fonts_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Cellular_Automata","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Free_Font_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Keypad_240x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Read_ID_bitbash","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_ArcFill","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Clock_Digital","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Custom_Fonts","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_FillArcSpiral","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Float_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Mandlebrot","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Matrix","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Meter_linear","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Pie_Chart","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Pong","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Rainbow_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Read_Reg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Spiro","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Starfield","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_String_Align","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Terminal","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_graphicstest_PDQ","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_graphicstest_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\UTFT_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Cellular_Automata","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Demo_3D_cube","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Free_Font_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Graph_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Keypad_480x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Meter_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Padding_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Rainbow480","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_String_Align","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_flash_jpg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_graphicstest_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_ring_meter","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Touch_Controller_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\UTFT_Demo_480x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\Bouncy_Circles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\Flash_Jpg_DMA","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\SpriteRotatingCube","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\boing_ball","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Buttons\\Button_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Graphs\\Graph_demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Graphs\\Graph_demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Meters\\Analogue_meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Sliders\\Slider_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Animated_Eyes_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Animated_Eyes_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\ESP32_SDcard_jpeg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\ESP8266_uncannyEyes","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Gradient_Fill","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Julia_Set","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Local_Custom_Fonts","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\On_Off_Button","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Button_Label_Datum","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Flash_Bitmap","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_SPIFFS_BMP","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Screen_Capture","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Touch_calibrate","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Viewport_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Viewport_graphicstest","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\alphaBlend_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\drawXBitmap","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\Flash_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\Flash_transparent_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\LittleFS_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\LittleFS_PNG_DMA","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_1_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_2_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_3_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_4_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SD_Card\\ESP32_Smooth_Font_SD","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Anti-aliased_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Arc_meter_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Colour_Wheel","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Draw_Arc","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Draw_Smooth_Circles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Arc","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Graphics_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Rounded_Rectangles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Animated_dial","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\ESP32-2432S032C-I_Sprites","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\One_bit_Sprite_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\One_bit_Yin_Yang","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Orrery","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_TFT_Rainbow","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_draw","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_draw_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_image_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_16bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_1bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_8bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_wrap_1bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Transparent_Sprite_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Transparent_Sprite_Demo_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Colour_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Read_User_Setup","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\TFT_ReadWrite_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Test_Touch_Controller","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\ePaper\\Floyd_Steinberg"],"providesIncludes":["TFT_eSPI.h"],"properties":{},"compatibleWith":{}},{"name":"SPI","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus. For all Arduino boards, BUT Arduino DUE.","paragraph":"","website":"http://arduino.cc/en/Reference/SPI","category":"Signal Input/Output","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI\\examples\\SPI_Multiple_Buses"],"providesIncludes":["SPI.h"],"properties":{},"compatibleWith":{}},{"name":"FS","author":"Hristo Gochkov, Ivan Grokhtkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"ESP32 File System","paragraph":"","website":"","category":"Data Storage","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\FS","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\FS\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":[],"providesIncludes":["FS.h","FSImpl.h","vfs_api.h"],"properties":{},"compatibleWith":{}},{"name":"SPIFFS","author":"Hristo Gochkov, Ivan Grokhtkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"ESP32 SPIFFS File System","paragraph":"","website":"","category":"Data Storage","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\examples\\SPIFFS_Test","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\examples\\SPIFFS_time"],"providesIncludes":["SPIFFS.h"],"properties":{},"compatibleWith":{}}],"buildPlatform":{"id":"esp32:esp32","version":"3.3.1","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","packageUrl":"https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json"},"buildProperties":["_id=esp32","bootloader.tool=esptool_py","bootloader.tool.default=esptool_py","build.arch=ESP32","build.board=ESP32_DEV","build.board.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","build.boot=qio","build.boot_freq=80m","build.bootloader_addr=0x1000","build.code_debug=0","build.copy_jtag_files=0","build.core=esp32","build.core.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\cores\\esp32","build.core.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","build.custom_bootloader=bootloader","build.custom_partitions=partitions","build.defines=","build.event_core=-DARDUINO_EVENT_RUNNING_CORE=1","build.extra_flags=-DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0 ","build.extra_flags.esp32=-DARDUINO_USB_CDC_ON_BOOT=0","build.extra_flags.esp32c2=-DARDUINO_USB_CDC_ON_BOOT=0","build.extra_flags.esp32c3=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32c5=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32c6=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32h2=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32p4=-DARDUINO_USB_MODE={build.usb_mode} -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_flags.esp32s2=-DARDUINO_USB_MODE=0 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_flags.esp32s3=-DARDUINO_USB_MODE={build.usb_mode} -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_libs=","build.f_cpu=240000000L","build.flash_freq=80m","build.flash_mode=dio","build.flash_size=4MB","build.fqbn=esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default","build.img_freq=80m","build.library_discovery_phase=0","build.loop_core=-DARDUINO_RUNNING_CORE=1","build.mcu=esp32","build.memory_type=qio_qspi","build.opt.name=build_opt.h","build.opt.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h","build.partitions=huge_app","build.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94","build.project_name=sketch_oct5a.ino","build.source.path=C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","build.system.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\system","build.tarch=xtensa","build.target=esp32","build.variant=esp32","build.variant.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32","build.zigbee_libs=","build.zigbee_mode=","compiler.S.cmd=xtensa-esp32-elf-gcc","compiler.S.extra_flags=","compiler.S.flags=-MMD -c -x assembler-with-cpp \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/S_flags\" -w -Os","compiler.ar.cmd=xtensa-esp32-elf-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=cr","compiler.as.cmd=xtensa-esp32-elf-as","compiler.c.cmd=xtensa-esp32-elf-gcc","compiler.c.elf.cmd=xtensa-esp32-elf-g++","compiler.c.elf.extra_flags=","compiler.c.elf.flags=\"-Wl,--Map=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.map\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/lib\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/ld\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi\" \"-Wl,--wrap=esp_panic_handler\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_flags\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_scripts\"","compiler.c.elf.libs=\"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_libs\"","compiler.c.extra_flags=","compiler.c.flags=-MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/c_flags\" -w -Os -Werror=return-type","compiler.common_werror_flags=-Werror=return-type","compiler.cpp.cmd=xtensa-esp32-elf-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/cpp_flags\" -w -Os -Werror=return-type","compiler.cpreprocessor.flags=\"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\"","compiler.elf2hex.extra_flags=","compiler.libraries.ldflags=","compiler.objcopy.eep.extra_flags=","compiler.optimization_flags=-Os","compiler.optimization_flags.debug=-Og -g3","compiler.optimization_flags.release=-Os","compiler.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/","compiler.prefix=xtensa-esp32-elf-","compiler.sdk.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32","compiler.size.cmd=xtensa-esp32-elf-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","debug.additional_config=debug_config.esp32","debug.cortex-debug.custom.objdumpPath=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-objdump","debug.cortex-debug.custom.request=attach","debug.executable=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf","debug.server=openocd","debug.server.openocd.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707/bin/openocd","debug.server.openocd.scripts.0=board/esp32-wrover-kit-3.3v.cfg","debug.server.openocd.scripts_dir=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707\\share\\openocd\\scripts\\","debug.svd_file=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/ide-debug/svd/esp32.svd","debug.toolchain=gcc","debug.toolchain.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324/bin/","debug.toolchain.prefix=xtensa-esp32-elf","debug_config.esp32.cortex-debug.custom.name=Arduino on ESP32","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.2=thb setup","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.3=c","debug_config.esp32.cortex-debug.custom.postAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32.cortex-debug.custom.postAttachCommands.1=monitor reset halt","debug_config.esp32.cortex-debug.custom.postAttachCommands.2=monitor gdb_sync","debug_config.esp32.cortex-debug.custom.postAttachCommands.3=thb setup","debug_config.esp32.cortex-debug.custom.postAttachCommands.4=c","debug_config.esp32c3.cortex-debug.custom.name=Arduino on ESP32-C3","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.0=set remote hardware-watchpoint-limit 8","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.1=monitor reset","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.2=monitor halt","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.3=monitor gdb_sync","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.4=thb setup","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.0=monitor reset","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.1=monitor halt","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.2=monitor gdb_sync","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.3=thb setup","debug_config.esp32c3.cortex-debug.custom.serverArgs.0=-d3","debug_config.esp32c5=","debug_config.esp32c6=","debug_config.esp32h2=","debug_config.esp32p4=","debug_config.esp32s2.cortex-debug.custom.name=Arduino on ESP32-S2","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.2=thb setup","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.3=c","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.1=monitor reset halt","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.2=monitor gdb_sync","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.3=thb setup","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.4=c","debug_config.esp32s3.cortex-debug.custom.name=Arduino on ESP32-S3","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.1=monitor reset halt","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.2=monitor gdb_sync","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.3=thb setup","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.4=c","debug_config.esp32s3.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32s3.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_script.esp32=esp32-wrover-kit-3.3v.cfg","debug_script.esp32c3=esp32c3-builtin.cfg","debug_script.esp32c5=esp32c5-builtin.cfg","debug_script.esp32c6=esp32c6-builtin.cfg","debug_script.esp32h2=esp32h2-builtin.cfg","debug_script.esp32p4=esp32p4-builtin.cfg","debug_script.esp32s2=esp32s2-kaluga-1.cfg","debug_script.esp32s3=esp32s3-builtin.cfg","extra.time.dst=3600","extra.time.local=1759663164","extra.time.utc=1759655964","extra.time.zone=3600","file_opts.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts","ide_version=10607","menu.CPUFreq.10=10MHz (40MHz XTAL)","menu.CPUFreq.10.build.f_cpu=10000000L","menu.CPUFreq.13=13MHz (26MHz XTAL)","menu.CPUFreq.13.build.f_cpu=13000000L","menu.CPUFreq.160=160MHz (WiFi/BT)","menu.CPUFreq.160.build.f_cpu=160000000L","menu.CPUFreq.20=20MHz (40MHz XTAL)","menu.CPUFreq.20.build.f_cpu=20000000L","menu.CPUFreq.240=240MHz (WiFi/BT)","menu.CPUFreq.240.build.f_cpu=240000000L","menu.CPUFreq.26=26MHz (26MHz XTAL)","menu.CPUFreq.26.build.f_cpu=26000000L","menu.CPUFreq.40=40MHz (40MHz XTAL)","menu.CPUFreq.40.build.f_cpu=40000000L","menu.CPUFreq.80=80MHz (WiFi/BT)","menu.CPUFreq.80.build.f_cpu=80000000L","menu.DebugLevel.debug=Debug","menu.DebugLevel.debug.build.code_debug=4","menu.DebugLevel.error=Error","menu.DebugLevel.error.build.code_debug=1","menu.DebugLevel.info=Info","menu.DebugLevel.info.build.code_debug=3","menu.DebugLevel.none=None","menu.DebugLevel.none.build.code_debug=0","menu.DebugLevel.verbose=Verbose","menu.DebugLevel.verbose.build.code_debug=5","menu.DebugLevel.warn=Warn","menu.DebugLevel.warn.build.code_debug=2","menu.EraseFlash.all=Enabled","menu.EraseFlash.all.upload.erase_cmd=-e","menu.EraseFlash.none=Disabled","menu.EraseFlash.none.upload.erase_cmd=","menu.EventsCore.0=Core 0","menu.EventsCore.0.build.event_core=-DARDUINO_EVENT_RUNNING_CORE=0","menu.EventsCore.1=Core 1","menu.EventsCore.1.build.event_core=-DARDUINO_EVENT_RUNNING_CORE=1","menu.FlashFreq.40=40MHz","menu.FlashFreq.40.build.flash_freq=40m","menu.FlashFreq.80=80MHz","menu.FlashFreq.80.build.flash_freq=80m","menu.FlashMode.dio=DIO","menu.FlashMode.dio.build.boot=dio","menu.FlashMode.dio.build.flash_mode=dio","menu.FlashMode.qio=QIO","menu.FlashMode.qio.build.boot=qio","menu.FlashMode.qio.build.flash_mode=dio","menu.FlashSize.16M=16MB (128Mb)","menu.FlashSize.16M.build.flash_size=16MB","menu.FlashSize.2M=2MB (16Mb)","menu.FlashSize.2M.build.flash_size=2MB","menu.FlashSize.4M=4MB (32Mb)","menu.FlashSize.4M.build.flash_size=4MB","menu.FlashSize.8M=8MB (64Mb)","menu.FlashSize.8M.build.flash_size=8MB","menu.JTAGAdapter.bridge=ESP USB Bridge","menu.JTAGAdapter.bridge.build.copy_jtag_files=1","menu.JTAGAdapter.bridge.build.openocdscript=esp32-bridge.cfg","menu.JTAGAdapter.default=Disabled","menu.JTAGAdapter.default.build.copy_jtag_files=0","menu.JTAGAdapter.external=FTDI Adapter","menu.JTAGAdapter.external.build.copy_jtag_files=1","menu.JTAGAdapter.external.build.openocdscript=esp32-wrover-kit-3.3v.cfg","menu.LoopCore.0=Core 0","menu.LoopCore.0.build.loop_core=-DARDUINO_RUNNING_CORE=0","menu.LoopCore.1=Core 1","menu.LoopCore.1.build.loop_core=-DARDUINO_RUNNING_CORE=1","menu.PSRAM.disabled=Disabled","menu.PSRAM.disabled.build.defines=","menu.PSRAM.disabled.build.extra_libs=","menu.PSRAM.enabled=Enabled","menu.PSRAM.enabled.build.defines=-DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -mfix-esp32-psram-cache-strategy=memw","menu.PSRAM.enabled.build.extra_libs=","menu.PartitionScheme.app3M_fat9M_16MB=16M Flash (3MB APP/9.9MB FATFS)","menu.PartitionScheme.app3M_fat9M_16MB.build.partitions=app3M_fat9M_16MB","menu.PartitionScheme.app3M_fat9M_16MB.upload.maximum_size=3145728","menu.PartitionScheme.custom=Custom","menu.PartitionScheme.custom.build.partitions=","menu.PartitionScheme.custom.upload.maximum_size=16777216","menu.PartitionScheme.default=Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)","menu.PartitionScheme.default.build.partitions=default","menu.PartitionScheme.default_8MB=8M with spiffs (3MB APP/1.5MB SPIFFS)","menu.PartitionScheme.default_8MB.build.partitions=default_8MB","menu.PartitionScheme.default_8MB.upload.maximum_size=3342336","menu.PartitionScheme.defaultffat=Default 4MB with ffat (1.2MB APP/1.5MB FATFS)","menu.PartitionScheme.defaultffat.build.partitions=default_ffat","menu.PartitionScheme.fatflash=16M Flash (2MB APP/12.5MB FATFS)","menu.PartitionScheme.fatflash.build.partitions=ffat","menu.PartitionScheme.fatflash.upload.maximum_size=2097152","menu.PartitionScheme.huge_app=Huge APP (3MB No OTA/1MB SPIFFS)","menu.PartitionScheme.huge_app.build.partitions=huge_app","menu.PartitionScheme.huge_app.upload.maximum_size=3145728","menu.PartitionScheme.min_spiffs=Minimal SPIFFS (1.9MB APP with OTA/190KB SPIFFS)","menu.PartitionScheme.min_spiffs.build.partitions=min_spiffs","menu.PartitionScheme.min_spiffs.upload.maximum_size=1966080","menu.PartitionScheme.minimal=Minimal (1.3MB APP/700KB SPIFFS)","menu.PartitionScheme.minimal.build.partitions=minimal","menu.PartitionScheme.no_fs=No FS 4MB (2MB APP x2)","menu.PartitionScheme.no_fs.build.partitions=no_fs","menu.PartitionScheme.no_fs.upload.maximum_size=2031616","menu.PartitionScheme.no_ota=No OTA (2MB APP/2MB SPIFFS)","menu.PartitionScheme.no_ota.build.partitions=no_ota","menu.PartitionScheme.no_ota.upload.maximum_size=2097152","menu.PartitionScheme.noota_3g=No OTA (1MB APP/3MB SPIFFS)","menu.PartitionScheme.noota_3g.build.partitions=noota_3g","menu.PartitionScheme.noota_3g.upload.maximum_size=1048576","menu.PartitionScheme.noota_3gffat=No OTA (1MB APP/3MB FATFS)","menu.PartitionScheme.noota_3gffat.build.partitions=noota_3gffat","menu.PartitionScheme.noota_3gffat.upload.maximum_size=1048576","menu.PartitionScheme.noota_ffat=No OTA (2MB APP/2MB FATFS)","menu.PartitionScheme.noota_ffat.build.partitions=noota_ffat","menu.PartitionScheme.noota_ffat.upload.maximum_size=2097152","menu.PartitionScheme.rainmaker=RainMaker 4MB","menu.PartitionScheme.rainmaker.build.partitions=rainmaker","menu.PartitionScheme.rainmaker.upload.maximum_size=1966080","menu.PartitionScheme.rainmaker_4MB=RainMaker 4MB No OTA","menu.PartitionScheme.rainmaker_4MB.build.partitions=rainmaker_4MB_no_ota","menu.PartitionScheme.rainmaker_4MB.upload.maximum_size=4038656","menu.PartitionScheme.rainmaker_8MB=RainMaker 8MB","menu.PartitionScheme.rainmaker_8MB.build.partitions=rainmaker_8MB","menu.PartitionScheme.rainmaker_8MB.upload.maximum_size=4096000","menu.PartitionScheme.zigbee_zczr=Zigbee ZCZR 4MB with spiffs","menu.PartitionScheme.zigbee_zczr.build.partitions=zigbee_zczr","menu.PartitionScheme.zigbee_zczr.upload.maximum_size=1310720","menu.PartitionScheme.zigbee_zczr_8MB=Zigbee ZCZR 8MB with spiffs","menu.PartitionScheme.zigbee_zczr_8MB.build.partitions=zigbee_zczr_8MB","menu.PartitionScheme.zigbee_zczr_8MB.upload.maximum_size=3407872","menu.UploadSpeed.115200=115200","menu.UploadSpeed.115200.upload.speed=115200","menu.UploadSpeed.230400=230400","menu.UploadSpeed.230400.upload.speed=230400","menu.UploadSpeed.256000=256000","menu.UploadSpeed.256000.upload.speed=256000","menu.UploadSpeed.460800.linux=460800","menu.UploadSpeed.460800.macosx=460800","menu.UploadSpeed.460800.upload.speed=460800","menu.UploadSpeed.512000=512000","menu.UploadSpeed.512000.upload.speed=512000","menu.UploadSpeed.921600=921600","menu.UploadSpeed.921600.upload.speed=921600","menu.ZigbeeMode.default=Disabled","menu.ZigbeeMode.default.build.zigbee_libs=","menu.ZigbeeMode.default.build.zigbee_mode=","menu.ZigbeeMode.zczr=Zigbee ZCZR (coordinator/router)","menu.ZigbeeMode.zczr.build.zigbee_libs=-lesp_zb_api.zczr -lzboss_stack.zczr -lzboss_port.remote","menu.ZigbeeMode.zczr.build.zigbee_mode=-DZIGBEE_MODE_ZCZR","monitor_port.serial.dtr=off","monitor_port.serial.rts=off","name=ESP32 Dev Module","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","recipe.S.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc\"  -MMD -c -x assembler-with-cpp \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/S_flags\" -w -Os -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc-ar\" cr  \"{archive_file_path}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-g++\" \"-Wl,--Map=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.map\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/lib\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/ld\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi\" \"-Wl,--wrap=esp_panic_handler\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_flags\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_scripts\"  -Wl,--start-group {object_files} \"{archive_file_path}\"   \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_libs\"  -Wl,--end-group -Wl,-EL -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.c.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc\"  -MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/c_flags\" -w -Os -Werror=return-type -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-g++\"  -MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/cpp_flags\" -w -Os -Werror=return-type -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.hooks.core.postbuild.1.pattern=cmd /c type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.core.prebuild.1.pattern=cmd /c echo \"-DARDUINO_CORE_BUILD\" > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.objcopy.postobjcopy.1.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\libraries\\Insights\" \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_insights_package.exe\" C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94 sketch_oct5a.ino \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\"","recipe.hooks.objcopy.postobjcopy.1.pattern_args=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94 sketch_oct5a.ino \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\"","recipe.hooks.objcopy.postobjcopy.2.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\libraries\\ESP_SR\" if exist \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\esp_sr\\srmodels.bin\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\esp_sr\\srmodels.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\srmodels.bin\"","recipe.hooks.objcopy.postobjcopy.3.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0/esptool.exe\" --chip esp32 merge-bin -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.merged.bin\" --pad-to-size 4MB --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","recipe.hooks.objcopy.postobjcopy.3.pattern_args=--chip esp32 merge-bin -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.merged.bin\" --pad-to-size 4MB --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","recipe.hooks.prebuild.1.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\partitions.csv\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.2.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\" if exist \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\partitions.csv\" COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.3.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\" COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\partitions\\huge_app.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.4.pattern=cmd /c IF EXIST \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\bootloader.bin\" ( COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" ) ELSE ( IF EXIST \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\bootloader.bin\" ( COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" ) ELSE ( \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0\\esptool.exe\" --chip esp32 elf2image --flash-mode dio --flash-freq 80m --flash-size 4MB -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\bin\\bootloader_qio_80m.elf\" ) )","recipe.hooks.prebuild.4.pattern_args=--chip esp32 elf2image --flash-mode dio --flash-freq 80m --flash-size 4MB -o","recipe.hooks.prebuild.5.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\build_opt.h\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\build_opt.h\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\"","recipe.hooks.prebuild.6.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\" type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\"","recipe.hooks.prebuild.7.pattern=cmd /c type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.prebuild.8.pattern=cmd /c COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\sdkconfig\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sdkconfig\"","recipe.objcopy.bin.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0/esptool.exe\" --chip esp32 elf2image --flash-mode \"dio\" --flash-freq \"80m\" --flash-size \"4MB\" --elf-sha256-offset 0xb0 -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.objcopy.bin.pattern_args=--chip esp32 elf2image --flash-mode \"dio\" --flash-freq \"80m\" --flash-size \"4MB\" --elf-sha256-offset 0xb0 -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.objcopy.partitions.bin.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_esp32part.exe\" -q \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\"","recipe.output.save_file=sketch_oct5a.ino.esp32.bin","recipe.output.tmp_file=sketch_oct5a.ino.bin","recipe.size.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-size\" -A \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.size.regex=^(?:\\.iram0\\.text|\\.iram0\\.vectors|\\.dram0\\.data|\\.dram1\\.data|\\.flash\\.text|\\.flash\\.rodata|\\.flash\\.appdesc|\\.flash\\.init_array|\\.eh_frame|)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.dram0\\.data|\\.dram0\\.bss|\\.dram1\\.data|\\.dram1\\.bss|\\.noinit)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32","runtime.ide.path=C:\\Program Files\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esp-rv32-2411.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-rv32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-x32-2411.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp-x32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp32-arduino-libs-idf-release_v5.5-129cd0d2-v4.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","runtime.tools.esp32-arduino-libs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","runtime.tools.esptool_py-5.1.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","runtime.tools.esptool_py.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","runtime.tools.mdns-discovery-1.0.6.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.6","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs-4.0.2-db0513a.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\4.0.2-db0513a","runtime.tools.mklittlefs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\4.0.2-db0513a","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.openocd-esp32-v0.12.0-esp32-20250707.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707","runtime.tools.openocd-esp32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gdb-16.2_20250324.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.2.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.2","runtime.tools.serial-discovery-1.3.3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.3","runtime.tools.serial-discovery-1.3.5.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.5","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery-1.4.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-monitor-0.10.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.10.0","runtime.tools.serial-monitor-0.11.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.11.0","runtime.tools.serial-monitor-0.12.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.12.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.14.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.14.1","runtime.tools.serial-monitor-0.15.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.xtensa-esp-elf-gdb-16.2_20250324.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","serial.disableDTR=true","serial.disableRTS=true","sketch_path=C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","software=ARDUINO","tools.avrdude.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.dfu-util.cmd=dfu-util","tools.dfu-util.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","tools.dfu-util.upload.params.quiet=","tools.dfu-util.upload.params.verbose=-d","tools.dfu-util.upload.pattern=\"{path}/{cmd}\" --device {vid.0}:{pid.0} -D \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" -Q","tools.esp32-arduino-libs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","tools.esp_ota.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\espota.exe\" -r","tools.esp_ota.upload.field.password=Password","tools.esp_ota.upload.field.password.secret=true","tools.esp_ota.upload.pattern={cmd} -i {upload.port.address} -p {upload.port.properties.port} \"--auth={upload.field.password}\" -f \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esp_ota.upload.protocol=network","tools.esptool_py.bootloader.params.quiet=","tools.esptool_py.bootloader.params.verbose=","tools.esptool_py.bootloader.pattern=","tools.esptool_py.bootloader.protocol=serial","tools.esptool_py.cmd=esptool.exe","tools.esptool_py.erase.params.quiet=","tools.esptool_py.erase.params.verbose=","tools.esptool_py.erase.pattern=\"{path}/{cmd}\" {erase.pattern_args}","tools.esptool_py.erase.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset erase-flash","tools.esptool_py.erase.protocol=serial","tools.esptool_py.network_cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\espota.exe\" -r","tools.esptool_py.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","tools.esptool_py.program.params.quiet=","tools.esptool_py.program.params.verbose=","tools.esptool_py.program.pattern=\"{path}/{cmd}\" {program.pattern_args}","tools.esptool_py.program.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset write-flash -z --flash-mode keep --flash-freq keep --flash-size keep 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esptool_py.upload.network_pattern={network_cmd} -i \"{serial.port}\" -p \"{network.port}\" \"--auth={network.password}\" -f \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esptool_py.upload.params.quiet=","tools.esptool_py.upload.params.verbose=","tools.esptool_py.upload.pattern=\"{path}/{cmd}\" {upload.pattern_args}","tools.esptool_py.upload.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset write-flash  -z --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py.upload.protocol=serial","tools.esptool_py_app_only.cmd=esptool.exe","tools.esptool_py_app_only.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","tools.esptool_py_app_only.upload.params.quiet=","tools.esptool_py_app_only.upload.params.verbose=","tools.esptool_py_app_only.upload.pattern=\"{path}/{cmd}\" --chip esp32 --port \"{serial.port}\" --baud 921600  --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB {build.flash_offset} \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py_app_only.upload.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB {build.flash_offset} \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py_app_only.upload.protocol=serial","tools.gen_esp32part.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_esp32part.exe\"","tools.gen_insights_pkg.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_insights_package.exe\"","tools.riscv32-esp-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","tools.riscv32-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","tools.xtensa-esp-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","tools.xtensa-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","upload.erase_cmd=","upload.extra_flags=","upload.flags=","upload.maximum_data_size=327680","upload.maximum_size=3145728","upload.speed=921600","upload.tool=esptool_py","upload.tool.default=esptool_py","upload.tool.network=esp_ota","version=3.3.1"]}}Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/57","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/57","percentage":8}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/57","percentage":8}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/57","percentage":10}}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/57","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/57","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/57","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/57","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/57","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/57","percentage":15}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/57","percentage":17}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/57","percentage":17}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/57","percentage":19}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/57","percentage":19}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/57","percentage":21}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/57","percentage":21}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/57","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/57","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/57","percentage":24}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/57","percentage":24}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/57","percentage":26}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/57","percentage":26}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/57","percentage":29}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/57","percentage":29}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/57","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/57","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/57","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/57","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/57","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/57","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/57","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/57","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/57","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/57","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/57","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/57","percentage":43}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/57","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/57","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/58","percentage":44}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/58","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/58","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/58","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/58","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/58","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/58","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/58","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/58","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/58","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/58","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/58","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/58","percentage":68}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/58","percentage":68}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/58","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/58","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/58","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/58","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/58","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/58","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/58","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/58","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/58","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/58","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/58","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/58","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/58","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/58","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/58","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/58","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/58","percentage":91}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/58","percentage":91}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/58","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/58","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/58","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/58","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/58","percentage":96}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/58","percentage":96}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/58","percentage":98}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/58","percentage":98}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 246

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":33,"character":12}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":2,"result":null}
<<<
Content-Length: 244

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":4,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":177,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":4,"result":[]}
<<<
Content-Length: 343

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":8},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":177,"character":0}},"rangeLength":4173,"text":""}]}}Content-Length: 217

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 217

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}Content-Length: 36

{"jsonrpc":"2.0","id":6,"result":[]}
<<<
Content-Length: 4805

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":9},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);  // rechtsbündig\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(148, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen\n  tft.setCursor(200, 12);   // nach links verschoben\n  tft.print(\"Bluetooth\");\n  tft.setCursor(285, 12);   // weiter rechts, kein Überlappen mehr\n  tft.print(\"dBm\");\n\n  // Linien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 9) ssid = ssid.substring(0, 9);\n      tft.print(ssid);\n\n      // Kanal\n      tft.setCursor(126, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI (nach links verschoben)\n      drawRSSIValue(172, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI leicht nach links, damit er die Linie nicht überlappt\n      drawRSSIValue(308, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}]}}






Started logging.

<<<
Content-Length: 3200

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":20664,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"c:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","rootUri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a","name":"sketch_oct5a"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4711

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","languageId":"cpp","version":9,"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);  // rechtsbündig\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(148, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen\n  tft.setCursor(200, 12);   // nach links verschoben\n  tft.print(\"Bluetooth\");\n  tft.setCursor(285, 12);   // weiter rechts, kein Überlappen mehr\n  tft.print(\"dBm\");\n\n  // Linien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 9) ssid = ssid.substring(0, 9);\n      tft.print(ssid);\n\n      // Kanal\n      tft.setCursor(126, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI (nach links verschoben)\n      drawRSSIValue(172, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI leicht nach links, damit er die Linie nicht überlappt\n      drawRSSIValue(308, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}}Content-Length: 217

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 4692

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":9},"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);  // rechtsbündig\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(148, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen\n  tft.setCursor(200, 12);   // nach links verschoben\n  tft.print(\"Bluetooth\");\n  tft.setCursor(285, 12);   // weiter rechts, kein Überlappen mehr\n  tft.print(\"dBm\");\n\n  // Linien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 9) ssid = ssid.substring(0, 9);\n      tft.print(ssid);\n\n      // Kanal\n      tft.setCursor(126, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI (nach links verschoben)\n      drawRSSIValue(172, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI leicht nach links, damit er die Linie nicht überlappt\n      drawRSSIValue(308, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3078

{"jsonrpc":"2.0","id":1,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":25}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":129,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":129,"character":5},"end":{"line":129,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":177,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":9}}}]}
<<<
init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 80670

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildPath":"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94","buildOutputUri":"file:///c%3A/Users/baerb/AppData/Local/arduino/sketches/DB967282F33456BE0552555DDE24DC94","executableSectionsSize":[{"name":"text","size":1686419,"maxSize":3145728},{"name":"data","size":59752,"maxSize":327680}],"usedLibraries":[{"name":"WiFi","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"Enables network connection (local and Internet) using the ESP32 built-in WiFi.","paragraph":"With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks. The IP address can be assigned statically or through a DHCP. The library can also manage DNS.","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\FTM\\FTM_Initiator","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\FTM\\FTM_Responder","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\SimpleWiFiServer","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WPS","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiAccessPoint","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiBlueToothSwitch","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClient","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientBasic","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientConnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientEnterprise","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientEvents","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientStaticIP","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiExtender","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiIPv6","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiMulti","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiMultiAdvanced","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanAsync","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanDualAntenna","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanTime","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiSmartConfig","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiTelnetToSerial","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiUDPClient"],"providesIncludes":["WiFi.h","WiFiAP.h","WiFiClient.h","WiFiGeneric.h","WiFiMulti.h","WiFiSTA.h","WiFiScan.h","WiFiServer.h","WiFiType.h","WiFiUdp.h"],"properties":{},"compatibleWith":{}},{"name":"Networking","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"General network management library.","paragraph":"This library holds all common functionality of the different network interfaces.","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\Network","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\Network\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":[],"providesIncludes":["Network.h","NetworkClient.h","NetworkEvents.h","NetworkInterface.h","NetworkManager.h","NetworkServer.h","NetworkUdp.h"],"properties":{},"compatibleWith":{}},{"name":"BluetoothSerial","author":"Evandro Copercini","maintainer":"Evandro Copercini","sentence":"Simple UART to Classical Bluetooth bridge for ESP32","paragraph":"","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\DiscoverConnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\GetLocalMAC","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBTM","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT_Legacy","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT_SSP","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\bt_classic_device_discovery","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\bt_remove_paired_devices"],"providesIncludes":["BTAddress.h","BTAdvertisedDevice.h","BTScan.h","BluetoothSerial.h"],"properties":{},"compatibleWith":{}},{"name":"BLE","author":"Neil Kolban <kolban1@kolban.com>","maintainer":"lucasssvaz","sentence":"BLE functions for ESP32","paragraph":"This library provides an implementation Bluetooth Low Energy support for the ESP32 using the Arduino platform.","website":"https://github.com/espressif/arduino-esp32/tree/master/libraries/BLE","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_extended_scan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_multi_advertising","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_periodic_advertising","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_periodic_sync","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Beacon_Scanner","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Client","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Client_secure_static_passkey","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\EddystoneTLM_Beacon","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\EddystoneURL_Beacon","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Notify","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Scan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_multiconnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_secure_authorization","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_secure_static_passkey","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\UART","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Write","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\iBeacon"],"providesIncludes":["BLEDevice.h","BLEUtils.h","BLEScan.h","BLEAdvertisedDevice.h"],"properties":{},"compatibleWith":{}},{"name":"TFT_eSPI","author":"Bodmer","maintainer":"Bodmer","sentence":"TFT graphics library for Arduino processors with performance optimisation for RP2040, STM32, ESP8266 and ESP32","paragraph":"Supports TFT displays using drivers (ILI9341 etc.) that operate with hardware SPI or 8/16-bit parallel.","website":"https://github.com/Bodmer/TFT_eSPI","category":"Display","installDir":"C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI","sourceDir":"c:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.5.43","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\Arduino_Life","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\Pong_v3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Clock_Digital","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Meter_5","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Rainbow","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_flash_jpg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_graphicstest_PDQ3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_graphicstest_small","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\UTFT_demo_fast","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\All_Free_Fonts_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Cellular_Automata","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Free_Font_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Keypad_240x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Read_ID_bitbash","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_ArcFill","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Clock_Digital","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Custom_Fonts","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_FillArcSpiral","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Float_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Mandlebrot","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Matrix","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Meter_linear","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Pie_Chart","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Pong","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Rainbow_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Read_Reg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Spiro","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Starfield","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_String_Align","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Terminal","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_graphicstest_PDQ","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_graphicstest_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\UTFT_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Cellular_Automata","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Demo_3D_cube","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Free_Font_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Graph_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Keypad_480x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Meter_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Padding_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Rainbow480","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_String_Align","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_flash_jpg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_graphicstest_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_ring_meter","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Touch_Controller_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\UTFT_Demo_480x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\Bouncy_Circles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\Flash_Jpg_DMA","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\SpriteRotatingCube","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\boing_ball","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Buttons\\Button_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Graphs\\Graph_demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Graphs\\Graph_demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Meters\\Analogue_meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Sliders\\Slider_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Animated_Eyes_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Animated_Eyes_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\ESP32_SDcard_jpeg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\ESP8266_uncannyEyes","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Gradient_Fill","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Julia_Set","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Local_Custom_Fonts","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\On_Off_Button","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Button_Label_Datum","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Flash_Bitmap","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_SPIFFS_BMP","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Screen_Capture","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Touch_calibrate","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Viewport_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Viewport_graphicstest","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\alphaBlend_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\drawXBitmap","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\Flash_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\Flash_transparent_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\LittleFS_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\LittleFS_PNG_DMA","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_1_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_2_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_3_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_4_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SD_Card\\ESP32_Smooth_Font_SD","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Anti-aliased_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Arc_meter_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Colour_Wheel","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Draw_Arc","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Draw_Smooth_Circles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Arc","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Graphics_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Rounded_Rectangles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Animated_dial","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\ESP32-2432S032C-I_Sprites","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\One_bit_Sprite_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\One_bit_Yin_Yang","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Orrery","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_TFT_Rainbow","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_draw","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_draw_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_image_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_16bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_1bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_8bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_wrap_1bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Transparent_Sprite_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Transparent_Sprite_Demo_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Colour_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Read_User_Setup","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\TFT_ReadWrite_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Test_Touch_Controller","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\ePaper\\Floyd_Steinberg"],"providesIncludes":["TFT_eSPI.h"],"properties":{},"compatibleWith":{}},{"name":"SPI","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus. For all Arduino boards, BUT Arduino DUE.","paragraph":"","website":"http://arduino.cc/en/Reference/SPI","category":"Signal Input/Output","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI\\examples\\SPI_Multiple_Buses"],"providesIncludes":["SPI.h"],"properties":{},"compatibleWith":{}},{"name":"FS","author":"Hristo Gochkov, Ivan Grokhtkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"ESP32 File System","paragraph":"","website":"","category":"Data Storage","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\FS","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\FS\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":[],"providesIncludes":["FS.h","FSImpl.h","vfs_api.h"],"properties":{},"compatibleWith":{}},{"name":"SPIFFS","author":"Hristo Gochkov, Ivan Grokhtkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"ESP32 SPIFFS File System","paragraph":"","website":"","category":"Data Storage","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\examples\\SPIFFS_Test","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\examples\\SPIFFS_time"],"providesIncludes":["SPIFFS.h"],"properties":{},"compatibleWith":{}}],"buildPlatform":{"id":"esp32:esp32","version":"3.3.1","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","packageUrl":"https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json"},"buildProperties":["_id=esp32","bootloader.tool=esptool_py","bootloader.tool.default=esptool_py","build.arch=ESP32","build.board=ESP32_DEV","build.board.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","build.boot=qio","build.boot_freq=80m","build.bootloader_addr=0x1000","build.code_debug=0","build.copy_jtag_files=0","build.core=esp32","build.core.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\cores\\esp32","build.core.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","build.custom_bootloader=bootloader","build.custom_partitions=partitions","build.defines=","build.event_core=-DARDUINO_EVENT_RUNNING_CORE=1","build.extra_flags=-DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0 ","build.extra_flags.esp32=-DARDUINO_USB_CDC_ON_BOOT=0","build.extra_flags.esp32c2=-DARDUINO_USB_CDC_ON_BOOT=0","build.extra_flags.esp32c3=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32c5=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32c6=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32h2=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32p4=-DARDUINO_USB_MODE={build.usb_mode} -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_flags.esp32s2=-DARDUINO_USB_MODE=0 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_flags.esp32s3=-DARDUINO_USB_MODE={build.usb_mode} -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_libs=","build.f_cpu=240000000L","build.flash_freq=80m","build.flash_mode=dio","build.flash_size=4MB","build.fqbn=esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default","build.img_freq=80m","build.library_discovery_phase=0","build.loop_core=-DARDUINO_RUNNING_CORE=1","build.mcu=esp32","build.memory_type=qio_qspi","build.opt.name=build_opt.h","build.opt.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h","build.partitions=huge_app","build.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94","build.project_name=sketch_oct5a.ino","build.source.path=C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","build.system.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\system","build.tarch=xtensa","build.target=esp32","build.variant=esp32","build.variant.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32","build.zigbee_libs=","build.zigbee_mode=","compiler.S.cmd=xtensa-esp32-elf-gcc","compiler.S.extra_flags=","compiler.S.flags=-MMD -c -x assembler-with-cpp \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/S_flags\" -w -Os","compiler.ar.cmd=xtensa-esp32-elf-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=cr","compiler.as.cmd=xtensa-esp32-elf-as","compiler.c.cmd=xtensa-esp32-elf-gcc","compiler.c.elf.cmd=xtensa-esp32-elf-g++","compiler.c.elf.extra_flags=","compiler.c.elf.flags=\"-Wl,--Map=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.map\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/lib\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/ld\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi\" \"-Wl,--wrap=esp_panic_handler\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_flags\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_scripts\"","compiler.c.elf.libs=\"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_libs\"","compiler.c.extra_flags=","compiler.c.flags=-MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/c_flags\" -w -Os -Werror=return-type","compiler.common_werror_flags=-Werror=return-type","compiler.cpp.cmd=xtensa-esp32-elf-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/cpp_flags\" -w -Os -Werror=return-type","compiler.cpreprocessor.flags=\"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\"","compiler.elf2hex.extra_flags=","compiler.libraries.ldflags=","compiler.objcopy.eep.extra_flags=","compiler.optimization_flags=-Os","compiler.optimization_flags.debug=-Og -g3","compiler.optimization_flags.release=-Os","compiler.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/","compiler.prefix=xtensa-esp32-elf-","compiler.sdk.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32","compiler.size.cmd=xtensa-esp32-elf-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","debug.additional_config=debug_config.esp32","debug.cortex-debug.custom.objdumpPath=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-objdump","debug.cortex-debug.custom.request=attach","debug.executable=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf","debug.server=openocd","debug.server.openocd.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707/bin/openocd","debug.server.openocd.scripts.0=board/esp32-wrover-kit-3.3v.cfg","debug.server.openocd.scripts_dir=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707\\share\\openocd\\scripts\\","debug.svd_file=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/ide-debug/svd/esp32.svd","debug.toolchain=gcc","debug.toolchain.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324/bin/","debug.toolchain.prefix=xtensa-esp32-elf","debug_config.esp32.cortex-debug.custom.name=Arduino on ESP32","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.2=thb setup","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.3=c","debug_config.esp32.cortex-debug.custom.postAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32.cortex-debug.custom.postAttachCommands.1=monitor reset halt","debug_config.esp32.cortex-debug.custom.postAttachCommands.2=monitor gdb_sync","debug_config.esp32.cortex-debug.custom.postAttachCommands.3=thb setup","debug_config.esp32.cortex-debug.custom.postAttachCommands.4=c","debug_config.esp32c3.cortex-debug.custom.name=Arduino on ESP32-C3","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.0=set remote hardware-watchpoint-limit 8","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.1=monitor reset","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.2=monitor halt","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.3=monitor gdb_sync","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.4=thb setup","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.0=monitor reset","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.1=monitor halt","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.2=monitor gdb_sync","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.3=thb setup","debug_config.esp32c3.cortex-debug.custom.serverArgs.0=-d3","debug_config.esp32c5=","debug_config.esp32c6=","debug_config.esp32h2=","debug_config.esp32p4=","debug_config.esp32s2.cortex-debug.custom.name=Arduino on ESP32-S2","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.2=thb setup","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.3=c","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.1=monitor reset halt","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.2=monitor gdb_sync","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.3=thb setup","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.4=c","debug_config.esp32s3.cortex-debug.custom.name=Arduino on ESP32-S3","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.1=monitor reset halt","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.2=monitor gdb_sync","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.3=thb setup","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.4=c","debug_config.esp32s3.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32s3.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_script.esp32=esp32-wrover-kit-3.3v.cfg","debug_script.esp32c3=esp32c3-builtin.cfg","debug_script.esp32c5=esp32c5-builtin.cfg","debug_script.esp32c6=esp32c6-builtin.cfg","debug_script.esp32h2=esp32h2-builtin.cfg","debug_script.esp32p4=esp32p4-builtin.cfg","debug_script.esp32s2=esp32s2-kaluga-1.cfg","debug_script.esp32s3=esp32s3-builtin.cfg","extra.time.dst=3600","extra.time.local=1759663448","extra.time.utc=1759656248","extra.time.zone=3600","file_opts.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts","ide_version=10607","menu.CPUFreq.10=10MHz (40MHz XTAL)","menu.CPUFreq.10.build.f_cpu=10000000L","menu.CPUFreq.13=13MHz (26MHz XTAL)","menu.CPUFreq.13.build.f_cpu=13000000L","menu.CPUFreq.160=160MHz (WiFi/BT)","menu.CPUFreq.160.build.f_cpu=160000000L","menu.CPUFreq.20=20MHz (40MHz XTAL)","menu.CPUFreq.20.build.f_cpu=20000000L","menu.CPUFreq.240=240MHz (WiFi/BT)","menu.CPUFreq.240.build.f_cpu=240000000L","menu.CPUFreq.26=26MHz (26MHz XTAL)","menu.CPUFreq.26.build.f_cpu=26000000L","menu.CPUFreq.40=40MHz (40MHz XTAL)","menu.CPUFreq.40.build.f_cpu=40000000L","menu.CPUFreq.80=80MHz (WiFi/BT)","menu.CPUFreq.80.build.f_cpu=80000000L","menu.DebugLevel.debug=Debug","menu.DebugLevel.debug.build.code_debug=4","menu.DebugLevel.error=Error","menu.DebugLevel.error.build.code_debug=1","menu.DebugLevel.info=Info","menu.DebugLevel.info.build.code_debug=3","menu.DebugLevel.none=None","menu.DebugLevel.none.build.code_debug=0","menu.DebugLevel.verbose=Verbose","menu.DebugLevel.verbose.build.code_debug=5","menu.DebugLevel.warn=Warn","menu.DebugLevel.warn.build.code_debug=2","menu.EraseFlash.all=Enabled","menu.EraseFlash.all.upload.erase_cmd=-e","menu.EraseFlash.none=Disabled","menu.EraseFlash.none.upload.erase_cmd=","menu.EventsCore.0=Core 0","menu.EventsCore.0.build.event_core=-DARDUINO_EVENT_RUNNING_CORE=0","menu.EventsCore.1=Core 1","menu.EventsCore.1.build.event_core=-DARDUINO_EVENT_RUNNING_CORE=1","menu.FlashFreq.40=40MHz","menu.FlashFreq.40.build.flash_freq=40m","menu.FlashFreq.80=80MHz","menu.FlashFreq.80.build.flash_freq=80m","menu.FlashMode.dio=DIO","menu.FlashMode.dio.build.boot=dio","menu.FlashMode.dio.build.flash_mode=dio","menu.FlashMode.qio=QIO","menu.FlashMode.qio.build.boot=qio","menu.FlashMode.qio.build.flash_mode=dio","menu.FlashSize.16M=16MB (128Mb)","menu.FlashSize.16M.build.flash_size=16MB","menu.FlashSize.2M=2MB (16Mb)","menu.FlashSize.2M.build.flash_size=2MB","menu.FlashSize.4M=4MB (32Mb)","menu.FlashSize.4M.build.flash_size=4MB","menu.FlashSize.8M=8MB (64Mb)","menu.FlashSize.8M.build.flash_size=8MB","menu.JTAGAdapter.bridge=ESP USB Bridge","menu.JTAGAdapter.bridge.build.copy_jtag_files=1","menu.JTAGAdapter.bridge.build.openocdscript=esp32-bridge.cfg","menu.JTAGAdapter.default=Disabled","menu.JTAGAdapter.default.build.copy_jtag_files=0","menu.JTAGAdapter.external=FTDI Adapter","menu.JTAGAdapter.external.build.copy_jtag_files=1","menu.JTAGAdapter.external.build.openocdscript=esp32-wrover-kit-3.3v.cfg","menu.LoopCore.0=Core 0","menu.LoopCore.0.build.loop_core=-DARDUINO_RUNNING_CORE=0","menu.LoopCore.1=Core 1","menu.LoopCore.1.build.loop_core=-DARDUINO_RUNNING_CORE=1","menu.PSRAM.disabled=Disabled","menu.PSRAM.disabled.build.defines=","menu.PSRAM.disabled.build.extra_libs=","menu.PSRAM.enabled=Enabled","menu.PSRAM.enabled.build.defines=-DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -mfix-esp32-psram-cache-strategy=memw","menu.PSRAM.enabled.build.extra_libs=","menu.PartitionScheme.app3M_fat9M_16MB=16M Flash (3MB APP/9.9MB FATFS)","menu.PartitionScheme.app3M_fat9M_16MB.build.partitions=app3M_fat9M_16MB","menu.PartitionScheme.app3M_fat9M_16MB.upload.maximum_size=3145728","menu.PartitionScheme.custom=Custom","menu.PartitionScheme.custom.build.partitions=","menu.PartitionScheme.custom.upload.maximum_size=16777216","menu.PartitionScheme.default=Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)","menu.PartitionScheme.default.build.partitions=default","menu.PartitionScheme.default_8MB=8M with spiffs (3MB APP/1.5MB SPIFFS)","menu.PartitionScheme.default_8MB.build.partitions=default_8MB","menu.PartitionScheme.default_8MB.upload.maximum_size=3342336","menu.PartitionScheme.defaultffat=Default 4MB with ffat (1.2MB APP/1.5MB FATFS)","menu.PartitionScheme.defaultffat.build.partitions=default_ffat","menu.PartitionScheme.fatflash=16M Flash (2MB APP/12.5MB FATFS)","menu.PartitionScheme.fatflash.build.partitions=ffat","menu.PartitionScheme.fatflash.upload.maximum_size=2097152","menu.PartitionScheme.huge_app=Huge APP (3MB No OTA/1MB SPIFFS)","menu.PartitionScheme.huge_app.build.partitions=huge_app","menu.PartitionScheme.huge_app.upload.maximum_size=3145728","menu.PartitionScheme.min_spiffs=Minimal SPIFFS (1.9MB APP with OTA/190KB SPIFFS)","menu.PartitionScheme.min_spiffs.build.partitions=min_spiffs","menu.PartitionScheme.min_spiffs.upload.maximum_size=1966080","menu.PartitionScheme.minimal=Minimal (1.3MB APP/700KB SPIFFS)","menu.PartitionScheme.minimal.build.partitions=minimal","menu.PartitionScheme.no_fs=No FS 4MB (2MB APP x2)","menu.PartitionScheme.no_fs.build.partitions=no_fs","menu.PartitionScheme.no_fs.upload.maximum_size=2031616","menu.PartitionScheme.no_ota=No OTA (2MB APP/2MB SPIFFS)","menu.PartitionScheme.no_ota.build.partitions=no_ota","menu.PartitionScheme.no_ota.upload.maximum_size=2097152","menu.PartitionScheme.noota_3g=No OTA (1MB APP/3MB SPIFFS)","menu.PartitionScheme.noota_3g.build.partitions=noota_3g","menu.PartitionScheme.noota_3g.upload.maximum_size=1048576","menu.PartitionScheme.noota_3gffat=No OTA (1MB APP/3MB FATFS)","menu.PartitionScheme.noota_3gffat.build.partitions=noota_3gffat","menu.PartitionScheme.noota_3gffat.upload.maximum_size=1048576","menu.PartitionScheme.noota_ffat=No OTA (2MB APP/2MB FATFS)","menu.PartitionScheme.noota_ffat.build.partitions=noota_ffat","menu.PartitionScheme.noota_ffat.upload.maximum_size=2097152","menu.PartitionScheme.rainmaker=RainMaker 4MB","menu.PartitionScheme.rainmaker.build.partitions=rainmaker","menu.PartitionScheme.rainmaker.upload.maximum_size=1966080","menu.PartitionScheme.rainmaker_4MB=RainMaker 4MB No OTA","menu.PartitionScheme.rainmaker_4MB.build.partitions=rainmaker_4MB_no_ota","menu.PartitionScheme.rainmaker_4MB.upload.maximum_size=4038656","menu.PartitionScheme.rainmaker_8MB=RainMaker 8MB","menu.PartitionScheme.rainmaker_8MB.build.partitions=rainmaker_8MB","menu.PartitionScheme.rainmaker_8MB.upload.maximum_size=4096000","menu.PartitionScheme.zigbee_zczr=Zigbee ZCZR 4MB with spiffs","menu.PartitionScheme.zigbee_zczr.build.partitions=zigbee_zczr","menu.PartitionScheme.zigbee_zczr.upload.maximum_size=1310720","menu.PartitionScheme.zigbee_zczr_8MB=Zigbee ZCZR 8MB with spiffs","menu.PartitionScheme.zigbee_zczr_8MB.build.partitions=zigbee_zczr_8MB","menu.PartitionScheme.zigbee_zczr_8MB.upload.maximum_size=3407872","menu.UploadSpeed.115200=115200","menu.UploadSpeed.115200.upload.speed=115200","menu.UploadSpeed.230400=230400","menu.UploadSpeed.230400.upload.speed=230400","menu.UploadSpeed.256000=256000","menu.UploadSpeed.256000.upload.speed=256000","menu.UploadSpeed.460800.linux=460800","menu.UploadSpeed.460800.macosx=460800","menu.UploadSpeed.460800.upload.speed=460800","menu.UploadSpeed.512000=512000","menu.UploadSpeed.512000.upload.speed=512000","menu.UploadSpeed.921600=921600","menu.UploadSpeed.921600.upload.speed=921600","menu.ZigbeeMode.default=Disabled","menu.ZigbeeMode.default.build.zigbee_libs=","menu.ZigbeeMode.default.build.zigbee_mode=","menu.ZigbeeMode.zczr=Zigbee ZCZR (coordinator/router)","menu.ZigbeeMode.zczr.build.zigbee_libs=-lesp_zb_api.zczr -lzboss_stack.zczr -lzboss_port.remote","menu.ZigbeeMode.zczr.build.zigbee_mode=-DZIGBEE_MODE_ZCZR","monitor_port.serial.dtr=off","monitor_port.serial.rts=off","name=ESP32 Dev Module","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","recipe.S.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc\"  -MMD -c -x assembler-with-cpp \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/S_flags\" -w -Os -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc-ar\" cr  \"{archive_file_path}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-g++\" \"-Wl,--Map=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.map\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/lib\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/ld\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi\" \"-Wl,--wrap=esp_panic_handler\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_flags\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_scripts\"  -Wl,--start-group {object_files} \"{archive_file_path}\"   \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_libs\"  -Wl,--end-group -Wl,-EL -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.c.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc\"  -MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/c_flags\" -w -Os -Werror=return-type -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-g++\"  -MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/cpp_flags\" -w -Os -Werror=return-type -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.hooks.core.postbuild.1.pattern=cmd /c type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.core.prebuild.1.pattern=cmd /c echo \"-DARDUINO_CORE_BUILD\" > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.objcopy.postobjcopy.1.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\libraries\\Insights\" \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_insights_package.exe\" C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94 sketch_oct5a.ino \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\"","recipe.hooks.objcopy.postobjcopy.1.pattern_args=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94 sketch_oct5a.ino \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\"","recipe.hooks.objcopy.postobjcopy.2.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\libraries\\ESP_SR\" if exist \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\esp_sr\\srmodels.bin\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\esp_sr\\srmodels.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\srmodels.bin\"","recipe.hooks.objcopy.postobjcopy.3.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0/esptool.exe\" --chip esp32 merge-bin -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.merged.bin\" --pad-to-size 4MB --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","recipe.hooks.objcopy.postobjcopy.3.pattern_args=--chip esp32 merge-bin -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.merged.bin\" --pad-to-size 4MB --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","recipe.hooks.prebuild.1.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\partitions.csv\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.2.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\" if exist \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\partitions.csv\" COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.3.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\" COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\partitions\\huge_app.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.4.pattern=cmd /c IF EXIST \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\bootloader.bin\" ( COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" ) ELSE ( IF EXIST \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\bootloader.bin\" ( COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" ) ELSE ( \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0\\esptool.exe\" --chip esp32 elf2image --flash-mode dio --flash-freq 80m --flash-size 4MB -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\bin\\bootloader_qio_80m.elf\" ) )","recipe.hooks.prebuild.4.pattern_args=--chip esp32 elf2image --flash-mode dio --flash-freq 80m --flash-size 4MB -o","recipe.hooks.prebuild.5.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\build_opt.h\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\build_opt.h\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\"","recipe.hooks.prebuild.6.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\" type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\"","recipe.hooks.prebuild.7.pattern=cmd /c type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.prebuild.8.pattern=cmd /c COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\sdkconfig\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sdkconfig\"","recipe.objcopy.bin.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0/esptool.exe\" --chip esp32 elf2image --flash-mode \"dio\" --flash-freq \"80m\" --flash-size \"4MB\" --elf-sha256-offset 0xb0 -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.objcopy.bin.pattern_args=--chip esp32 elf2image --flash-mode \"dio\" --flash-freq \"80m\" --flash-size \"4MB\" --elf-sha256-offset 0xb0 -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.objcopy.partitions.bin.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_esp32part.exe\" -q \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\"","recipe.output.save_file=sketch_oct5a.ino.esp32.bin","recipe.output.tmp_file=sketch_oct5a.ino.bin","recipe.size.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-size\" -A \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.size.regex=^(?:\\.iram0\\.text|\\.iram0\\.vectors|\\.dram0\\.data|\\.dram1\\.data|\\.flash\\.text|\\.flash\\.rodata|\\.flash\\.appdesc|\\.flash\\.init_array|\\.eh_frame|)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.dram0\\.data|\\.dram0\\.bss|\\.dram1\\.data|\\.dram1\\.bss|\\.noinit)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32","runtime.ide.path=C:\\Program Files\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esp-rv32-2411.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-rv32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-x32-2411.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp-x32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp32-arduino-libs-idf-release_v5.5-129cd0d2-v4.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","runtime.tools.esp32-arduino-libs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","runtime.tools.esptool_py-5.1.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","runtime.tools.esptool_py.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","runtime.tools.mdns-discovery-1.0.6.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.6","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs-4.0.2-db0513a.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\4.0.2-db0513a","runtime.tools.mklittlefs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\4.0.2-db0513a","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.openocd-esp32-v0.12.0-esp32-20250707.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707","runtime.tools.openocd-esp32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gdb-16.2_20250324.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.2.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.2","runtime.tools.serial-discovery-1.3.3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.3","runtime.tools.serial-discovery-1.3.5.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.5","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery-1.4.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-monitor-0.10.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.10.0","runtime.tools.serial-monitor-0.11.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.11.0","runtime.tools.serial-monitor-0.12.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.12.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.14.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.14.1","runtime.tools.serial-monitor-0.15.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.xtensa-esp-elf-gdb-16.2_20250324.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","serial.disableDTR=true","serial.disableRTS=true","sketch_path=C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","software=ARDUINO","tools.avrdude.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.dfu-util.cmd=dfu-util","tools.dfu-util.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","tools.dfu-util.upload.params.quiet=","tools.dfu-util.upload.params.verbose=-d","tools.dfu-util.upload.pattern=\"{path}/{cmd}\" --device {vid.0}:{pid.0} -D \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" -Q","tools.esp32-arduino-libs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","tools.esp_ota.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\espota.exe\" -r","tools.esp_ota.upload.field.password=Password","tools.esp_ota.upload.field.password.secret=true","tools.esp_ota.upload.pattern={cmd} -i {upload.port.address} -p {upload.port.properties.port} \"--auth={upload.field.password}\" -f \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esp_ota.upload.protocol=network","tools.esptool_py.bootloader.params.quiet=","tools.esptool_py.bootloader.params.verbose=","tools.esptool_py.bootloader.pattern=","tools.esptool_py.bootloader.protocol=serial","tools.esptool_py.cmd=esptool.exe","tools.esptool_py.erase.params.quiet=","tools.esptool_py.erase.params.verbose=","tools.esptool_py.erase.pattern=\"{path}/{cmd}\" {erase.pattern_args}","tools.esptool_py.erase.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset erase-flash","tools.esptool_py.erase.protocol=serial","tools.esptool_py.network_cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\espota.exe\" -r","tools.esptool_py.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","tools.esptool_py.program.params.quiet=","tools.esptool_py.program.params.verbose=","tools.esptool_py.program.pattern=\"{path}/{cmd}\" {program.pattern_args}","tools.esptool_py.program.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset write-flash -z --flash-mode keep --flash-freq keep --flash-size keep 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esptool_py.upload.network_pattern={network_cmd} -i \"{serial.port}\" -p \"{network.port}\" \"--auth={network.password}\" -f \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esptool_py.upload.params.quiet=","tools.esptool_py.upload.params.verbose=","tools.esptool_py.upload.pattern=\"{path}/{cmd}\" {upload.pattern_args}","tools.esptool_py.upload.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset write-flash  -z --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py.upload.protocol=serial","tools.esptool_py_app_only.cmd=esptool.exe","tools.esptool_py_app_only.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","tools.esptool_py_app_only.upload.params.quiet=","tools.esptool_py_app_only.upload.params.verbose=","tools.esptool_py_app_only.upload.pattern=\"{path}/{cmd}\" --chip esp32 --port \"{serial.port}\" --baud 921600  --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB {build.flash_offset} \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py_app_only.upload.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB {build.flash_offset} \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py_app_only.upload.protocol=serial","tools.gen_esp32part.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_esp32part.exe\"","tools.gen_insights_pkg.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_insights_package.exe\"","tools.riscv32-esp-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","tools.riscv32-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","tools.xtensa-esp-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","tools.xtensa-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","upload.erase_cmd=","upload.extra_flags=","upload.flags=","upload.maximum_data_size=327680","upload.maximum_size=3145728","upload.speed=921600","upload.tool=esptool_py","upload.tool.default=esptool_py","upload.tool.network=esp_ota","version=3.3.1"]}}Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"4/57","percentage":7}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/57","percentage":8}}}Content-Length: 142

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"5/57","percentage":8}}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/57","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/57","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/57","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/57","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/57","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/57","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/57","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/57","percentage":15}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/57","percentage":17}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/57","percentage":17}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/57","percentage":19}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/57","percentage":19}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/57","percentage":21}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/57","percentage":21}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/57","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/57","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/57","percentage":24}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/57","percentage":24}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/57","percentage":26}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/57","percentage":26}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/57","percentage":29}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/57","percentage":29}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/57","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/57","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/57","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/57","percentage":36}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/57","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/57","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/57","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/57","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/57","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/57","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/57","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/57","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/57","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/57","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/57","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/57","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/57","percentage":49}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/57","percentage":49}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/57","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/57","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/57","percentage":52}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/58","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/58","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/58","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/58","percentage":68}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/58","percentage":68}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/58","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/58","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/58","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/58","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/58","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/58","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/58","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/58","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/58","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/58","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/58","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/58","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/58","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/58","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/58","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/58","percentage":91}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/58","percentage":91}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/58","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/58","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/58","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/58","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/58","percentage":96}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/58","percentage":96}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/58","percentage":98}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/58","percentage":98}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 247

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":120,"character":36}}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":2,"result":{"contents":{"kind":"markdown","value":"### variable `device`  \n\n---\nType: `BLEAdvertisedDevice *`  \n\n---\n```cpp\n// In drawBleResults\nBLEAdvertisedDevice *device = devices[i]\n```"},"range":{"start":{"line":120,"character":33},"end":{"line":120,"character":39}}}}
<<<
Content-Length: 246

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":24,"character":40}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 244

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 244

{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":5,"result":null}
<<<
Content-Length: 244

{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":6,"result":null}
<<<
Content-Length: 244

{"jsonrpc":"2.0","id":7,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":7,"result":null}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":178,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":8,"result":[]}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":10},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":178,"character":0}},"rangeLength":4264,"text":""}]}}Content-Length: 217

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}Content-Length: 218

{"jsonrpc":"2.0","id":10,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":9,"result":[]}Content-Length: 37

{"jsonrpc":"2.0","id":10,"result":[]}
<<<
Content-Length: 4786

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":11},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige (rechtsbündig mit Abstand)\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen (BT, kein Überlappen)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Linien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 9) ssid = ssid.substring(0, 9);\n      tft.print(ssid);\n\n      // Kanal: leicht nach links für exakte Ausrichtung unter \"CH\"\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI: 1 px Abstand zur Trennlinie\n      drawRSSIValue(171, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI: 1 px Abstand zur rechten Kante\n      drawRSSIValue(307, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}]}}






Started logging.

<<<
Content-Length: 3200

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":20664,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"c:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","rootUri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a","name":"sketch_oct5a"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 4692

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","languageId":"cpp","version":11,"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige (rechtsbündig mit Abstand)\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen (BT, kein Überlappen)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Linien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 9) ssid = ssid.substring(0, 9);\n      tft.print(ssid);\n\n      // Kanal: leicht nach links für exakte Ausrichtung unter \"CH\"\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI: 1 px Abstand zur Trennlinie\n      drawRSSIValue(171, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI: 1 px Abstand zur rechten Kante\n      drawRSSIValue(307, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}}Content-Length: 217

{"jsonrpc":"2.0","id":1,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 4673

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":11},"text":"#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige (rechtsbündig mit Abstand)\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN-Beschriftungen\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth-Beschriftungen (BT, kein Überlappen)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Linien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 9) ssid = ssid.substring(0, 9);\n      tft.print(ssid);\n\n      // Kanal: leicht nach links für exakte Ausrichtung unter \"CH\"\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI: 1 px Abstand zur Trennlinie\n      drawRSSIValue(171, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen: letzte 3 Bytes anzeigen\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI: 1 px Abstand zur rechten Kante\n      drawRSSIValue(307, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\")
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 3078

{"jsonrpc":"2.0","id":1,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":9,"character":0},"end":{"line":9,"character":25}},"selectionRange":{"start":{"line":9,"character":9},"end":{"line":9,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":11,"character":0},"end":{"line":11,"character":24}},"selectionRange":{"start":{"line":11,"character":16},"end":{"line":11,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":12,"character":0},"end":{"line":12,"character":17}},"selectionRange":{"start":{"line":12,"character":9},"end":{"line":12,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":14,"character":0},"end":{"line":19,"character":1}},"selectionRange":{"start":{"line":14,"character":7},"end":{"line":14,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":15,"character":2},"end":{"line":15,"character":13}},"selectionRange":{"start":{"line":15,"character":9},"end":{"line":15,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":16,"character":2},"end":{"line":16,"character":14}},"selectionRange":{"start":{"line":16,"character":10},"end":{"line":16,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":17,"character":2},"end":{"line":17,"character":17}},"selectionRange":{"start":{"line":17,"character":10},"end":{"line":17,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":18,"character":2},"end":{"line":18,"character":29}},"selectionRange":{"start":{"line":18,"character":19},"end":{"line":18,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":22,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":22,"character":5},"end":{"line":22,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":50,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":53,"character":0},"end":{"line":74,"character":1}},"selectionRange":{"start":{"line":53,"character":5},"end":{"line":53,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":77,"character":0},"end":{"line":127,"character":1}},"selectionRange":{"start":{"line":77,"character":5},"end":{"line":77,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":129,"character":0},"end":{"line":147,"character":1}},"selectionRange":{"start":{"line":129,"character":5},"end":{"line":129,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":149,"character":0},"end":{"line":177,"character":1}},"selectionRange":{"start":{"line":149,"character":5},"end":{"line":149,"character":9}}}]}
<<<
;\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 80670

{"jsonrpc":"2.0","method":"ino/didCompleteBuild","params":{"buildPath":"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94","buildOutputUri":"file:///c%3A/Users/baerb/AppData/Local/arduino/sketches/DB967282F33456BE0552555DDE24DC94","executableSectionsSize":[{"name":"text","size":1686419,"maxSize":3145728},{"name":"data","size":59752,"maxSize":327680}],"usedLibraries":[{"name":"WiFi","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"Enables network connection (local and Internet) using the ESP32 built-in WiFi.","paragraph":"With this library you can instantiate Servers, Clients and send/receive UDP packets through WiFi. The shield can connect either to open or encrypted networks. The IP address can be assigned statically or through a DHCP. The library can also manage DNS.","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\FTM\\FTM_Initiator","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\FTM\\FTM_Responder","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\SimpleWiFiServer","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WPS","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiAccessPoint","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiBlueToothSwitch","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClient","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientBasic","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientConnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientEnterprise","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientEvents","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiClientStaticIP","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiExtender","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiIPv6","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiMulti","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiMultiAdvanced","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanAsync","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanDualAntenna","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiScanTime","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiSmartConfig","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiTelnetToSerial","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\WiFi\\examples\\WiFiUDPClient"],"providesIncludes":["WiFi.h","WiFiAP.h","WiFiClient.h","WiFiGeneric.h","WiFiMulti.h","WiFiSTA.h","WiFiScan.h","WiFiServer.h","WiFiType.h","WiFiUdp.h"],"properties":{},"compatibleWith":{}},{"name":"Networking","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"General network management library.","paragraph":"This library holds all common functionality of the different network interfaces.","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\Network","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\Network\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":[],"providesIncludes":["Network.h","NetworkClient.h","NetworkEvents.h","NetworkInterface.h","NetworkManager.h","NetworkServer.h","NetworkUdp.h"],"properties":{},"compatibleWith":{}},{"name":"BluetoothSerial","author":"Evandro Copercini","maintainer":"Evandro Copercini","sentence":"Simple UART to Classical Bluetooth bridge for ESP32","paragraph":"","website":"","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\DiscoverConnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\GetLocalMAC","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBTM","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT_Legacy","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\SerialToSerialBT_SSP","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\bt_classic_device_discovery","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BluetoothSerial\\examples\\bt_remove_paired_devices"],"providesIncludes":["BTAddress.h","BTAdvertisedDevice.h","BTScan.h","BluetoothSerial.h"],"properties":{},"compatibleWith":{}},{"name":"BLE","author":"Neil Kolban <kolban1@kolban.com>","maintainer":"lucasssvaz","sentence":"BLE functions for ESP32","paragraph":"This library provides an implementation Bluetooth Low Energy support for the ESP32 using the Arduino platform.","website":"https://github.com/espressif/arduino-esp32/tree/master/libraries/BLE","category":"Communication","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_extended_scan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_multi_advertising","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_periodic_advertising","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\BLE5_periodic_sync","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Beacon_Scanner","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Client","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Client_secure_static_passkey","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\EddystoneTLM_Beacon","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\EddystoneURL_Beacon","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Notify","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Scan","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_multiconnect","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_secure_authorization","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Server_secure_static_passkey","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\UART","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\Write","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\BLE\\examples\\iBeacon"],"providesIncludes":["BLEDevice.h","BLEUtils.h","BLEScan.h","BLEAdvertisedDevice.h"],"properties":{},"compatibleWith":{}},{"name":"TFT_eSPI","author":"Bodmer","maintainer":"Bodmer","sentence":"TFT graphics library for Arduino processors with performance optimisation for RP2040, STM32, ESP8266 and ESP32","paragraph":"Supports TFT displays using drivers (ILI9341 etc.) that operate with hardware SPI or 8/16-bit parallel.","website":"https://github.com/Bodmer/TFT_eSPI","category":"Display","installDir":"C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI","sourceDir":"c:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI","utilityDir":"","containerPlatform":"","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"2.5.43","license":"Unspecified","location":1,"layout":0,"inDevelopment":false,"architectures":["*"],"types":[],"examples":["C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\Arduino_Life","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\Pong_v3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Clock_Digital","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Meter_5","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_Rainbow","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_flash_jpg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_graphicstest_PDQ3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\TFT_graphicstest_small","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\160 x 128\\UTFT_demo_fast","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\All_Free_Fonts_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Cellular_Automata","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Free_Font_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Keypad_240x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\Read_ID_bitbash","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_ArcFill","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Clock_Digital","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Custom_Fonts","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_FillArcSpiral","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Float_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Mandlebrot","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Matrix","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Meter_linear","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Pie_Chart","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Pong","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Rainbow_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Read_Reg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Spiro","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Starfield","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_String_Align","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_Terminal","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_graphicstest_PDQ","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\TFT_graphicstest_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\320 x 240\\UTFT_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Cellular_Automata","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Demo_3D_cube","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Free_Font_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Graph_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Keypad_480x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Char_times","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Ellipse","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Meter_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Padding_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Print_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_Rainbow480","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_String_Align","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_flash_jpg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_graphicstest_one_lib","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\TFT_ring_meter","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\Touch_Controller_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\480 x 320\\UTFT_Demo_480x320","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\Bouncy_Circles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\Flash_Jpg_DMA","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\SpriteRotatingCube","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\DMA test\\boing_ball","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Buttons\\Button_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Graphs\\Graph_demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Graphs\\Graph_demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Meters\\Analogue_meters","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\GUI Widgets\\Sliders\\Slider_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Animated_Eyes_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Animated_Eyes_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\ESP32_SDcard_jpeg","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\ESP8266_uncannyEyes","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Gradient_Fill","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Julia_Set","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Local_Custom_Fonts","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\On_Off_Button","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Button_Label_Datum","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Flash_Bitmap","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_SPIFFS_BMP","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\TFT_Screen_Capture","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Touch_calibrate","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Viewport_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\Viewport_graphicstest","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\alphaBlend_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Generic\\drawXBitmap","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\Flash_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\Flash_transparent_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\LittleFS_PNG","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\PNG Images\\LittleFS_PNG_DMA","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_1_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_2_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_3_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Font_Demo_4_Array","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\FLASH_Array\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Font_Demo_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\LittleFS\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SD_Card\\ESP32_Smooth_Font_SD","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Font_Demo_4","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Print_Smooth_Font","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Smooth_font_gradient","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Smooth_font_reading_TFT","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Fonts\\SPIFFS\\Unicode_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Anti-aliased_Clock","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Arc_meter_demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Colour_Wheel","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Draw_Arc","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Draw_Smooth_Circles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Arc","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Graphics_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Smooth Graphics\\Smooth_Rounded_Rectangles","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Animated_dial","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\ESP32-2432S032C-I_Sprites","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\One_bit_Sprite_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\One_bit_Yin_Yang","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Orrery","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_1","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_2","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Rotated_Sprite_3","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_RLE_Font_test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_TFT_Rainbow","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_draw","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_draw_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_image_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_16bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_1bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_8bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Sprite_scroll_wrap_1bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Transparent_Sprite_Demo","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Sprite\\Transparent_Sprite_Demo_4bit","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Colour_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Read_User_Setup","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\TFT_ReadWrite_Test","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\Test and diagnostics\\Test_Touch_Controller","C:\\Users\\baerb\\Documents\\Arduino-Sketche\\libraries\\TFT_eSPI\\examples\\ePaper\\Floyd_Steinberg"],"providesIncludes":["TFT_eSPI.h"],"properties":{},"compatibleWith":{}},{"name":"SPI","author":"Hristo Gochkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"Enables the communication with devices that use the Serial Peripheral Interface (SPI) Bus. For all Arduino boards, BUT Arduino DUE.","paragraph":"","website":"http://arduino.cc/en/Reference/SPI","category":"Signal Input/Output","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPI\\examples\\SPI_Multiple_Buses"],"providesIncludes":["SPI.h"],"properties":{},"compatibleWith":{}},{"name":"FS","author":"Hristo Gochkov, Ivan Grokhtkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"ESP32 File System","paragraph":"","website":"","category":"Data Storage","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\FS","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\FS\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":[],"providesIncludes":["FS.h","FSImpl.h","vfs_api.h"],"properties":{},"compatibleWith":{}},{"name":"SPIFFS","author":"Hristo Gochkov, Ivan Grokhtkov","maintainer":"Hristo Gochkov <hristo@espressif.com>","sentence":"ESP32 SPIFFS File System","paragraph":"","website":"","category":"Data Storage","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS","sourceDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\src","utilityDir":"","containerPlatform":"esp32:esp32@3.3.1","dotALinkage":false,"precompiled":false,"ldFlags":"","isLegacy":false,"version":"3.3.0","license":"Unspecified","location":2,"layout":1,"inDevelopment":false,"architectures":["esp32"],"types":[],"examples":["C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\examples\\SPIFFS_Test","C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\libraries\\SPIFFS\\examples\\SPIFFS_time"],"providesIncludes":["SPIFFS.h"],"properties":{},"compatibleWith":{}}],"buildPlatform":{"id":"esp32:esp32","version":"3.3.1","installDir":"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","packageUrl":"https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json"},"buildProperties":["_id=esp32","bootloader.tool=esptool_py","bootloader.tool.default=esptool_py","build.arch=ESP32","build.board=ESP32_DEV","build.board.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","build.boot=qio","build.boot_freq=80m","build.bootloader_addr=0x1000","build.code_debug=0","build.copy_jtag_files=0","build.core=esp32","build.core.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\cores\\esp32","build.core.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","build.custom_bootloader=bootloader","build.custom_partitions=partitions","build.defines=","build.event_core=-DARDUINO_EVENT_RUNNING_CORE=1","build.extra_flags=-DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0 ","build.extra_flags.esp32=-DARDUINO_USB_CDC_ON_BOOT=0","build.extra_flags.esp32c2=-DARDUINO_USB_CDC_ON_BOOT=0","build.extra_flags.esp32c3=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32c5=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32c6=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32h2=-DARDUINO_USB_MODE=1 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot}","build.extra_flags.esp32p4=-DARDUINO_USB_MODE={build.usb_mode} -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_flags.esp32s2=-DARDUINO_USB_MODE=0 -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_flags.esp32s3=-DARDUINO_USB_MODE={build.usb_mode} -DARDUINO_USB_CDC_ON_BOOT={build.cdc_on_boot} -DARDUINO_USB_MSC_ON_BOOT={build.msc_on_boot} -DARDUINO_USB_DFU_ON_BOOT={build.dfu_on_boot}","build.extra_libs=","build.f_cpu=240000000L","build.flash_freq=80m","build.flash_mode=dio","build.flash_size=4MB","build.fqbn=esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default","build.img_freq=80m","build.library_discovery_phase=0","build.loop_core=-DARDUINO_RUNNING_CORE=1","build.mcu=esp32","build.memory_type=qio_qspi","build.opt.name=build_opt.h","build.opt.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h","build.partitions=huge_app","build.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94","build.project_name=sketch_oct5a.ino","build.source.path=C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","build.system.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\system","build.tarch=xtensa","build.target=esp32","build.variant=esp32","build.variant.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32","build.zigbee_libs=","build.zigbee_mode=","compiler.S.cmd=xtensa-esp32-elf-gcc","compiler.S.extra_flags=","compiler.S.flags=-MMD -c -x assembler-with-cpp \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/S_flags\" -w -Os","compiler.ar.cmd=xtensa-esp32-elf-gcc-ar","compiler.ar.extra_flags=","compiler.ar.flags=cr","compiler.as.cmd=xtensa-esp32-elf-as","compiler.c.cmd=xtensa-esp32-elf-gcc","compiler.c.elf.cmd=xtensa-esp32-elf-g++","compiler.c.elf.extra_flags=","compiler.c.elf.flags=\"-Wl,--Map=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.map\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/lib\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/ld\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi\" \"-Wl,--wrap=esp_panic_handler\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_flags\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_scripts\"","compiler.c.elf.libs=\"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_libs\"","compiler.c.extra_flags=","compiler.c.flags=-MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/c_flags\" -w -Os -Werror=return-type","compiler.common_werror_flags=-Werror=return-type","compiler.cpp.cmd=xtensa-esp32-elf-g++","compiler.cpp.extra_flags=","compiler.cpp.flags=-MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/cpp_flags\" -w -Os -Werror=return-type","compiler.cpreprocessor.flags=\"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\"","compiler.elf2hex.extra_flags=","compiler.libraries.ldflags=","compiler.objcopy.eep.extra_flags=","compiler.optimization_flags=-Os","compiler.optimization_flags.debug=-Og -g3","compiler.optimization_flags.release=-Os","compiler.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/","compiler.prefix=xtensa-esp32-elf-","compiler.sdk.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32","compiler.size.cmd=xtensa-esp32-elf-size","compiler.warning_flags=-w","compiler.warning_flags.all=-Wall -Wextra","compiler.warning_flags.default=","compiler.warning_flags.more=-Wall","compiler.warning_flags.none=-w","debug.additional_config=debug_config.esp32","debug.cortex-debug.custom.objdumpPath=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-objdump","debug.cortex-debug.custom.request=attach","debug.executable=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf","debug.server=openocd","debug.server.openocd.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707/bin/openocd","debug.server.openocd.scripts.0=board/esp32-wrover-kit-3.3v.cfg","debug.server.openocd.scripts_dir=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707\\share\\openocd\\scripts\\","debug.svd_file=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/ide-debug/svd/esp32.svd","debug.toolchain=gcc","debug.toolchain.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324/bin/","debug.toolchain.prefix=xtensa-esp32-elf","debug_config.esp32.cortex-debug.custom.name=Arduino on ESP32","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.2=thb setup","debug_config.esp32.cortex-debug.custom.overrideRestartCommands.3=c","debug_config.esp32.cortex-debug.custom.postAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32.cortex-debug.custom.postAttachCommands.1=monitor reset halt","debug_config.esp32.cortex-debug.custom.postAttachCommands.2=monitor gdb_sync","debug_config.esp32.cortex-debug.custom.postAttachCommands.3=thb setup","debug_config.esp32.cortex-debug.custom.postAttachCommands.4=c","debug_config.esp32c3.cortex-debug.custom.name=Arduino on ESP32-C3","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.0=set remote hardware-watchpoint-limit 8","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.1=monitor reset","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.2=monitor halt","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.3=monitor gdb_sync","debug_config.esp32c3.cortex-debug.custom.overrideAttachCommands.4=thb setup","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.0=monitor reset","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.1=monitor halt","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.2=monitor gdb_sync","debug_config.esp32c3.cortex-debug.custom.overrideRestartCommands.3=thb setup","debug_config.esp32c3.cortex-debug.custom.serverArgs.0=-d3","debug_config.esp32c5=","debug_config.esp32c6=","debug_config.esp32h2=","debug_config.esp32p4=","debug_config.esp32s2.cortex-debug.custom.name=Arduino on ESP32-S2","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.2=thb setup","debug_config.esp32s2.cortex-debug.custom.overrideRestartCommands.3=c","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.1=monitor reset halt","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.2=monitor gdb_sync","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.3=thb setup","debug_config.esp32s2.cortex-debug.custom.postAttachCommands.4=c","debug_config.esp32s3.cortex-debug.custom.name=Arduino on ESP32-S3","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.0=set remote hardware-watchpoint-limit 2","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.1=monitor reset halt","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.2=monitor gdb_sync","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.3=thb setup","debug_config.esp32s3.cortex-debug.custom.overrideAttachCommands.4=c","debug_config.esp32s3.cortex-debug.custom.overrideRestartCommands.0=monitor reset halt","debug_config.esp32s3.cortex-debug.custom.overrideRestartCommands.1=monitor gdb_sync","debug_script.esp32=esp32-wrover-kit-3.3v.cfg","debug_script.esp32c3=esp32c3-builtin.cfg","debug_script.esp32c5=esp32c5-builtin.cfg","debug_script.esp32c6=esp32c6-builtin.cfg","debug_script.esp32h2=esp32h2-builtin.cfg","debug_script.esp32p4=esp32p4-builtin.cfg","debug_script.esp32s2=esp32s2-kaluga-1.cfg","debug_script.esp32s3=esp32s3-builtin.cfg","extra.time.dst=3600","extra.time.local=1759663794","extra.time.utc=1759656594","extra.time.zone=3600","file_opts.path=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts","ide_version=10607","menu.CPUFreq.10=10MHz (40MHz XTAL)","menu.CPUFreq.10.build.f_cpu=10000000L","menu.CPUFreq.13=13MHz (26MHz XTAL)","menu.CPUFreq.13.build.f_cpu=13000000L","menu.CPUFreq.160=160MHz (WiFi/BT)","menu.CPUFreq.160.build.f_cpu=160000000L","menu.CPUFreq.20=20MHz (40MHz XTAL)","menu.CPUFreq.20.build.f_cpu=20000000L","menu.CPUFreq.240=240MHz (WiFi/BT)","menu.CPUFreq.240.build.f_cpu=240000000L","menu.CPUFreq.26=26MHz (26MHz XTAL)","menu.CPUFreq.26.build.f_cpu=26000000L","menu.CPUFreq.40=40MHz (40MHz XTAL)","menu.CPUFreq.40.build.f_cpu=40000000L","menu.CPUFreq.80=80MHz (WiFi/BT)","menu.CPUFreq.80.build.f_cpu=80000000L","menu.DebugLevel.debug=Debug","menu.DebugLevel.debug.build.code_debug=4","menu.DebugLevel.error=Error","menu.DebugLevel.error.build.code_debug=1","menu.DebugLevel.info=Info","menu.DebugLevel.info.build.code_debug=3","menu.DebugLevel.none=None","menu.DebugLevel.none.build.code_debug=0","menu.DebugLevel.verbose=Verbose","menu.DebugLevel.verbose.build.code_debug=5","menu.DebugLevel.warn=Warn","menu.DebugLevel.warn.build.code_debug=2","menu.EraseFlash.all=Enabled","menu.EraseFlash.all.upload.erase_cmd=-e","menu.EraseFlash.none=Disabled","menu.EraseFlash.none.upload.erase_cmd=","menu.EventsCore.0=Core 0","menu.EventsCore.0.build.event_core=-DARDUINO_EVENT_RUNNING_CORE=0","menu.EventsCore.1=Core 1","menu.EventsCore.1.build.event_core=-DARDUINO_EVENT_RUNNING_CORE=1","menu.FlashFreq.40=40MHz","menu.FlashFreq.40.build.flash_freq=40m","menu.FlashFreq.80=80MHz","menu.FlashFreq.80.build.flash_freq=80m","menu.FlashMode.dio=DIO","menu.FlashMode.dio.build.boot=dio","menu.FlashMode.dio.build.flash_mode=dio","menu.FlashMode.qio=QIO","menu.FlashMode.qio.build.boot=qio","menu.FlashMode.qio.build.flash_mode=dio","menu.FlashSize.16M=16MB (128Mb)","menu.FlashSize.16M.build.flash_size=16MB","menu.FlashSize.2M=2MB (16Mb)","menu.FlashSize.2M.build.flash_size=2MB","menu.FlashSize.4M=4MB (32Mb)","menu.FlashSize.4M.build.flash_size=4MB","menu.FlashSize.8M=8MB (64Mb)","menu.FlashSize.8M.build.flash_size=8MB","menu.JTAGAdapter.bridge=ESP USB Bridge","menu.JTAGAdapter.bridge.build.copy_jtag_files=1","menu.JTAGAdapter.bridge.build.openocdscript=esp32-bridge.cfg","menu.JTAGAdapter.default=Disabled","menu.JTAGAdapter.default.build.copy_jtag_files=0","menu.JTAGAdapter.external=FTDI Adapter","menu.JTAGAdapter.external.build.copy_jtag_files=1","menu.JTAGAdapter.external.build.openocdscript=esp32-wrover-kit-3.3v.cfg","menu.LoopCore.0=Core 0","menu.LoopCore.0.build.loop_core=-DARDUINO_RUNNING_CORE=0","menu.LoopCore.1=Core 1","menu.LoopCore.1.build.loop_core=-DARDUINO_RUNNING_CORE=1","menu.PSRAM.disabled=Disabled","menu.PSRAM.disabled.build.defines=","menu.PSRAM.disabled.build.extra_libs=","menu.PSRAM.enabled=Enabled","menu.PSRAM.enabled.build.defines=-DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue -mfix-esp32-psram-cache-strategy=memw","menu.PSRAM.enabled.build.extra_libs=","menu.PartitionScheme.app3M_fat9M_16MB=16M Flash (3MB APP/9.9MB FATFS)","menu.PartitionScheme.app3M_fat9M_16MB.build.partitions=app3M_fat9M_16MB","menu.PartitionScheme.app3M_fat9M_16MB.upload.maximum_size=3145728","menu.PartitionScheme.custom=Custom","menu.PartitionScheme.custom.build.partitions=","menu.PartitionScheme.custom.upload.maximum_size=16777216","menu.PartitionScheme.default=Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)","menu.PartitionScheme.default.build.partitions=default","menu.PartitionScheme.default_8MB=8M with spiffs (3MB APP/1.5MB SPIFFS)","menu.PartitionScheme.default_8MB.build.partitions=default_8MB","menu.PartitionScheme.default_8MB.upload.maximum_size=3342336","menu.PartitionScheme.defaultffat=Default 4MB with ffat (1.2MB APP/1.5MB FATFS)","menu.PartitionScheme.defaultffat.build.partitions=default_ffat","menu.PartitionScheme.fatflash=16M Flash (2MB APP/12.5MB FATFS)","menu.PartitionScheme.fatflash.build.partitions=ffat","menu.PartitionScheme.fatflash.upload.maximum_size=2097152","menu.PartitionScheme.huge_app=Huge APP (3MB No OTA/1MB SPIFFS)","menu.PartitionScheme.huge_app.build.partitions=huge_app","menu.PartitionScheme.huge_app.upload.maximum_size=3145728","menu.PartitionScheme.min_spiffs=Minimal SPIFFS (1.9MB APP with OTA/190KB SPIFFS)","menu.PartitionScheme.min_spiffs.build.partitions=min_spiffs","menu.PartitionScheme.min_spiffs.upload.maximum_size=1966080","menu.PartitionScheme.minimal=Minimal (1.3MB APP/700KB SPIFFS)","menu.PartitionScheme.minimal.build.partitions=minimal","menu.PartitionScheme.no_fs=No FS 4MB (2MB APP x2)","menu.PartitionScheme.no_fs.build.partitions=no_fs","menu.PartitionScheme.no_fs.upload.maximum_size=2031616","menu.PartitionScheme.no_ota=No OTA (2MB APP/2MB SPIFFS)","menu.PartitionScheme.no_ota.build.partitions=no_ota","menu.PartitionScheme.no_ota.upload.maximum_size=2097152","menu.PartitionScheme.noota_3g=No OTA (1MB APP/3MB SPIFFS)","menu.PartitionScheme.noota_3g.build.partitions=noota_3g","menu.PartitionScheme.noota_3g.upload.maximum_size=1048576","menu.PartitionScheme.noota_3gffat=No OTA (1MB APP/3MB FATFS)","menu.PartitionScheme.noota_3gffat.build.partitions=noota_3gffat","menu.PartitionScheme.noota_3gffat.upload.maximum_size=1048576","menu.PartitionScheme.noota_ffat=No OTA (2MB APP/2MB FATFS)","menu.PartitionScheme.noota_ffat.build.partitions=noota_ffat","menu.PartitionScheme.noota_ffat.upload.maximum_size=2097152","menu.PartitionScheme.rainmaker=RainMaker 4MB","menu.PartitionScheme.rainmaker.build.partitions=rainmaker","menu.PartitionScheme.rainmaker.upload.maximum_size=1966080","menu.PartitionScheme.rainmaker_4MB=RainMaker 4MB No OTA","menu.PartitionScheme.rainmaker_4MB.build.partitions=rainmaker_4MB_no_ota","menu.PartitionScheme.rainmaker_4MB.upload.maximum_size=4038656","menu.PartitionScheme.rainmaker_8MB=RainMaker 8MB","menu.PartitionScheme.rainmaker_8MB.build.partitions=rainmaker_8MB","menu.PartitionScheme.rainmaker_8MB.upload.maximum_size=4096000","menu.PartitionScheme.zigbee_zczr=Zigbee ZCZR 4MB with spiffs","menu.PartitionScheme.zigbee_zczr.build.partitions=zigbee_zczr","menu.PartitionScheme.zigbee_zczr.upload.maximum_size=1310720","menu.PartitionScheme.zigbee_zczr_8MB=Zigbee ZCZR 8MB with spiffs","menu.PartitionScheme.zigbee_zczr_8MB.build.partitions=zigbee_zczr_8MB","menu.PartitionScheme.zigbee_zczr_8MB.upload.maximum_size=3407872","menu.UploadSpeed.115200=115200","menu.UploadSpeed.115200.upload.speed=115200","menu.UploadSpeed.230400=230400","menu.UploadSpeed.230400.upload.speed=230400","menu.UploadSpeed.256000=256000","menu.UploadSpeed.256000.upload.speed=256000","menu.UploadSpeed.460800.linux=460800","menu.UploadSpeed.460800.macosx=460800","menu.UploadSpeed.460800.upload.speed=460800","menu.UploadSpeed.512000=512000","menu.UploadSpeed.512000.upload.speed=512000","menu.UploadSpeed.921600=921600","menu.UploadSpeed.921600.upload.speed=921600","menu.ZigbeeMode.default=Disabled","menu.ZigbeeMode.default.build.zigbee_libs=","menu.ZigbeeMode.default.build.zigbee_mode=","menu.ZigbeeMode.zczr=Zigbee ZCZR (coordinator/router)","menu.ZigbeeMode.zczr.build.zigbee_libs=-lesp_zb_api.zczr -lzboss_stack.zczr -lzboss_port.remote","menu.ZigbeeMode.zczr.build.zigbee_mode=-DZIGBEE_MODE_ZCZR","monitor_port.serial.dtr=off","monitor_port.serial.rts=off","name=ESP32 Dev Module","pluggable_discovery.required.0=builtin:serial-discovery","pluggable_discovery.required.1=builtin:mdns-discovery","pluggable_monitor.required.serial=builtin:serial-monitor","recipe.S.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc\"  -MMD -c -x assembler-with-cpp \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/S_flags\" -w -Os -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.ar.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc-ar\" cr  \"{archive_file_path}\" \"{object_file}\"","recipe.c.combine.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-g++\" \"-Wl,--Map=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.map\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/lib\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/ld\" \"-LC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi\" \"-Wl,--wrap=esp_panic_handler\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_flags\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_scripts\"  -Wl,--start-group {object_files} \"{archive_file_path}\"   \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/ld_libs\"  -Wl,--end-group -Wl,-EL -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.c.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-gcc\"  -MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/c_flags\" -w -Os -Werror=return-type -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.cpp.o.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-g++\"  -MMD -c \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/cpp_flags\" -w -Os -Werror=return-type -DF_CPU=240000000L -DARDUINO=10607 -DARDUINO_ESP32_DEV -DARDUINO_ARCH_ESP32 -DARDUINO_BOARD=\"ESP32_DEV\" -DARDUINO_VARIANT=\"esp32\" -DARDUINO_PARTITION_huge_app -DARDUINO_HOST_OS=\"windows\" -DARDUINO_FQBN=\"esp32:esp32:esp32:UploadSpeed=921600,CPUFreq=240,FlashFreq=80,FlashMode=qio,FlashSize=4M,PartitionScheme=huge_app,DebugLevel=none,PSRAM=disabled,LoopCore=1,EventsCore=1,EraseFlash=none,JTAGAdapter=default,ZigbeeMode=default\" -DESP32=ESP32 -DCORE_DEBUG_LEVEL=0 -DARDUINO_RUNNING_CORE=1 -DARDUINO_EVENT_RUNNING_CORE=1  -DARDUINO_USB_CDC_ON_BOOT=0  \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/defines\" \"-IC:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\" -iprefix \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/include/\" \"@C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/flags/includes\" \"-IC:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32/qio_qspi/include\" {includes} \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/build_opt.h\" \"@C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\" \"{source_file}\" -o \"{object_file}\"","recipe.hooks.core.postbuild.1.pattern=cmd /c type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.core.prebuild.1.pattern=cmd /c echo \"-DARDUINO_CORE_BUILD\" > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.objcopy.postobjcopy.1.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\libraries\\Insights\" \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_insights_package.exe\" C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94 sketch_oct5a.ino \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\"","recipe.hooks.objcopy.postobjcopy.1.pattern_args=C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94 sketch_oct5a.ino \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\"","recipe.hooks.objcopy.postobjcopy.2.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\libraries\\ESP_SR\" if exist \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\esp_sr\\srmodels.bin\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\esp_sr\\srmodels.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\srmodels.bin\"","recipe.hooks.objcopy.postobjcopy.3.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0/esptool.exe\" --chip esp32 merge-bin -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.merged.bin\" --pad-to-size 4MB --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","recipe.hooks.objcopy.postobjcopy.3.pattern_args=--chip esp32 merge-bin -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.merged.bin\" --pad-to-size 4MB --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","recipe.hooks.prebuild.1.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\partitions.csv\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.2.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\" if exist \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\partitions.csv\" COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.3.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\" COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\partitions\\huge_app.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\partitions.csv\"","recipe.hooks.prebuild.4.pattern=cmd /c IF EXIST \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\bootloader.bin\" ( COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" ) ELSE ( IF EXIST \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\bootloader.bin\" ( COPY \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\variants\\esp32\\bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" ) ELSE ( \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0\\esptool.exe\" --chip esp32 elf2image --flash-mode dio --flash-freq 80m --flash-size 4MB -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sketch_oct5a.ino.bootloader.bin\" \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\bin\\bootloader_qio_80m.elf\" ) )","recipe.hooks.prebuild.4.pattern_args=--chip esp32 elf2image --flash-mode dio --flash-freq 80m --flash-size 4MB -o","recipe.hooks.prebuild.5.pattern=cmd /c if exist \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\build_opt.h\" COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a\\build_opt.h\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\"","recipe.hooks.prebuild.6.pattern=cmd /c if not exist \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\" type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\build_opt.h\"","recipe.hooks.prebuild.7.pattern=cmd /c type nul > \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/file_opts\"","recipe.hooks.prebuild.8.pattern=cmd /c COPY /y \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4\\esp32\\sdkconfig\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94\\sdkconfig\"","recipe.objcopy.bin.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0/esptool.exe\" --chip esp32 elf2image --flash-mode \"dio\" --flash-freq \"80m\" --flash-size \"4MB\" --elf-sha256-offset 0xb0 -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.objcopy.bin.pattern_args=--chip esp32 elf2image --flash-mode \"dio\" --flash-freq \"80m\" --flash-size \"4MB\" --elf-sha256-offset 0xb0 -o \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.objcopy.partitions.bin.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_esp32part.exe\" -q \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/partitions.csv\" \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\"","recipe.output.save_file=sketch_oct5a.ino.esp32.bin","recipe.output.tmp_file=sketch_oct5a.ino.bin","recipe.size.pattern=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411/bin/xtensa-esp32-elf-size\" -A \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.elf\"","recipe.size.regex=^(?:\\.iram0\\.text|\\.iram0\\.vectors|\\.dram0\\.data|\\.dram1\\.data|\\.flash\\.text|\\.flash\\.rodata|\\.flash\\.appdesc|\\.flash\\.init_array|\\.eh_frame|)\\s+([0-9]+).*","recipe.size.regex.data=^(?:\\.dram0\\.data|\\.dram0\\.bss|\\.dram1\\.data|\\.dram1\\.bss|\\.noinit)\\s+([0-9]+).*","runtime.hardware.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32","runtime.ide.path=C:\\Program Files\\Arduino IDE\\resources\\app\\lib\\backend\\resources","runtime.ide.version=10607","runtime.os=windows","runtime.platform.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1","runtime.tools.arduinoOTA-1.3.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.arduinoOTA.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\arduinoOTA\\1.3.0","runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino7.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avr-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avr-gcc\\7.3.0-atmel3.6.1-arduino7","runtime.tools.avrdude-6.3.0-arduino17.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.avrdude.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","runtime.tools.ctags-5.8-arduino11.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.ctags.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\ctags\\5.8-arduino11","runtime.tools.dfu-discovery-0.1.2.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\dfu-discovery\\0.1.2","runtime.tools.dfu-util-0.11.0-arduino5.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.dfu-util.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","runtime.tools.esp-rv32-2411.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-rv32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","runtime.tools.esp-x32-2411.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp-x32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","runtime.tools.esp32-arduino-libs-idf-release_v5.5-129cd0d2-v4.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","runtime.tools.esp32-arduino-libs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","runtime.tools.esptool_py-5.1.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","runtime.tools.esptool_py.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","runtime.tools.mdns-discovery-1.0.6.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.6","runtime.tools.mdns-discovery-1.0.8.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.8","runtime.tools.mdns-discovery-1.0.9.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mdns-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\mdns-discovery\\1.0.9","runtime.tools.mklittlefs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mklittlefs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mklittlefs-4.0.2-db0513a.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\4.0.2-db0513a","runtime.tools.mklittlefs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mklittlefs\\4.0.2-db0513a","runtime.tools.mkspiffs-0.2.3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.mkspiffs-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\mkspiffs\\3.1.0-gcc10.3-e5f9fec","runtime.tools.mkspiffs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\mkspiffs\\0.2.3","runtime.tools.openocd-esp32-v0.12.0-esp32-20250707.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707","runtime.tools.openocd-esp32.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\openocd-esp32\\v0.12.0-esp32-20250707","runtime.tools.python3-3.7.2-post1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.python3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\python3\\3.7.2-post1","runtime.tools.riscv32-esp-elf-gdb-16.2_20250324.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","runtime.tools.riscv32-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","runtime.tools.serial-discovery-1.2.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.2.1","runtime.tools.serial-discovery-1.3.2.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.2","runtime.tools.serial-discovery-1.3.3.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.3","runtime.tools.serial-discovery-1.3.5.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.3.5","runtime.tools.serial-discovery-1.4.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.0","runtime.tools.serial-discovery-1.4.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-discovery.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-discovery\\1.4.1","runtime.tools.serial-monitor-0.10.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.10.0","runtime.tools.serial-monitor-0.11.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.11.0","runtime.tools.serial-monitor-0.12.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.12.0","runtime.tools.serial-monitor-0.13.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.13.0","runtime.tools.serial-monitor-0.14.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.14.1","runtime.tools.serial-monitor-0.15.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.serial-monitor-0.9.1.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.9.1","runtime.tools.serial-monitor.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\builtin\\tools\\serial-monitor\\0.15.0","runtime.tools.xtensa-esp-elf-gdb-16.2_20250324.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","runtime.tools.xtensa-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","runtime.tools.xtensa-esp32-elf-gcc-esp-2021r2-patch5-8.4.0.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-esp32-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp32-elf-gcc\\esp-2021r2-patch5-8.4.0","runtime.tools.xtensa-lx106-elf-gcc-3.1.0-gcc10.3-e5f9fec.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","runtime.tools.xtensa-lx106-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp8266\\tools\\xtensa-lx106-elf-gcc\\3.1.0-gcc10.3-e5f9fec","serial.disableDTR=true","serial.disableRTS=true","sketch_path=C:\\Users\\baerb\\AppData\\Local\\Temp\\.arduinoIDE-unsaved202595-18448-1osf7s6.cm2\\sketch_oct5a","software=ARDUINO","tools.avrdude.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\avrdude\\6.3.0-arduino17","tools.dfu-util.cmd=dfu-util","tools.dfu-util.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\arduino\\tools\\dfu-util\\0.11.0-arduino5","tools.dfu-util.upload.params.quiet=","tools.dfu-util.upload.params.verbose=-d","tools.dfu-util.upload.pattern=\"{path}/{cmd}\" --device {vid.0}:{pid.0} -D \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" -Q","tools.esp32-arduino-libs.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp32-arduino-libs\\idf-release_v5.5-129cd0d2-v4","tools.esp_ota.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\espota.exe\" -r","tools.esp_ota.upload.field.password=Password","tools.esp_ota.upload.field.password.secret=true","tools.esp_ota.upload.pattern={cmd} -i {upload.port.address} -p {upload.port.properties.port} \"--auth={upload.field.password}\" -f \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esp_ota.upload.protocol=network","tools.esptool_py.bootloader.params.quiet=","tools.esptool_py.bootloader.params.verbose=","tools.esptool_py.bootloader.pattern=","tools.esptool_py.bootloader.protocol=serial","tools.esptool_py.cmd=esptool.exe","tools.esptool_py.erase.params.quiet=","tools.esptool_py.erase.params.verbose=","tools.esptool_py.erase.pattern=\"{path}/{cmd}\" {erase.pattern_args}","tools.esptool_py.erase.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset erase-flash","tools.esptool_py.erase.protocol=serial","tools.esptool_py.network_cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\espota.exe\" -r","tools.esptool_py.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","tools.esptool_py.program.params.quiet=","tools.esptool_py.program.params.verbose=","tools.esptool_py.program.pattern=\"{path}/{cmd}\" {program.pattern_args}","tools.esptool_py.program.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset write-flash -z --flash-mode keep --flash-freq keep --flash-size keep 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esptool_py.upload.network_pattern={network_cmd} -i \"{serial.port}\" -p \"{network.port}\" \"--auth={network.password}\" -f \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\"","tools.esptool_py.upload.params.quiet=","tools.esptool_py.upload.params.verbose=","tools.esptool_py.upload.pattern=\"{path}/{cmd}\" {upload.pattern_args}","tools.esptool_py.upload.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default-reset --after hard-reset write-flash  -z --flash-mode keep --flash-freq keep --flash-size keep 0x1000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bootloader.bin\" 0x8000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.partitions.bin\" 0xe000 \"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1/tools/partitions/boot_app0.bin\" 0x10000 \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py.upload.protocol=serial","tools.esptool_py_app_only.cmd=esptool.exe","tools.esptool_py_app_only.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esptool_py\\5.1.0","tools.esptool_py_app_only.upload.params.quiet=","tools.esptool_py_app_only.upload.params.verbose=","tools.esptool_py_app_only.upload.pattern=\"{path}/{cmd}\" --chip esp32 --port \"{serial.port}\" --baud 921600  --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB {build.flash_offset} \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py_app_only.upload.pattern_args=--chip esp32 --port \"{serial.port}\" --baud 921600  --before default_reset --after hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB {build.flash_offset} \"C:\\Users\\baerb\\AppData\\Local\\arduino\\sketches\\DB967282F33456BE0552555DDE24DC94/sketch_oct5a.ino.bin\" ","tools.esptool_py_app_only.upload.protocol=serial","tools.gen_esp32part.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_esp32part.exe\"","tools.gen_insights_pkg.cmd=\"C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\hardware\\esp32\\3.3.1\\tools\\gen_insights_package.exe\"","tools.riscv32-esp-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-rv32\\2411","tools.riscv32-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\riscv32-esp-elf-gdb\\16.2_20250324","tools.xtensa-esp-elf-gcc.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\esp-x32\\2411","tools.xtensa-esp-elf-gdb.path=C:\\Users\\baerb\\AppData\\Local\\Arduino15\\packages\\esp32\\tools\\xtensa-esp-elf-gdb\\16.2_20250324","upload.erase_cmd=","upload.extra_flags=","upload.flags=","upload.maximum_data_size=327680","upload.maximum_size=3145728","upload.speed=921600","upload.tool=esptool_py","upload.tool.default=esptool_py","upload.tool.network=esp_ota","version=3.3.1"]}}Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"6/57","percentage":10}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/57","percentage":12}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"7/57","percentage":12}}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"8/57","percentage":14}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/57","percentage":15}}}Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"9/57","percentage":15}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/57","percentage":17}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"10/57","percentage":17}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/57","percentage":19}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"11/57","percentage":19}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/57","percentage":21}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"12/57","percentage":21}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/57","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"13/57","percentage":22}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/57","percentage":24}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"14/57","percentage":24}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/57","percentage":26}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/57","percentage":26}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/57","percentage":29}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/57","percentage":29}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/57","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/57","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/57","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/57","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/57","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/57","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/57","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/57","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/57","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/57","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/57","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/57","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/57","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/57","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/57","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/57","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/58","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/58","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/58","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/58","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/58","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/58","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/58","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/58","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/58","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/58","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/58","percentage":68}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/58","percentage":68}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/58","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/58","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/58","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/58","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/58","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/58","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/58","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/58","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/58","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/58","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/58","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/58","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/58","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/58","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/58","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/58","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/58","percentage":91}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/58","percentage":91}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/58","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/58","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/58","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/58","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/58","percentage":96}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/58","percentage":96}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/58","percentage":98}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 247

{"jsonrpc":"2.0","id":2,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":108,"character":20}}}
>>>
Content-Length: 304

{"jsonrpc":"2.0","id":2,"result":{"contents":{"kind":"markdown","value":"### variable `device`  \n\n---\nType: `BLEAdvertisedDevice *`  \n\n---\n```cpp\n// In drawBleResults\nBLEAdvertisedDevice *device = devices[i]\n```"},"range":{"start":{"line":108,"character":15},"end":{"line":108,"character":21}}}}
<<<
Content-Length: 244

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}
<<<
Content-Length: 244

{"jsonrpc":"2.0","id":4,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":4,"result":null}
<<<
Content-Length: 318

{"jsonrpc":"2.0","id":5,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":178,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":5,"result":[]}
<<<
Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":12},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":178,"character":0}},"rangeLength":4243,"text":""}]}}Content-Length: 217

{"jsonrpc":"2.0","id":6,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 217

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}
>>>
Content-Length: 36

{"jsonrpc":"2.0","id":6,"result":[]}Content-Length: 36

{"jsonrpc":"2.0","id":7,"result":[]}
<<<
Content-Length: 500

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino","version":13},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"SSID        CH  dBm | BT           dBm\n---------------------------------------\nMyNetwork1   6  -45 | JBL_Flip5    -61\nGuest_AP     11 -52 | 12:AB:34     -74\n"}]}}Content-Length: 217

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}Content-Length: 217

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/AppData/Local/Temp/.arduinoIDE-unsaved202595-18448-1osf7s6.cm2/sketch_oct5a/sketch_oct5a.ino"}}}






Started logging.

<<<
Content-Length: 3170

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":8744,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"c:\\Users\\baerb\\Documents\\Arduino-Sketche\\ESP32-2432S032C_I_WLAN_BT_Scanner","rootUri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner","name":"ESP32-2432S032C_I_WLAN_BT_Scanner"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 5036

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","languageId":"cpp","version":1,"text":"// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}}Content-Length: 321

{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 222

{"jsonrpc":"2.0","id":2,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 249

{"jsonrpc":"2.0","id":3,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":1,"character":0}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":3}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":2},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"rangeLength":0,"text":"\n"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":2}}Content-Length: 222

{"jsonrpc":"2.0","id":4,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":4}}Content-Length: 222

{"jsonrpc":"2.0","id":5,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 321

{"jsonrpc":"2.0","id":6,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":0}},"context":{"diagnostics":[]}}}Content-Length: 5019

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":2},"text":"\n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  t
>>>
Content-Length: 113

{"jsonrpc":"2.0","id":"1","method":"window/workDoneProgress/create","params":{"token":"backgroundIndexProgress"}}Content-Length: 36

{"jsonrpc":"2.0","id":1,"result":[]}Content-Length: 3082

{"jsonrpc":"2.0","id":2,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":16,"character":0},"end":{"line":16,"character":25}},"selectionRange":{"start":{"line":16,"character":9},"end":{"line":16,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":18,"character":0},"end":{"line":18,"character":24}},"selectionRange":{"start":{"line":18,"character":16},"end":{"line":18,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":17}},"selectionRange":{"start":{"line":19,"character":9},"end":{"line":19,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":21,"character":0},"end":{"line":26,"character":1}},"selectionRange":{"start":{"line":21,"character":7},"end":{"line":21,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":22,"character":2},"end":{"line":22,"character":13}},"selectionRange":{"start":{"line":22,"character":9},"end":{"line":22,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":14}},"selectionRange":{"start":{"line":23,"character":10},"end":{"line":23,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":17}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":29}},"selectionRange":{"start":{"line":25,"character":19},"end":{"line":25,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":29,"character":0},"end":{"line":33,"character":1}},"selectionRange":{"start":{"line":29,"character":5},"end":{"line":29,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":36,"character":0},"end":{"line":57,"character":1}},"selectionRange":{"start":{"line":36,"character":5},"end":{"line":36,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":60,"character":0},"end":{"line":81,"character":1}},"selectionRange":{"start":{"line":60,"character":5},"end":{"line":60,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":84,"character":0},"end":{"line":134,"character":1}},"selectionRange":{"start":{"line":84,"character":5},"end":{"line":84,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":136,"character":0},"end":{"line":154,"character":1}},"selectionRange":{"start":{"line":136,"character":5},"end":{"line":136,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":156,"character":0},"end":{"line":184,"character":1}},"selectionRange":{"start":{"line":156,"character":5},"end":{"line":156,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":3,"result":null}Content-Length: 3082

{"jsonrpc":"2.0","id":4,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3082

{"jsonrpc":"2.0","id":5,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 36

{"jsonrpc":"2.0","id":6,"result":[]}
<<<
ft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}Content-Length: 222

{"jsonrpc":"2.0","id":7,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":3},"contentChanges":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},
>>>
Content-Length: 3082

{"jsonrpc":"2.0","id":7,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
"rangeLength":0,"text":"/"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":7}}Content-Length: 222

{"jsonrpc":"2.0","id":8,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":8}}Content-Length: 222

{"jsonrpc":"2.0","id":9,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 306

{"jsonrpc":"2.0","id":10,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":0,"character":1},"context":{"triggerKind":2,"triggerCharacter":"/"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":4},"contentChanges":[{"range":{"start":{"line":0,"character":1},"end":{"line":0,"character":1}},"rangeLength":0,"text":"/"}]}}Content-Length: 62

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":9}}Content-Length: 223

{"jsonrpc":"2.0","id":11,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":11}}Content-Length: 223

{"jsonrpc":"2.0","id":12,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":10}}Content-Length: 306

{"jsonrpc":"2.0","id":13,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":0,"character":2},"context":{"triggerKind":2,"triggerCharacter":"/"}}}Content-Length: 322

{"jsonrpc":"2.0","id":14,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":2},"end":{"line":0,"character":2}},"context":{"diagnostics":[]}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":5},"contentChanges":[{"range":{"start":{"line":0,"character":2},"end":{"line":0,"character":2}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}Content-Length: 223

{"jsonrpc":"2.0","id":15,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":15}}Content-Length: 223

{"jsonrpc":"2.0","id":16,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WL
>>>
Content-Length: 2874

{"jsonrpc":"2.0","id":8,"result":[{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 2874

{"jsonrpc":"2.0","id":9,"result":[{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 70

{"jsonrpc":"2.0","id":10,"result":{"isIncomplete":false,"items":null}}Content-Length: 3083

{"jsonrpc":"2.0","id":11,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":12,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 70

{"jsonrpc":"2.0","id":13,"result":{"isIncomplete":false,"items":null}}Content-Length: 37

{"jsonrpc":"2.0","id":14,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":15,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":16,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
AN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":6},"contentChanges":[{"range":{"start":{"line":0,"character":3},"end":{"line":0,"character":3}},"rangeLength":0,"text":"D"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":16}}Content-Length: 223

{"jsonrpc":"2.0","id":17,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":17}}Content-Length: 223

{"jsonrpc":"2.0","id":18,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 322

{"jsonrpc":"2.0","id":19,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":4},"end":{"line":0,"character":4}},"context":{"diagnostics":[]}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":7},"contentChanges":[{"range":{"start":{"line":0,"character":4},"end":{"line":0,"character":4}},"rangeLength":0,"text":"i"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":18}}Content-Length: 223

{"jsonrpc":"2.0","id":20,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":19}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":20}}Content-Length: 223

{"jsonrpc":"2.0","id":21,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":8},"contentChanges":[{"range":{"start":{"line":0,"character":5},"end":{"line":0,"character":5}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":21}}Content-Length: 223

{"jsonrpc":"2.0","id":22,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":22}}Content-Length: 223

{"jsonrpc":"2.0","id":23,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 344

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":9},"contentChanges":[{"range":{"start":{"line":0,"character":6},"end":{"line":0,"character":6}},"rangeLength":0,"text":"s"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":23}}Content-Length: 223

{"jsonrpc":"2.0","id":24,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRe
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":17,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":18,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":19,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":20,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":21,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":22,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":23,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":24,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
quest","params":{"id":24}}Content-Length: 223

{"jsonrpc":"2.0","id":25,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":10},"contentChanges":[{"range":{"start":{"line":0,"character":7},"end":{"line":0,"character":7}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":25}}Content-Length: 223

{"jsonrpc":"2.0","id":26,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":26}}Content-Length: 223

{"jsonrpc":"2.0","id":27,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":11},"contentChanges":[{"range":{"start":{"line":0,"character":8},"end":{"line":0,"character":8}},"rangeLength":0,"text":"r"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}Content-Length: 223

{"jsonrpc":"2.0","id":28,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":28}}Content-Length: 223

{"jsonrpc":"2.0","id":29,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":12},"contentChanges":[{"range":{"start":{"line":0,"character":9},"end":{"line":0,"character":9}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":29}}Content-Length: 223

{"jsonrpc":"2.0","id":30,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":30}}Content-Length: 223

{"jsonrpc":"2.0","id":31,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 5030

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":12},"text":"// Dieser \n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#inclu
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":25,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":26,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":27,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":28,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":29,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":30,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":31,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
de <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":13},"contentChanges":[{"range":{"start":{"line":0,"character":10},"end":{"line":0,"character":10}},"rangeLength":0,"text":"S"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":31}}Content-Length: 223

{"jsonrpc":"2.0","id":32,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":32}}Content-Length: 223

{"jsonrpc":"2.0","id":33,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":34,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":11},"end":{"line":0,"character":11}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":14},"contentChanges":[{"range":{"start":{"line":0,"character":11},"end":{"line":0,"character":11}},"rangeLength":0,"text":"k"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":33}}Content-Length: 223

{"jsonrpc":"2.0","id":35,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":35}}Content-Length: 223

{"jsonrpc":"2.0","id":36,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":37,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":12}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":15},"contentChanges":[{"range":{"start":{"line":0,"character":12},"end":{"line":0,"character":12}},"rangeLength":0,"text":"e"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}Content-Length: 223

{"jsonrpc":"2.0","id":38,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":37}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":38}}Content-Length: 223

{"jsonrpc":"2.0","id":39,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Docu
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":32,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":33,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":34,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":35,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":36,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":37,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":38,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":39,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
ments/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":16},"contentChanges":[{"range":{"start":{"line":0,"character":13},"end":{"line":0,"character":13}},"rangeLength":0,"text":"t"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":39}}Content-Length: 223

{"jsonrpc":"2.0","id":40,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}Content-Length: 223

{"jsonrpc":"2.0","id":41,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":17},"contentChanges":[{"range":{"start":{"line":0,"character":14},"end":{"line":0,"character":14}},"rangeLength":0,"text":"c"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":41}}Content-Length: 223

{"jsonrpc":"2.0","id":43,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":43}}Content-Length: 223

{"jsonrpc":"2.0","id":44,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":18},"contentChanges":[{"range":{"start":{"line":0,"character":15},"end":{"line":0,"character":15}},"rangeLength":0,"text":"h"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":44}}Content-Length: 223

{"jsonrpc":"2.0","id":45,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":45}}Content-Length: 223

{"jsonrpc":"2.0","id":46,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":47,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":16},"end":{"line":0,"character":16}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":19},"contentChanges":[{"range":{"start":{"line":0,"character":16},"end":{"line":0,"character":16}},"rangeLength":0,"
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":40,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":41,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":42,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":43,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":44,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":45,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":46,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":47,"result":[]}
<<<
text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":46}}Content-Length: 223

{"jsonrpc":"2.0","id":48,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":47}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":48}}Content-Length: 223

{"jsonrpc":"2.0","id":49,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 5037

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":19},"text":"// Dieser Sketch \n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n 
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":48,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":49,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
     if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":20},"contentChanges":[{"range":{"start":{"line":0,"character":17},"end":{"line":0,"character":17}},"rangeLength":0,"text":"i"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":49}}Content-Length: 223

{"jsonrpc":"2.0","id":50,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":50}}Content-Length: 223

{"jsonrpc":"2.0","id":51,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":52,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":18},"end":{"line":0,"character":18}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":21},"contentChanges":[{"range":{"start":{"line":0,"character":18},"end":{"line":0,"character":18}},"rangeLength":0,"text":"s"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}Content-Length: 223

{"jsonrpc":"2.0","id":53,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":52}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":53}}Content-Length: 223

{"jsonrpc":"2.0","id":54,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"f
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":50,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":51,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":52,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":53,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
ile:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":22},"contentChanges":[{"range":{"start":{"line":0,"character":19},"end":{"line":0,"character":19}},"rangeLength":0,"text":"t"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":54}}Content-Length: 223

{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":55}}Content-Length: 223

{"jsonrpc":"2.0","id":56,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":23},"contentChanges":[{"range":{"start":{"line":0,"character":20},"end":{"line":0,"character":20}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":56}}Content-Length: 223

{"jsonrpc":"2.0","id":57,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":57}}Content-Length: 223

{"jsonrpc":"2.0","id":58,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":24},"contentChanges":[{"range":{"start":{"line":0,"character":21},"end":{"line":0,"character":21}},"rangeLength":0,"text":"f"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":58}}Content-Length: 223

{"jsonrpc":"2.0","id":59,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":59}}Content-Length: 223

{"jsonrpc":"2.0","id":60,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":61,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":22},"end":{"line":0,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":25},"contentChanges":[{"range":{"start":{"line":0,"character":22},"end":{"line":0,"character":22}},"rangeLength":0,"text":"ü"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":60}}Content-Length: 223

{"jsonrpc":"2.0","id":62,"method":"textDocument/d
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":54,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":55,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":56,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":57,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":58,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":59,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":60,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":61,"result":[]}
<<<
ocumentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":61}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":62}}Content-Length: 223

{"jsonrpc":"2.0","id":63,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":26},"contentChanges":[{"range":{"start":{"line":0,"character":23},"end":{"line":0,"character":23}},"rangeLength":0,"text":"r"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":63}}Content-Length: 223

{"jsonrpc":"2.0","id":64,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":64}}Content-Length: 223

{"jsonrpc":"2.0","id":65,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":27},"contentChanges":[{"range":{"start":{"line":0,"character":24},"end":{"line":0,"character":24}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":65}}Content-Length: 223

{"jsonrpc":"2.0","id":66,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":66}}Content-Length: 223

{"jsonrpc":"2.0","id":67,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":28},"contentChanges":[{"range":{"start":{"line":0,"character":25},"end":{"line":0,"character":25}},"rangeLength":0,"text":"d"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":67}}Content-Length: 223

{"jsonrpc":"2.0","id":68,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":68}}Content-Length: 223

{"jsonrpc":"2.0","id":69,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":70,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":26},"end":{"line":0,"character":26}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":62,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":63,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":64,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":65,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":66,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":67,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":68,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":69,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":70,"result":[]}
<<<
didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":29},"contentChanges":[{"range":{"start":{"line":0,"character":26},"end":{"line":0,"character":26}},"rangeLength":0,"text":"a"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":69}}Content-Length: 223

{"jsonrpc":"2.0","id":71,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":70}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":71}}Content-Length: 223

{"jsonrpc":"2.0","id":72,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":73,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":27},"end":{"line":0,"character":27}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":30},"contentChanges":[{"range":{"start":{"line":0,"character":27},"end":{"line":0,"character":27}},"rangeLength":0,"text":"s"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":72}}Content-Length: 223

{"jsonrpc":"2.0","id":74,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":73}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":74}}Content-Length: 223

{"jsonrpc":"2.0","id":75,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":31},"contentChanges":[{"range":{"start":{"line":0,"character":28},"end":{"line":0,"character":28}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":75}}Content-Length: 223

{"jsonrpc":"2.0","id":76,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":76}}Content-Length: 223

{"jsonrpc":"2.0","id":77,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":32},"contentChanges":[{"range":{"start":{"line":0,"character":29},"end":{"line":0,"character":29}},"rangeLength":0,"text":"B"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":77}}Content-Length: 223

{"jsonrpc":"2.0","id":78,"method":"textDocument/documentSymbol","par
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":71,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":72,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":73,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":74,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":75,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":76,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":77,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
ams":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":78}}Content-Length: 223

{"jsonrpc":"2.0","id":79,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":80,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":30},"end":{"line":0,"character":30}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":33},"contentChanges":[{"range":{"start":{"line":0,"character":30},"end":{"line":0,"character":30}},"rangeLength":0,"text":"o"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":79}}Content-Length: 223

{"jsonrpc":"2.0","id":81,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":80}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":81}}Content-Length: 223

{"jsonrpc":"2.0","id":82,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":83,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":31},"end":{"line":0,"character":31}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":34},"contentChanges":[{"range":{"start":{"line":0,"character":31},"end":{"line":0,"character":31}},"rangeLength":0,"text":"a"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":82}}Content-Length: 223

{"jsonrpc":"2.0","id":84,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":83}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":84}}Content-Length: 223

{"jsonrpc":"2.0","id":85,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":35},"contentChanges":[{"range":{"start":{"line":0,"character":32},"end":{"line":0,"character":32}},"rangeLength":0,"text":"r"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":85}}Content-Length: 223

{"jsonrpc":"2.0","id":86,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":78,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":79,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":80,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":81,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":82,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":83,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":84,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":85,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":86}}Content-Length: 223

{"jsonrpc":"2.0","id":87,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":88,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":33},"end":{"line":0,"character":33}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":36},"contentChanges":[{"range":{"start":{"line":0,"character":33},"end":{"line":0,"character":33}},"rangeLength":0,"text":"d"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":87}}Content-Length: 223

{"jsonrpc":"2.0","id":89,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":88}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":89}}Content-Length: 223

{"jsonrpc":"2.0","id":90,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":91,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":34},"end":{"line":0,"character":34}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":37},"contentChanges":[{"range":{"start":{"line":0,"character":34},"end":{"line":0,"character":34}},"rangeLength":0,"text":" "}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":90}}Content-Length: 223

{"jsonrpc":"2.0","id":92,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":91}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":92}}Content-Length: 223

{"jsonrpc":"2.0","id":93,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 5056

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":37},"text":"// Dieser Sketch ist für das Board \n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":86,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":87,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":88,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":89,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":90,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":91,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":92,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":93,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":38},"contentChanges":[{"range":{"start":{"line":0,"character":35},"end":{"line":0,"character":35}},"rangeLength":0,"text":"E"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":93}}Content-Length: 223

{"jsonrpc":"2.0","id":94,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":94}}Content-Length: 223

{"jsonrpc":"2.0","id":95,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":96,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":36},"end":{"line":0,"character":36}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":39},"contentChanges":[{"range":{"start":{"line":0,"character":36},"end":{"line":0,"character":36}},"rangeLength":0,"text":"S"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":95}}Content-Length: 223

{"jsonrpc":"2.0","id":97,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":96}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":97}}Content-Length: 223

{"jsonrpc":"2.0","id":98,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 324

{"jsonrpc":"2.0","id":99,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":37},"end":{"line":0,"character":37}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":40},"contentChanges":[{"range":{"start":{"line":0,"character":37},"end":{"line":0,"character":37}},"rangeLength":0,"text":"P"}]}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":98}}Content-Length: 224

{"jsonrpc":"2.0","id":100,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":99}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":100}}Content-Length: 224

{"jsonrpc":"2.0","id":101,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":102,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Use
>>>
Content-Length: 3083

{"jsonrpc":"2.0","id":94,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":95,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":96,"result":[]}Content-Length: 3083

{"jsonrpc":"2.0","id":97,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3083

{"jsonrpc":"2.0","id":98,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 37

{"jsonrpc":"2.0","id":99,"result":[]}Content-Length: 3084

{"jsonrpc":"2.0","id":100,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":101,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
rs/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":38},"end":{"line":0,"character":38}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":41},"contentChanges":[{"range":{"start":{"line":0,"character":38},"end":{"line":0,"character":38}},"rangeLength":0,"text":"3"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":101}}Content-Length: 224

{"jsonrpc":"2.0","id":103,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":102}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":103}}Content-Length: 224

{"jsonrpc":"2.0","id":104,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":105,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":39},"end":{"line":0,"character":39}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":42},"contentChanges":[{"range":{"start":{"line":0,"character":39},"end":{"line":0,"character":39}},"rangeLength":0,"text":"2"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":104}}Content-Length: 224

{"jsonrpc":"2.0","id":106,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":105}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":106}}Content-Length: 224

{"jsonrpc":"2.0","id":107,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":108,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":40},"end":{"line":0,"character":40}},"context":{"diagnostics":[]}}}Content-Length: 5061

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":42},"text":"// Dieser Sketch ist für das Board ESP32\n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial S
>>>
Content-Length: 38

{"jsonrpc":"2.0","id":102,"result":[]}Content-Length: 3084

{"jsonrpc":"2.0","id":103,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":104,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":105,"result":[]}Content-Length: 3084

{"jsonrpc":"2.0","id":106,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":107,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":108,"result":[]}
<<<
erialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":43},"contentChanges":[{"range":{"start":{"line":0,"character":40},"end":{"line":0,"character":40}},"rangeLength":0,"text":"-"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":107}}Content-Length: 224

{"jsonrpc":"2.0","id":109,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":108}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":109}}Content-Length: 224

{"jsonrpc":"2.0","id":110,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":111,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":41},"end":{"line":0,"character":41}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":44},"contentChanges":[{"range":{"start":{"line":0,"character":41},"end":{"line":0,"character":41}},"rangeLength":0,"text":"2"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":110}}Content-Length: 224

{"jsonrpc":"2.0","id":112,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":111}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":112}}Content-Length: 224

{"jsonrpc":"2.0","id":113,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":45},"contentChanges":[{"range":{"start":{"line":0,"character":42},"end":{"line":0,"character":42}},"rangeLength":0,"text":"4"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":113}}Content-Length: 224

{"jsonrpc":"2.0","id":114,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":114}}Content-Length: 224

{"jsonrpc":"2.0","id":115,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":116,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":43},"end":{"line":0,"character":43}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/
>>>
Content-Length: 3084

{"jsonrpc":"2.0","id":109,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":110,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":111,"result":[]}Content-Length: 3084

{"jsonrpc":"2.0","id":112,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":113,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":114,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":115,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":116,"result":[]}
<<<
Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":46},"contentChanges":[{"range":{"start":{"line":0,"character":43},"end":{"line":0,"character":43}},"rangeLength":0,"text":"3"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":115}}Content-Length: 224

{"jsonrpc":"2.0","id":117,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":116}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":117}}Content-Length: 224

{"jsonrpc":"2.0","id":118,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":47},"contentChanges":[{"range":{"start":{"line":0,"character":44},"end":{"line":0,"character":44}},"rangeLength":0,"text":"2"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":118}}Content-Length: 224

{"jsonrpc":"2.0","id":119,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":119}}Content-Length: 224

{"jsonrpc":"2.0","id":120,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":121,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":45},"end":{"line":0,"character":45}},"context":{"diagnostics":[]}}}Content-Length: 5066

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":47},"text":"// Dieser Sketch ist für das Board ESP32-2432\n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(
>>>
Content-Length: 3084

{"jsonrpc":"2.0","id":117,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":118,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":119,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":120,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":121,"result":[]}
<<<
\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":48},"contentChanges":[{"range":{"start":{"line":0,"character":45},"end":{"line":0,"character":45}},"rangeLength":0,"text":"S"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":120}}Content-Length: 224

{"jsonrpc":"2.0","id":122,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Lengt
>>>
Content-Length: 3084

{"jsonrpc":"2.0","id":122,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
h: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":121}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":122}}Content-Length: 224

{"jsonrpc":"2.0","id":123,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":124,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":46},"end":{"line":0,"character":46}},"context":{"diagnostics":[]}}}Content-Length: 5067

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":48},"text":"// Dieser Sketch ist für das Board ESP32-2432S\n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCur
>>>
Content-Length: 3084

{"jsonrpc":"2.0","id":123,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":124,"result":[]}
<<<
sor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":49},"contentChanges":[{"range":{"start":{"line":0,"character":46},"end":{"line":0,"character":46}},"rangeLength":0,"text":"0"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":123}}Content-Length: 224

{"jsonrpc":"2.0","id":125,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":124}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":125}}Content-Length: 224

{"jsonrpc":"2.0","id":126,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":127,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":47},"end":{"line":0,"character":47}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":50},"contentChanges":[{"range":{"start":{"line":0,"character":47},"end":{"line":0,"character":47}},"rangeLength":0,"text":"3"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":126}}Content-Length: 224

{"jsonrpc":"2.0","id":128,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":127}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":
>>>
Content-Length: 3084

{"jsonrpc":"2.0","id":125,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":126,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":127,"result":[]}Content-Length: 3084

{"jsonrpc":"2.0","id":128,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}
<<<
{"id":128}}Content-Length: 224

{"jsonrpc":"2.0","id":129,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":130,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":48},"end":{"line":0,"character":48}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":51},"contentChanges":[{"range":{"start":{"line":0,"character":48},"end":{"line":0,"character":48}},"rangeLength":0,"text":"2"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":129}}Content-Length: 224

{"jsonrpc":"2.0","id":131,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":130}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":131}}Content-Length: 224

{"jsonrpc":"2.0","id":132,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":133,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":49},"end":{"line":0,"character":49}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":52},"contentChanges":[{"range":{"start":{"line":0,"character":49},"end":{"line":0,"character":49}},"rangeLength":0,"text":"C"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":132}}Content-Length: 224

{"jsonrpc":"2.0","id":134,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":133}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":134}}Content-Length: 224

{"jsonrpc":"2.0","id":135,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":136,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":50},"end":{"line":0,"character":50}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":53},"contentChanges":[{"range":{"start":{"line":0,"character":50},"end":{"line":0,"character":50}},"rangeLength":0,"text":"-"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":135}}Content-Length: 224

{"jsonrpc":"2.0","id":137,"method":"textDocument/documentSymbol","param
>>>
Content-Length: 3084

{"jsonrpc":"2.0","id":129,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":130,"result":[]}Content-Length: 3084

{"jsonrpc":"2.0","id":131,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":132,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":133,"result":[]}Content-Length: 3084

{"jsonrpc":"2.0","id":134,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":135,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":136,"result":[]}
<<<
s":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":136}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":137}}Content-Length: 224

{"jsonrpc":"2.0","id":138,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":139,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":51},"end":{"line":0,"character":51}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":54},"contentChanges":[{"range":{"start":{"line":0,"character":51},"end":{"line":0,"character":51}},"rangeLength":0,"text":"I"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":138}}Content-Length: 224

{"jsonrpc":"2.0","id":140,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":139}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":140}}Content-Length: 224

{"jsonrpc":"2.0","id":141,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":142,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":52},"end":{"line":0,"character":52}},"context":{"diagnostics":[]}}}Content-Length: 5073

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":54},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I\n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n 
>>>
Content-Length: 3084

{"jsonrpc":"2.0","id":137,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":138,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":139,"result":[]}Content-Length: 3084

{"jsonrpc":"2.0","id":140,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 3084

{"jsonrpc":"2.0","id":141,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":142,"result":[]}
<<<
 tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 252

{"jsonrpc":"2.0","id":143,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":5,"character":72}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":143}}Content-Length: 252

{"jsonrpc":"2.0","id":144,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":5,"character":73}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","pa
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":143,"result":null}Content-Length: 40

{"jsonrpc":"2.0","id":144,"result":null}
<<<
rams":{"id":141}}Content-Length: 224

{"jsonrpc":"2.0","id":145,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 63

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":13}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":144}}Content-Length: 325

{"jsonrpc":"2.0","id":146,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":5,"character":73},"end":{"line":5,"character":73}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":142}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":55},"contentChanges":[{"range":{"start":{"line":5,"character":73},"end":{"line":5,"character":73}},"rangeLength":0,"text":"\n"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":145}}Content-Length: 224

{"jsonrpc":"2.0","id":147,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":146}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":147}}Content-Length: 224

{"jsonrpc":"2.0","id":148,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 5075

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":55},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I\n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID
>>>
Content-Length: 3084

{"jsonrpc":"2.0","id":145,"result":[{"name":"tft","detail":"TFT_eSPI","kind":13,"range":{"start":{"line":17,"character":0},"end":{"line":17,"character":25}},"selectionRange":{"start":{"line":17,"character":9},"end":{"line":17,"character":12}}},{"name":"SerialBT","detail":"BluetoothSerial","kind":13,"range":{"start":{"line":19,"character":0},"end":{"line":19,"character":24}},"selectionRange":{"start":{"line":19,"character":16},"end":{"line":19,"character":24}}},{"name":"pBLEScan","detail":"BLEScan *","kind":13,"range":{"start":{"line":20,"character":0},"end":{"line":20,"character":17}},"selectionRange":{"start":{"line":20,"character":9},"end":{"line":20,"character":17}}},{"name":"WifiEntry","detail":"struct","kind":23,"range":{"start":{"line":22,"character":0},"end":{"line":27,"character":1}},"selectionRange":{"start":{"line":22,"character":7},"end":{"line":22,"character":16}},"children":[{"name":"ssid","detail":"String","kind":8,"range":{"start":{"line":23,"character":2},"end":{"line":23,"character":13}},"selectionRange":{"start":{"line":23,"character":9},"end":{"line":23,"character":13}}},{"name":"rssi","detail":"int32_t","kind":8,"range":{"start":{"line":24,"character":2},"end":{"line":24,"character":14}},"selectionRange":{"start":{"line":24,"character":10},"end":{"line":24,"character":14}}},{"name":"channel","detail":"int32_t","kind":8,"range":{"start":{"line":25,"character":2},"end":{"line":25,"character":17}},"selectionRange":{"start":{"line":25,"character":10},"end":{"line":25,"character":17}}},{"name":"encryption","detail":"wifi_auth_mode_t","kind":8,"range":{"start":{"line":26,"character":2},"end":{"line":26,"character":29}},"selectionRange":{"start":{"line":26,"character":19},"end":{"line":26,"character":29}}}]},{"name":"drawRSSIValue","detail":"void (int, int, int)","kind":12,"range":{"start":{"line":30,"character":0},"end":{"line":34,"character":1}},"selectionRange":{"start":{"line":30,"character":5},"end":{"line":30,"character":18}}},{"name":"drawHeader","detail":"void ()","kind":12,"range":{"start":{"line":37,"character":0},"end":{"line":58,"character":1}},"selectionRange":{"start":{"line":37,"character":5},"end":{"line":37,"character":15}}},{"name":"drawWifiResults","detail":"void (WifiEntry *, int)","kind":12,"range":{"start":{"line":61,"character":0},"end":{"line":82,"character":1}},"selectionRange":{"start":{"line":61,"character":5},"end":{"line":61,"character":20}}},{"name":"drawBleResults","detail":"void (BLEScanResults *)","kind":12,"range":{"start":{"line":85,"character":0},"end":{"line":135,"character":1}},"selectionRange":{"start":{"line":85,"character":5},"end":{"line":85,"character":19}}},{"name":"setup","detail":"void ()","kind":12,"range":{"start":{"line":137,"character":0},"end":{"line":155,"character":1}},"selectionRange":{"start":{"line":137,"character":5},"end":{"line":137,"character":10}}},{"name":"loop","detail":"void ()","kind":12,"range":{"start":{"line":157,"character":0},"end":{"line":185,"character":1}},"selectionRange":{"start":{"line":157,"character":5},"end":{"line":157,"character":9}}}]}Content-Length: 38

{"jsonrpc":"2.0","id":146,"result":[]}Content-Length: 124

{"jsonrpc":"2.0","id":147,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":148,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":56},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":0}},"rangeLength":0,"text":"/"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":148}}Content-Length: 224

{"jsonrpc":"2.0","id":149,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":149}}Content-Length: 224

{"jsonrpc":"2.0","id":150,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 307

{"jsonrpc":"2.0","id":151,"method":"textDocu
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":149,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":150,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
ment/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":6,"character":1},"context":{"triggerKind":2,"triggerCharacter":"/"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":57},"contentChanges":[{"range":{"start":{"line":6,"character":1},"end":{"line":6,"character":1}},"rangeLength":0,"text":"/"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":150}}Content-Length: 224

{"jsonrpc":"2.0","id":152,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":152}}Content-Length: 224

{"jsonrpc":"2.0","id":153,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":151}}Content-Length: 307

{"jsonrpc":"2.0","id":154,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":6,"character":2},"context":{"triggerKind":2,"triggerCharacter":"/"}}}Content-Length: 323

{"jsonrpc":"2.0","id":155,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":2}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":58},"contentChanges":[{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":2}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":153}}Content-Length: 224

{"jsonrpc":"2.0","id":156,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":155}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":156}}Content-Length: 224

{"jsonrpc":"2.0","id":157,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 5078

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":58},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I\n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n// \n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eS
>>>
Content-Length: 129

{"jsonrpc":"2.0","id":151,"result":null,"error":{"code":-32603,"message":"-32602 trying to get preamble for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":152,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":153,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 129

{"jsonrpc":"2.0","id":154,"result":null,"error":{"code":-32603,"message":"-32602 trying to get preamble for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":155,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":156,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":157,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
PI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":59},"contentChanges":[{"range":{"start":{"line":6,"character":3},"end":{"line":6,"character":3}},"rangeLength":0,"text":"N"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":157}}Content-Length: 224

{"jsonrpc":"2.0","id":158,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":158}}Content-Length: 224

{"jsonrpc":"2.0","id":159,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":160,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":4}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":60},"contentChanges":[{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":4}},"rangeLength":0,"text":"o"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":159}}Content-Length: 224

{"jsonrpc":"2.0","id":161,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":160}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":161}}Content-Length: 224

{"jsonrpc":"2.0","id":162,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":163,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":5},"end":{"line":6,"character":5}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":61},"contentChanges":[{"range":{"start":{"line":6,"character":5},"end":{"line":6,"character":5}},"rangeLength":0,"text":"c"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":162}}Content-Length: 224

{"jsonrpc":"2.0","id":164,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":163}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":164}}Content-Length: 224

{"jsonrpc":"2.0","id":165,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baer
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":158,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":159,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":160,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":161,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":162,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":163,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":164,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":165,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
b/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":62},"contentChanges":[{"range":{"start":{"line":6,"character":6},"end":{"line":6,"character":6}},"rangeLength":0,"text":"h"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":165}}Content-Length: 224

{"jsonrpc":"2.0","id":166,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":166}}Content-Length: 224

{"jsonrpc":"2.0","id":167,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":63},"contentChanges":[{"range":{"start":{"line":6,"character":7},"end":{"line":6,"character":7}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":167}}Content-Length: 224

{"jsonrpc":"2.0","id":168,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":168}}Content-Length: 224

{"jsonrpc":"2.0","id":169,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":64},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":8}},"rangeLength":0,"text":"b"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":169}}Content-Length: 224

{"jsonrpc":"2.0","id":170,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":170}}Content-Length: 224

{"jsonrpc":"2.0","id":171,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":65},"contentChanges":[{"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":9}},"rangeLength":0,"text":"e"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":171}}Content-Length: 224

{"jsonrpc":"2.0","id":172,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":172}}Content-Length: 224

{"jsonrpc":"2.0","id":173,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":174,"method":"textDocument/codeAction","param
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":166,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":167,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":168,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":169,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":170,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":171,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":172,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":173,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
s":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":10}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":66},"contentChanges":[{"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":10}},"rangeLength":0,"text":"s"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":173}}Content-Length: 224

{"jsonrpc":"2.0","id":175,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":174}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":175}}Content-Length: 224

{"jsonrpc":"2.0","id":176,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":67},"contentChanges":[{"range":{"start":{"line":6,"character":11},"end":{"line":6,"character":11}},"rangeLength":0,"text":"s"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":176}}Content-Length: 224

{"jsonrpc":"2.0","id":177,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":177}}Content-Length: 224

{"jsonrpc":"2.0","id":178,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":179,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":12}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":68},"contentChanges":[{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":12}},"rangeLength":0,"text":"e"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":178}}Content-Length: 224

{"jsonrpc":"2.0","id":180,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":179}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":180}}Content-Length: 224

{"jsonrpc":"2.0","id":181,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":174,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":175,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":176,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":177,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":178,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":179,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":180,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":181,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
WLAN_BT_Scanner.ino","version":69},"contentChanges":[{"range":{"start":{"line":6,"character":13},"end":{"line":6,"character":13}},"rangeLength":0,"text":"r"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":181}}Content-Length: 224

{"jsonrpc":"2.0","id":182,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":182}}Content-Length: 224

{"jsonrpc":"2.0","id":183,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":70},"contentChanges":[{"range":{"start":{"line":6,"character":14},"end":{"line":6,"character":14}},"rangeLength":0,"text":"e"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":183}}Content-Length: 224

{"jsonrpc":"2.0","id":184,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":184}}Content-Length: 224

{"jsonrpc":"2.0","id":185,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":186,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":71},"contentChanges":[{"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":15}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":185}}Content-Length: 224

{"jsonrpc":"2.0","id":187,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":186}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":187}}Content-Length: 224

{"jsonrpc":"2.0","id":188,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":72},"contentChanges":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":16}},"rangeLength":0,"text":"E"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":188}}Content-Length: 224

{"jsonrpc":"2.0","id":189,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequ
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":182,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":183,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":184,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":185,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":186,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":187,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":188,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":189,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
est","params":{"id":189}}Content-Length: 224

{"jsonrpc":"2.0","id":190,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":73},"contentChanges":[{"range":{"start":{"line":6,"character":17},"end":{"line":6,"character":17}},"rangeLength":0,"text":"r"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":190}}Content-Length: 224

{"jsonrpc":"2.0","id":191,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":191}}Content-Length: 224

{"jsonrpc":"2.0","id":192,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":74},"contentChanges":[{"range":{"start":{"line":6,"character":18},"end":{"line":6,"character":18}},"rangeLength":0,"text":"g"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":192}}Content-Length: 224

{"jsonrpc":"2.0","id":193,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":193}}Content-Length: 224

{"jsonrpc":"2.0","id":194,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":195,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":19},"end":{"line":6,"character":19}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":75},"contentChanges":[{"range":{"start":{"line":6,"character":19},"end":{"line":6,"character":19}},"rangeLength":0,"text":"e"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":194}}Content-Length: 224

{"jsonrpc":"2.0","id":196,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":195}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":196}}Content-Length: 224

{"jsonrpc":"2.0","id":197,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":198,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":2
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":190,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":191,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":192,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":193,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":194,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":195,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":196,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":197,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
0},"end":{"line":6,"character":20}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":76},"contentChanges":[{"range":{"start":{"line":6,"character":20},"end":{"line":6,"character":20}},"rangeLength":0,"text":"b"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":197}}Content-Length: 224

{"jsonrpc":"2.0","id":199,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":198}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":199}}Content-Length: 224

{"jsonrpc":"2.0","id":200,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":77},"contentChanges":[{"range":{"start":{"line":6,"character":21},"end":{"line":6,"character":21}},"rangeLength":0,"text":"n"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":200}}Content-Length: 224

{"jsonrpc":"2.0","id":201,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":201}}Content-Length: 224

{"jsonrpc":"2.0","id":202,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":203,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":22},"end":{"line":6,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":78},"contentChanges":[{"range":{"start":{"line":6,"character":22},"end":{"line":6,"character":22}},"rangeLength":0,"text":"i"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":202}}Content-Length: 224

{"jsonrpc":"2.0","id":204,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":203}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":204}}Content-Length: 224

{"jsonrpc":"2.0","id":205,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":206,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":23},"end":{"line":6,"character":23}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"text
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":198,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":199,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":200,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":201,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":202,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":203,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":204,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":205,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":206,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Document/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":79},"contentChanges":[{"range":{"start":{"line":6,"character":23},"end":{"line":6,"character":23}},"rangeLength":0,"text":"s"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":205}}Content-Length: 224

{"jsonrpc":"2.0","id":207,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":206}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":207}}Content-Length: 224

{"jsonrpc":"2.0","id":208,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":80},"contentChanges":[{"range":{"start":{"line":6,"character":24},"end":{"line":6,"character":24}},"rangeLength":0,"text":"s"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":208}}Content-Length: 224

{"jsonrpc":"2.0","id":209,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":209}}Content-Length: 224

{"jsonrpc":"2.0","id":210,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":81},"contentChanges":[{"range":{"start":{"line":6,"character":25},"end":{"line":6,"character":25}},"rangeLength":0,"text":"e"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":210}}Content-Length: 224

{"jsonrpc":"2.0","id":211,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":211}}Content-Length: 224

{"jsonrpc":"2.0","id":212,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":82},"contentChanges":[{"range":{"start":{"line":6,"character":26},"end":{"line":6,"character":26}},"rangeLength":0,"text":"n"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":212}}Content-Length: 224

{"jsonrpc":"2.0","id":213,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":213}}Content-Length: 224

{"jsonrpc":"2.0","id":214,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Ske
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":207,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":208,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":209,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":210,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":211,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":212,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":213,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
tche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":215,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":27},"end":{"line":6,"character":27}},"context":{"diagnostics":[]}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":83},"contentChanges":[{"range":{"start":{"line":6,"character":26},"end":{"line":6,"character":27}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":214}}Content-Length: 224

{"jsonrpc":"2.0","id":216,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":215}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":216}}Content-Length: 224

{"jsonrpc":"2.0","id":217,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":218,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":26},"end":{"line":6,"character":26}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":84},"contentChanges":[{"range":{"start":{"line":6,"character":26},"end":{"line":6,"character":26}},"rangeLength":0,"text":"e"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":217}}Content-Length: 224

{"jsonrpc":"2.0","id":219,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":218}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":219}}Content-Length: 224

{"jsonrpc":"2.0","id":220,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":221,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":27},"end":{"line":6,"character":27}},"context":{"diagnostics":[]}}}Content-Length: 5102

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":84},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I\n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n// Noch bessere Ergebnissee\n\n#pragma GCC 
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":214,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":215,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":216,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":217,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":218,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":219,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":220,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":221,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":85},"contentChanges":[{"range":{"start":{"line":6,"character":26},"end":{"line":6,"character":27}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":220}}Content-Length: 224

{"jsonrpc":"2.0","id":222,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":221}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":222}}Content-Length: 224

{"jsonrpc":"2.0","id":223,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":224,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":26},"end":{"line":6,"character":26}},"context":{"diagnostics":[]}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":86},"contentChanges":[{"range":{"start":{"line":6,"character":25},"end":{"line":6,"character":26}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":223}}Content-Length: 224

{"jsonrpc":"2.0","id":225,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":224}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":225}}Content-Length: 224

{"jsonrpc":"2.0","id":226,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":87},"contentChanges":[{"range":{"start":{"line":6,"character":24},"end":{"line":6,"character":25}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":226}}Content-Length: 224

{"jsonrpc":"2.0","id":227,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":227}}Content-Length: 224

{"jsonrpc":"2.0","id":228,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":88},"contentChanges":[{"range":{"start":{"line":6,"character":23},"end":{"line":6,"character":24}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":228}}Content-Length: 
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":222,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":223,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":224,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":225,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":226,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":227,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":228,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
224

{"jsonrpc":"2.0","id":229,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":229}}Content-Length: 224

{"jsonrpc":"2.0","id":230,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":89},"contentChanges":[{"range":{"start":{"line":6,"character":22},"end":{"line":6,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":230}}Content-Length: 224

{"jsonrpc":"2.0","id":231,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":231}}Content-Length: 224

{"jsonrpc":"2.0","id":232,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":90},"contentChanges":[{"range":{"start":{"line":6,"character":21},"end":{"line":6,"character":22}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":232}}Content-Length: 224

{"jsonrpc":"2.0","id":233,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":233}}Content-Length: 224

{"jsonrpc":"2.0","id":234,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":91},"contentChanges":[{"range":{"start":{"line":6,"character":20},"end":{"line":6,"character":21}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":234}}Content-Length: 224

{"jsonrpc":"2.0","id":235,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":235}}Content-Length: 224

{"jsonrpc":"2.0","id":236,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":92},"contentChanges":[{"range":{"start":{"line":6,"character":19},"end":{"line":6,"character":20}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","me
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":229,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":230,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":231,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":232,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":233,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":234,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":235,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":236,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
thod":"$/cancelRequest","params":{"id":236}}Content-Length: 224

{"jsonrpc":"2.0","id":237,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":237}}Content-Length: 224

{"jsonrpc":"2.0","id":238,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":93},"contentChanges":[{"range":{"start":{"line":6,"character":18},"end":{"line":6,"character":19}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":238}}Content-Length: 224

{"jsonrpc":"2.0","id":239,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":239}}Content-Length: 224

{"jsonrpc":"2.0","id":240,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":94},"contentChanges":[{"range":{"start":{"line":6,"character":17},"end":{"line":6,"character":18}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":240}}Content-Length: 224

{"jsonrpc":"2.0","id":241,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":241}}Content-Length: 224

{"jsonrpc":"2.0","id":242,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":95},"contentChanges":[{"range":{"start":{"line":6,"character":16},"end":{"line":6,"character":17}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":242}}Content-Length: 224

{"jsonrpc":"2.0","id":243,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":243}}Content-Length: 224

{"jsonrpc":"2.0","id":244,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":96},"contentChanges":[{"range":{"start":{"line":6,"character":15},"end":{"line":6,"character":16}},"rangeLength":1,"text":""}]
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":237,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":238,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":239,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":240,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":241,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":242,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":243,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":244,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":244}}Content-Length: 224

{"jsonrpc":"2.0","id":245,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":245}}Content-Length: 224

{"jsonrpc":"2.0","id":246,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":97},"contentChanges":[{"range":{"start":{"line":6,"character":14},"end":{"line":6,"character":15}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":246}}Content-Length: 224

{"jsonrpc":"2.0","id":247,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":247}}Content-Length: 224

{"jsonrpc":"2.0","id":248,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":98},"contentChanges":[{"range":{"start":{"line":6,"character":13},"end":{"line":6,"character":14}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":248}}Content-Length: 224

{"jsonrpc":"2.0","id":249,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":249}}Content-Length: 224

{"jsonrpc":"2.0","id":250,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":99},"contentChanges":[{"range":{"start":{"line":6,"character":12},"end":{"line":6,"character":13}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":250}}Content-Length: 224

{"jsonrpc":"2.0","id":251,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":251}}Content-Length: 224

{"jsonrpc":"2.0","id":252,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":100},"contentChanges":[{"range":{"start":{"line":6,"character":11},"end":{"line":6
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":245,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":246,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":247,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":248,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":249,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":250,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":251,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":252,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
,"character":12}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":252}}Content-Length: 224

{"jsonrpc":"2.0","id":253,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":253}}Content-Length: 224

{"jsonrpc":"2.0","id":254,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":101},"contentChanges":[{"range":{"start":{"line":6,"character":10},"end":{"line":6,"character":11}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":254}}Content-Length: 224

{"jsonrpc":"2.0","id":255,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":255}}Content-Length: 224

{"jsonrpc":"2.0","id":256,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":102},"contentChanges":[{"range":{"start":{"line":6,"character":9},"end":{"line":6,"character":10}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":256}}Content-Length: 224

{"jsonrpc":"2.0","id":257,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":257}}Content-Length: 224

{"jsonrpc":"2.0","id":258,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":103},"contentChanges":[{"range":{"start":{"line":6,"character":8},"end":{"line":6,"character":9}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":258}}Content-Length: 224

{"jsonrpc":"2.0","id":259,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":259}}Content-Length: 224

{"jsonrpc":"2.0","id":260,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":104},"contentChanges":[{"range":{"sta
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":253,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":254,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":255,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":256,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":257,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":258,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":259,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":260,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
rt":{"line":6,"character":7},"end":{"line":6,"character":8}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":260}}Content-Length: 224

{"jsonrpc":"2.0","id":261,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":261}}Content-Length: 224

{"jsonrpc":"2.0","id":262,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":105},"contentChanges":[{"range":{"start":{"line":6,"character":6},"end":{"line":6,"character":7}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":262}}Content-Length: 224

{"jsonrpc":"2.0","id":263,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":263}}Content-Length: 224

{"jsonrpc":"2.0","id":264,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":106},"contentChanges":[{"range":{"start":{"line":6,"character":5},"end":{"line":6,"character":6}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":264}}Content-Length: 224

{"jsonrpc":"2.0","id":265,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":265}}Content-Length: 224

{"jsonrpc":"2.0","id":266,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":107},"contentChanges":[{"range":{"start":{"line":6,"character":4},"end":{"line":6,"character":5}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":266}}Content-Length: 224

{"jsonrpc":"2.0","id":267,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":267}}Content-Length: 224

{"jsonrpc":"2.0","id":268,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","versio
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":261,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":262,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":263,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":264,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":265,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":266,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":267,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":268,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
n":108},"contentChanges":[{"range":{"start":{"line":6,"character":3},"end":{"line":6,"character":4}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":268}}Content-Length: 224

{"jsonrpc":"2.0","id":269,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":269}}Content-Length: 224

{"jsonrpc":"2.0","id":270,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":109},"contentChanges":[{"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":3}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":270}}Content-Length: 224

{"jsonrpc":"2.0","id":271,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":271}}Content-Length: 224

{"jsonrpc":"2.0","id":272,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":273,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":2},"end":{"line":6,"character":2}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":110},"contentChanges":[{"range":{"start":{"line":6,"character":1},"end":{"line":6,"character":2}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":272}}Content-Length: 224

{"jsonrpc":"2.0","id":274,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":273}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":154}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":274}}Content-Length: 224

{"jsonrpc":"2.0","id":275,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 323

{"jsonrpc":"2.0","id":276,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":6,"character":1},"end":{"line":6,"character":1}},"context":{"diagnostics":[]}}}Content-Length: 345

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":111},"contentChanges":[{"range":{"start":{"line":6,"character":0},"end":{"line":6,"character":1}},"rangeLength":1,"text":""}]}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":269,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":270,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":271,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":272,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":273,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":274,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":275,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":276,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":275}}Content-Length: 224

{"jsonrpc":"2.0","id":277,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":276}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":277}}Content-Length: 224

{"jsonrpc":"2.0","id":278,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 346

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":112},"contentChanges":[{"range":{"start":{"line":5,"character":73},"end":{"line":6,"character":0}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":278}}Content-Length: 224

{"jsonrpc":"2.0","id":279,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":279}}Content-Length: 224

{"jsonrpc":"2.0","id":280,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":281,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":5,"character":73},"end":{"line":5,"character":73}},"context":{"diagnostics":[]}}}Content-Length: 5074

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":112},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I\n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i 
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":277,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":278,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":279,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":280,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":281,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
< maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 264

{"jsonrpc":"2.0","id":282,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":0,"character":52}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":280}}Content-Length: 224

{"jsonrpc":"2.0","id":283,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":284,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":52},"end":{"line":0,"character":52}},"context":{"diagnosti
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":282,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":283,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
cs":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":281}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":113},"contentChanges":[{"range":{"start":{"line":0,"character":52},"end":{"line":0,"character":52}},"rangeLength":0,"text":"!"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":283}}Content-Length: 224

{"jsonrpc":"2.0","id":285,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":284}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":282}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":285}}Content-Length: 224

{"jsonrpc":"2.0","id":286,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":287,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":53},"end":{"line":0,"character":53}},"context":{"diagnostics":[]}}}Content-Length: 5075

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":113},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I!\n// Nach dem Scannen werden SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      dr
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":284,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":285,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":286,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":287,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
awRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 252

{"jsonrpc":"2.0","id":288,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":4,"character":31}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":288}}Content-Length: 252

{"jsonrpc":"2.0","id":289,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":5,"character":42}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":289}}Content-Length: 252

{"jsonrpc":"2.0","id":290,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":4,"character":32}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":290}}Content-Length: 252

{"jsonrpc":"2.0","id":291,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":3,"character":32}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":29
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":288,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":289,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":290,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":291,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
1}}Content-Length: 252

{"jsonrpc":"2.0","id":292,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":4,"character":32}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":292}}Content-Length: 252

{"jsonrpc":"2.0","id":293,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":4,"character":33}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":293}}Content-Length: 252

{"jsonrpc":"2.0","id":294,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":3,"character":34}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":294}}Content-Length: 252

{"jsonrpc":"2.0","id":295,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":3,"character":31}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":295}}Content-Length: 252

{"jsonrpc":"2.0","id":296,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":29}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":296}}Content-Length: 252

{"jsonrpc":"2.0","id":297,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":1,"character":26}}}Content-Length: 264

{"jsonrpc":"2.0","id":298,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":1,"character":26}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":286}}Content-Length: 224

{"jsonrpc":"2.0","id":299,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":297}}Content-Length: 325

{"jsonrpc":"2.0","id":300,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":1,"character":26},"end":{"line":1,"character":26}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":287}}Content-Length: 252

{"jsonrpc":"2.0","id":301,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":5,"character":71}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":301}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":114},"contentChanges":[{"range":{"start":{"line":1,"character":26},"end":{"line":1,"character":26}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":299}}Content-Length: 224

{"jsonrpc":"2.0","id":302,"metho
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":292,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":293,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":294,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":295,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":296,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":297,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":298,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":299,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":300,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":301,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
d":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":300}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":298}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":302}}Content-Length: 224

{"jsonrpc":"2.0","id":303,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":115},"contentChanges":[{"range":{"start":{"line":1,"character":27},"end":{"line":1,"character":27}},"rangeLength":0,"text":"l"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":303}}Content-Length: 224

{"jsonrpc":"2.0","id":304,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":304}}Content-Length: 224

{"jsonrpc":"2.0","id":305,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":116},"contentChanges":[{"range":{"start":{"line":1,"character":28},"end":{"line":1,"character":28}},"rangeLength":0,"text":"i"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":305}}Content-Length: 224

{"jsonrpc":"2.0","id":306,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":306}}Content-Length: 224

{"jsonrpc":"2.0","id":307,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":308,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":1,"character":29},"end":{"line":1,"character":29}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":117},"contentChanges":[{"range":{"start":{"line":1,"character":29},"end":{"line":1,"character":29}},"rangeLength":0,"text":"n"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":307}}Content-Length: 224

{"jsonrpc":"2.0","id":309,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":308}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":309}}Content-Length: 224

{"jsonrpc":"2.0","id":310,"method":"textDocument/documentSymbol","params":{"te
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":302,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":303,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":304,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":305,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":306,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":307,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":308,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":309,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
xtDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":311,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":1,"character":30},"end":{"line":1,"character":30}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":118},"contentChanges":[{"range":{"start":{"line":1,"character":30},"end":{"line":1,"character":30}},"rangeLength":0,"text":"k"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":310}}Content-Length: 224

{"jsonrpc":"2.0","id":312,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":311}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":312}}Content-Length: 224

{"jsonrpc":"2.0","id":313,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":314,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":1,"character":31},"end":{"line":1,"character":31}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":119},"contentChanges":[{"range":{"start":{"line":1,"character":31},"end":{"line":1,"character":31}},"rangeLength":0,"text":"s"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":313}}Content-Length: 224

{"jsonrpc":"2.0","id":315,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":314}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":315}}Content-Length: 224

{"jsonrpc":"2.0","id":316,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":317,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":1,"character":32},"end":{"line":1,"character":32}},"context":{"diagnostics":[]}}}Content-Length: 5081

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":119},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I!\n// Nach dem Scannen werden links SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Hälfte des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with s
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":310,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":311,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":312,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":313,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":314,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":315,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":316,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":317,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
piffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 252

{"jsonrpc":"2.0","id":318,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":7,"character":16}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":318}}Content-Length: 252

{"jsonrpc":"2.0","id":319,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":7,"character":17}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":319}}Content-Length: 252

{"jsonrpc":"2.0","id":320,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":5,"character":23}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":320}}Content-Length: 252

{"jsonrpc":"2.0","id":321,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":3,"character":27}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":321}}Content-Length: 252

{"jsonrpc":"2.0","id":322,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":4,"character":26}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":322}}Content-Length: 252

{"jsonrpc":"2.0","id":323,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":24}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":323}}Content-Length: 252

{"jsonrpc":"2.0","id":324,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":25}}}Content-Length: 264

{"jsonrpc":"2.0","id":325,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":25}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":316}}Content-Length: 224

{"jsonrpc":"2.0","id":326,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":324}}Content-Length: 325

{"jsonrpc":"2.0","id":327,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":2,"character":25},"end":{"line":2,"character":25}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":317}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":120},"contentChanges":[{"range":{"start":{"line":2,"character":24},"end":{"line":2,"character":25}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":326}}Content-Length: 224

{"jsonrpc":"2.0","id":328,"method":"
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":318,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":319,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":320,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":321,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":322,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":323,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":324,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":325,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":326,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":327,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":327}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":325}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":328}}Content-Length: 224

{"jsonrpc":"2.0","id":329,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":121},"contentChanges":[{"range":{"start":{"line":2,"character":23},"end":{"line":2,"character":24}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":329}}Content-Length: 224

{"jsonrpc":"2.0","id":330,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":330}}Content-Length: 224

{"jsonrpc":"2.0","id":331,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":122},"contentChanges":[{"range":{"start":{"line":2,"character":22},"end":{"line":2,"character":23}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":331}}Content-Length: 224

{"jsonrpc":"2.0","id":332,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":332}}Content-Length: 224

{"jsonrpc":"2.0","id":333,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":123},"contentChanges":[{"range":{"start":{"line":2,"character":21},"end":{"line":2,"character":22}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":333}}Content-Length: 224

{"jsonrpc":"2.0","id":334,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":334}}Content-Length: 224

{"jsonrpc":"2.0","id":335,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":124},"contentChanges":[{"range":{"start":{"line":2,"ch
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":328,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":329,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":330,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":331,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":332,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":333,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":334,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":335,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
aracter":20},"end":{"line":2,"character":21}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":335}}Content-Length: 224

{"jsonrpc":"2.0","id":336,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":336}}Content-Length: 224

{"jsonrpc":"2.0","id":337,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":338,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":2,"character":20},"end":{"line":2,"character":20}},"context":{"diagnostics":[]}}}Content-Length: 347

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":125},"contentChanges":[{"range":{"start":{"line":2,"character":19},"end":{"line":2,"character":20}},"rangeLength":1,"text":""}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":337}}Content-Length: 224

{"jsonrpc":"2.0","id":339,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":338}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":339}}Content-Length: 224

{"jsonrpc":"2.0","id":340,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 5074

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":125},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I!\n// Nach dem Scannen werden links SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten  des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":336,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":337,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":338,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":339,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":340,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":126},"contentChanges":[{"range":{"start":{"line":2,"character":19},"end":{"line":2,"character":19}},"rangeLength":0,"text":"S"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":340}}Content-Length: 224

{"jsonrpc":"2.0","id":341,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":341}}Content-Length: 224

{"jsonrpc":"2.0","id":342,"method":"textDocument/documentSymbol","para
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":341,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
ms":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":127},"contentChanges":[{"range":{"start":{"line":2,"character":20},"end":{"line":2,"character":20}},"rangeLength":0,"text":"e"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":342}}Content-Length: 224

{"jsonrpc":"2.0","id":343,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":343}}Content-Length: 224

{"jsonrpc":"2.0","id":344,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":345,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":2,"character":21},"end":{"line":2,"character":21}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":128},"contentChanges":[{"range":{"start":{"line":2,"character":21},"end":{"line":2,"character":21}},"rangeLength":0,"text":"i"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":344}}Content-Length: 224

{"jsonrpc":"2.0","id":346,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":345}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":346}}Content-Length: 224

{"jsonrpc":"2.0","id":347,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":348,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":2,"character":22},"end":{"line":2,"character":22}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":129},"contentChanges":[{"range":{"start":{"line":2,"character":22},"end":{"line":2,"character":22}},"rangeLength":0,"text":"t"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":347}}Content-Length: 224

{"jsonrpc":"2.0","id":349,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":348}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":349}}Content-Length: 224

{"jsonrpc":"2.0","id":350,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP3
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":342,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":343,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":344,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":345,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":346,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":347,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":348,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":349,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
2-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":130},"contentChanges":[{"range":{"start":{"line":2,"character":23},"end":{"line":2,"character":23}},"rangeLength":0,"text":"e"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":350}}Content-Length: 224

{"jsonrpc":"2.0","id":351,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":351}}Content-Length: 224

{"jsonrpc":"2.0","id":352,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 325

{"jsonrpc":"2.0","id":353,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":2,"character":24},"end":{"line":2,"character":24}},"context":{"diagnostics":[]}}}Content-Length: 5079

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":130},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I!\n// Nach dem Scannen werden links SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Seite des Displays werden Bluetooth und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* d
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":350,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":351,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":352,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":353,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
evices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 252

{"jsonrpc":"2.0","id":354,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":5,"character":62}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":354}}Content-Length: 252

{"jsonrpc":"2.0","id":355,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":55}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":355}}Content-Length: 252

{"jsonrpc":"2.0","id":356,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":54}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":356}}Content-Length: 252

{"jsonrpc":"2.0","id":357,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":51}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":357}}Content-Length: 252

{"jsonrpc":"2.0","id":358,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":354,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":355,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":356,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":357,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Scanner.ino"},"position":{"line":2,"character":54}}}Content-Length: 264

{"jsonrpc":"2.0","id":359,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":54}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":352}}Content-Length: 224

{"jsonrpc":"2.0","id":360,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":358}}Content-Length: 325

{"jsonrpc":"2.0","id":361,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":2,"character":54},"end":{"line":2,"character":54}},"context":{"diagnostics":[]}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":353}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":131},"contentChanges":[{"range":{"start":{"line":2,"character":54},"end":{"line":2,"character":54}},"rangeLength":0,"text":" "}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":360}}Content-Length: 224

{"jsonrpc":"2.0","id":362,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":361}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":359}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":362}}Content-Length: 224

{"jsonrpc":"2.0","id":363,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 349

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":132},"contentChanges":[{"range":{"start":{"line":2,"character":55},"end":{"line":2,"character":55}},"rangeLength":0,"text":"()"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":363}}Content-Length: 224

{"jsonrpc":"2.0","id":364,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":364}}Content-Length: 224

{"jsonrpc":"2.0","id":365,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 331

{"jsonrpc":"2.0","id":366,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":56},"context":{"isRetrigger":false,"triggerCharacter":"(","triggerKind":2}}}Content-Length: 325

{"jsonrpc":"2.0","id":367,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":2,"character":56},"end":{"line":2,"c
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":358,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":359,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":360,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":361,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":362,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":363,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":364,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":365,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 129

{"jsonrpc":"2.0","id":366,"result":null,"error":{"code":-32603,"message":"-32602 trying to get preamble for non-added document"}}
<<<
haracter":56}},"context":{"diagnostics":[]}}}Content-Length: 5082

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":132},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I!\n// Nach dem Scannen werden links SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Seite des Displays werden Bluetooth () und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n 
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":367,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
 tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":133},"contentChanges":[{"range":{"start":{"line":2,"character":56},"end":{"line":2,"character":56}},"rangeLength":0,"text":"M"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":365}}Content-Length: 224

{"jsonrpc":"2.0","id":368,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":367}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":368}}Content-Length: 224

{"jsonrpc":"2.0","id":369,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":366}}Content-Length: 307

{"jsonrpc":"2.0","id":370,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":57},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 325

{"jsonrpc":"2.0","id":371,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":2,"character":57},"end":{"line":2,"character":57}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":134},"contentChanges":[{"range":{"start":{"line":2,"character":57},"end":{"line":2,"character":57}},"rangeLength":0,"text":"A"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":369}}Content-Length: 224

{"jsonrpc":"2.0","id":372,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":371}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":372}}Content-Length: 224

{"jsonrpc":"2.0","id":373,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":368,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":369,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 129

{"jsonrpc":"2.0","id":370,"result":null,"error":{"code":-32603,"message":"-32602 trying to get preamble for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":371,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":372,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":373,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
":"2.0","method":"$/cancelRequest","params":{"id":370}}Content-Length: 307

{"jsonrpc":"2.0","id":374,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":58},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 325

{"jsonrpc":"2.0","id":375,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":2,"character":58},"end":{"line":2,"character":58}},"context":{"diagnostics":[]}}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":135},"contentChanges":[{"range":{"start":{"line":2,"character":58},"end":{"line":2,"character":58}},"rangeLength":0,"text":"C"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":373}}Content-Length: 224

{"jsonrpc":"2.0","id":376,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":375}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":376}}Content-Length: 224

{"jsonrpc":"2.0","id":377,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":374}}Content-Length: 307

{"jsonrpc":"2.0","id":378,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":59},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 325

{"jsonrpc":"2.0","id":379,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":2,"character":59},"end":{"line":2,"character":59}},"context":{"diagnostics":[]}}}Content-Length: 5085

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":135},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I!\n// Nach dem Scannen werden links SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Seite des Displays werden Bluetooth (MAC) und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor
>>>
Content-Length: 129

{"jsonrpc":"2.0","id":374,"result":null,"error":{"code":-32603,"message":"-32602 trying to get preamble for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":375,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":376,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":377,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 129

{"jsonrpc":"2.0","id":378,"result":null,"error":{"code":-32603,"message":"-32602 trying to get preamble for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":379,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 348

{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":136},"contentChanges":[{"range":{"start":{"line":2,"character":59},"end":{"line":2,"character":60}},"rangeLength":1,"text":")"}]}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":377}}Content-Length: 224

{"jsonrpc":"2.0","id":380,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":379}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":380}}Content-Length: 224

{"jsonrpc":"2.0","id":381,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":378}}Content-Length: 307

{"jsonrpc":"2.0","id":382,"method":"textDocument/signatureHelp","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":2,"character":60},"context":{"isRetrigger":true,"triggerKind":3}}}Content-Length: 325

{"jsonrpc":"2.0","id":383,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":2,"character":60},"end":{"line":2,"character":60}},"context":{"diagnostics":[]}}}Content-Length: 5085

{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","version":136},"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I!\n// Nach dem Scannen werden links SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Seite des Displays werden Bluetooth (MAC) und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdver
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":380,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":381,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 129

{"jsonrpc":"2.0","id":382,"result":null,"error":{"code":-32603,"message":"-32602 trying to get preamble for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":383,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
tisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":382}}Content-Length: 40

{"jsonrpc":"2.0","id":"1","result":null}
>>>
Content-Length: 143

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"begin","title":"indexing","percentage":0}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"15/57","percentage":26}}}Content-Length: 118

{"jsonrpc":"2.0","id":"2","method":"window/workDoneProgress/create","params":{"token":"arduinoLanguageServerRebuild"}}
<<<
Content-Length: 40

{"jsonrpc":"2.0","id":"2","result":null}
>>>
Content-Length: 140

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"begin","title":"Building sketch"}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"16/57","percentage":28}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"17/57","percentage":29}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/57","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"18/57","percentage":31}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"19/57","percentage":33}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"20/57","percentage":35}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/57","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"21/57","percentage":36}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/57","percentage":38}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"22/57","percentage":38}}}Content-Length: 129

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"arduinoLanguageServerRebuild","value":{"kind":"end","message":"done"}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/57","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"23/57","percentage":40}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/57","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"24/57","percentage":42}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/57","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"25/57","percentage":43}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/57","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"26/57","percentage":45}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/57","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/57","percentage":47}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"27/58","percentage":46}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/58","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/58","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"28/58","percentage":48}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/58","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"29/58","percentage":50}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/58","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"30/58","percentage":51}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"31/58","percentage":53}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"32/58","percentage":55}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"33/58","percentage":56}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"34/58","percentage":58}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"35/58","percentage":60}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"36/58","percentage":62}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/58","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"37/58","percentage":63}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"38/58","percentage":65}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"39/58","percentage":67}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/58","percentage":68}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"40/58","percentage":68}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"41/58","percentage":70}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"42/58","percentage":72}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/58","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"43/58","percentage":74}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"44/58","percentage":75}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"45/58","percentage":77}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/58","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"46/58","percentage":79}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/58","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"47/58","percentage":81}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/58","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"48/58","percentage":82}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/58","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"49/58","percentage":84}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/58","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"50/58","percentage":86}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/58","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"51/58","percentage":87}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/58","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"52/58","percentage":89}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/58","percentage":91}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"53/58","percentage":91}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/58","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"54/58","percentage":93}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/58","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"55/58","percentage":94}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/58","percentage":96}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"56/58","percentage":96}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/58","percentage":98}}}Content-Length: 144

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"report","message":"57/58","percentage":98}}}Content-Length: 107

{"jsonrpc":"2.0","method":"$/progress","params":{"token":"backgroundIndexProgress","value":{"kind":"end"}}}
<<<
Content-Length: 251

{"jsonrpc":"2.0","id":384,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":0,"character":1}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":384,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 251

{"jsonrpc":"2.0","id":385,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":0,"character":0}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":385,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":386,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":386,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":387,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":387,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":388,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":388,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":389,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":389,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":390,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":390,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":391,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":391,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":392,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":392,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":393,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":393,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":394,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":394,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":395,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":395,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":396,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":396,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":397,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":397,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":398,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":398,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":399,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":399,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":400,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":400,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":401,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":401,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":402,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":402,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":403,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":403,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":404,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":404,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":405,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":405,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":406,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":406,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":407,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":407,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":408,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":408,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":409,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":409,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":410,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":410,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":411,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":411,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":412,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":412,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":413,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":413,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":414,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":414,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":415,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":415,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":416,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":416,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":417,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":417,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":418,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":418,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":419,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":419,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":420,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":420,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":421,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":421,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":422,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":422,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":423,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":423,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":424,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":424,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":425,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":425,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":426,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":426,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":427,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":427,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":428,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":428,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":429,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":429,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":430,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":430,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":431,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":431,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":432,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":432,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":433,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":433,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":434,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":434,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":435,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":435,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":436,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":436,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":437,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":437,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":438,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":438,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":439,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":439,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":440,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":440,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":441,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":441,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":442,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":442,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":443,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":443,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":444,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":444,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":445,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":445,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":446,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":446,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":447,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":447,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":448,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":448,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":449,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":449,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":450,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":450}}Content-Length: 224

{"jsonrpc":"2.0","id":451,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}Content-Length: 64

{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":451}}Content-Length: 224

{"jsonrpc":"2.0","id":452,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":450,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":451,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}Content-Length: 124

{"jsonrpc":"2.0","id":452,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":453,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":453,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":454,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":454,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":455,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":455,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":456,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":456,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":457,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":457,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":458,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":458,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":459,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":459,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":460,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":460,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":461,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":461,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":462,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":462,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":463,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":463,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":464,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":464,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":465,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":465,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":466,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":466,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":467,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":467,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":468,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":468,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":469,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":469,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":470,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":470,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":471,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":471,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":472,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":472,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":473,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":473,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":474,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":474,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":475,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":475,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":476,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":476,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":477,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":477,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":478,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":478,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":479,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":479,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":480,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":480,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":481,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":481,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":482,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":482,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":483,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":483,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":484,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":484,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":485,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":485,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":486,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":486,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":487,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":487,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":488,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":488,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":489,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":489,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":490,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":490,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":491,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":491,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":492,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":492,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":493,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":493,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":494,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":494,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":495,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":495,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":496,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":496,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":497,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":497,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":498,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":498,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":499,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":499,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":500,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":500,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":501,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":501,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":502,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":502,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":503,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":503,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":504,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":504,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":505,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":505,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":506,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":506,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":507,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":507,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":508,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":508,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":509,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":509,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":510,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":510,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":511,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":511,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":512,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":512,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":513,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":513,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":514,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":514,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":515,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":515,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":516,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":516,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":517,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":517,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":518,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":518,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":519,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":519,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":520,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":520,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":521,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":521,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":522,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":522,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":523,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":523,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":524,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":524,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":525,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":525,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":526,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":526,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":527,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":527,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":528,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":528,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":529,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":529,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":530,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":530,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":531,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":531,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":532,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":532,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":533,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":533,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":534,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":534,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":535,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":535,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":536,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":536,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":537,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":537,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 325

{"jsonrpc":"2.0","id":538,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"range":{"start":{"line":0,"character":0},"end":{"line":185,"character":0}},"context":{"diagnostics":[]}}}
>>>
Content-Length: 283

{"jsonrpc":"2.0","id":538,"result":null,"error":{"code":-32603,"message":"invalid range file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino:0:0-185:0: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 254

{"jsonrpc":"2.0","id":539,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"},"position":{"line":168,"character":16}}}
>>>
Content-Length: 287

{"jsonrpc":"2.0","id":539,"result":null,"error":{"code":-32603,"message":"invalid range file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino:168:16-168:16: could not be mapped to Arduino-preprocessed sketck.ino.cpp"}}
<<<
Content-Length: 224

{"jsonrpc":"2.0","id":540,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino"}}}
>>>
Content-Length: 124

{"jsonrpc":"2.0","id":540,"result":null,"error":{"code":-32603,"message":"-32602 trying to get AST for non-added document"}}
<<<
Content-Length: 60

{"jsonrpc":"2.0","id":541,"method":"shutdown","params":null}
>>>
Content-Length: 40

{"jsonrpc":"2.0","id":541,"result":null}
<<<
Content-Length: 47

{"jsonrpc":"2.0","method":"exit","params":null}






Started logging.

<<<
Content-Length: 3171

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":19800,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"c:\\Users\\baerb\\Documents\\Arduino-Sketche\\ESP32-2432S032C_I_WLAN_BT_Scanner","rootUri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner","name":"ESP32-2432S032C_I_WLAN_BT_Scanner"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 5102

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C_I_WLAN_BT_Scanner/ESP32-2432S032C_I_WLAN_BT_Scanner.ino","languageId":"cpp","version":1,"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I!\n// Nach dem Scannen werden links SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Seite des Displays werden Bluetooth (MAC) und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}}






Started logging.

<<<
Content-Length: 3171

{"jsonrpc":"2.0","id":0,"method":"initialize","params":{"processId":14316,"clientInfo":{"name":"vscode","version":"1.96.0"},"rootPath":"c:\\Users\\baerb\\Documents\\Arduino-Sketche\\ESP32-2432S032C-I_WLAN_BT_Scanner","rootUri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C-I_WLAN_BT_Scanner","capabilities":{"workspace":{"applyEdit":true,"workspaceEdit":{"documentChanges":true,"resourceOperations":["create","rename","delete"],"failureHandling":"textOnlyTransactional"},"didChangeConfiguration":{"dynamicRegistration":true},"didChangeWatchedFiles":{"dynamicRegistration":true},"symbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}},"executeCommand":{"dynamicRegistration":true},"configuration":true,"workspaceFolders":true},"textDocument":{"publishDiagnostics":{"relatedInformation":true,"versionSupport":false,"tagSupport":{"valueSet":[1,2]}},"synchronization":{"dynamicRegistration":true,"willSave":true,"willSaveWaitUntil":true,"didSave":true},"completion":{"dynamicRegistration":true,"contextSupport":true,"completionItem":{"snippetSupport":true,"commitCharactersSupport":true,"documentationFormat":["markdown","plaintext"],"deprecatedSupport":true,"preselectSupport":true,"tagSupport":{"valueSet":[1]}},"completionItemKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]}},"hover":{"dynamicRegistration":true,"contentFormat":["markdown","plaintext"]},"signatureHelp":{"dynamicRegistration":true,"signatureInformation":{"documentationFormat":["markdown","plaintext"],"parameterInformation":{"labelOffsetSupport":true}},"contextSupport":true},"definition":{"dynamicRegistration":true,"linkSupport":true},"references":{"dynamicRegistration":true},"documentHighlight":{"dynamicRegistration":true},"documentSymbol":{"dynamicRegistration":true,"symbolKind":{"valueSet":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]},"hierarchicalDocumentSymbolSupport":true},"codeAction":{"dynamicRegistration":true,"isPreferredSupport":true,"codeActionLiteralSupport":{"codeActionKind":{"valueSet":["","quickfix","refactor","refactor.extract","refactor.inline","refactor.rewrite","source","source.organizeImports"]}}},"codeLens":{"dynamicRegistration":true},"formatting":{"dynamicRegistration":true},"rangeFormatting":{"dynamicRegistration":true},"onTypeFormatting":{"dynamicRegistration":true},"rename":{"dynamicRegistration":true,"prepareSupport":true},"documentLink":{"dynamicRegistration":true,"tooltipSupport":true},"typeDefinition":{"dynamicRegistration":true,"linkSupport":true},"implementation":{"dynamicRegistration":true,"linkSupport":true},"colorProvider":{"dynamicRegistration":true},"foldingRange":{"dynamicRegistration":true,"rangeLimit":5000,"lineFoldingOnly":true},"declaration":{"dynamicRegistration":true,"linkSupport":true},"selectionRange":{"dynamicRegistration":true}},"window":{"workDoneProgress":true}},"initializationOptions":{},"trace":"off","workspaceFolders":[{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C-I_WLAN_BT_Scanner","name":"ESP32-2432S032C-I_WLAN_BT_Scanner"}]}}
>>>
Content-Length: 940

{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"change":2,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[".","\u003c","\u003e",":","\"","/"],"allCommitCharacters":[" ","\t","(",")","[","]","{","}","\u003c","\u003e",":",";",",","+","-","/","*","%","^","\u0026","#","?",".","=","\"","'","|"],"completionItem":{}},"hoverProvider":{},"signatureHelpProvider":{"triggerCharacters":["(",","]},"definitionProvider":{},"documentHighlightProvider":{},"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["quickfix","refactor","info"]},"documentFormattingProvider":{},"documentRangeFormattingProvider":{},"documentOnTypeFormattingProvider":{"firstTriggerCharacter":"\n"},"renameProvider":{},"executeCommandProvider":{"commands":["clangd.applyFix","clangd.applyTweak"]},"workspaceSymbolProvider":{}},"serverInfo":{"name":"arduino-language-server","version":"0.0.0-git"}}}
<<<
Content-Length: 52

{"jsonrpc":"2.0","method":"initialized","params":{}}Content-Length: 5102

{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///c%3A/Users/baerb/Documents/Arduino-Sketche/ESP32-2432S032C-I_WLAN_BT_Scanner/ESP32-2432S032C-I_WLAN_BT_Scanner.ino","languageId":"cpp","version":1,"text":"// Dieser Sketch ist für das Board ESP32-2432S032C-I!\n// Nach dem Scannen werden links SSID's mit Channel und Pegel in dBm angezeigt.\n// Auf der rechten Seite des Displays werden Bluetooth (MAC) und Pegel angezeigt.\n// Wegen zu kleinem Speicher muss folgende Einstellung geändert werden: \n// Werkzeuge → Partition Scheme: \"Huge APP (3MB No OTA/1MB SPIFFS)\"\n// Voreingestellt war: \"Default 4MB with spiffs (1.2MB APP/1.5MB SPIFFS)\"\n\n#pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n\n#include <WiFi.h>\n#include <BluetoothSerial.h>\n#include <BLEDevice.h>\n#include <BLEScan.h>\n#include <BLEAdvertisedDevice.h>\n#include <TFT_eSPI.h>\n\nTFT_eSPI tft = TFT_eSPI();\n\nBluetoothSerial SerialBT;\nBLEScan* pBLEScan;\n\nstruct WifiEntry {\n  String ssid;\n  int32_t rssi;\n  int32_t channel;\n  wifi_auth_mode_t encryption;\n};\n\n// Pegelanzeige: 1 px Abstand zur Trennlinie, rechtsbündig\nvoid drawRSSIValue(int x, int y, int rssi) {\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setCursor(x - 30, y + 12);\n  tft.printf(\"%4d\", rssi);\n}\n\n// Kopfzeile\nvoid drawHeader() {\n  tft.fillRect(0, 0, 320, 24, TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n\n  // WLAN\n  tft.setCursor(10, 12);\n  tft.print(\"SSID\");\n  tft.setCursor(118, 12);\n  tft.print(\"CH\");\n  tft.setCursor(150, 12);\n  tft.print(\"dBm\");\n\n  // Bluetooth (abgekürzt)\n  tft.setCursor(200, 12);\n  tft.print(\"BT\");\n  tft.setCursor(285, 12);\n  tft.print(\"dBm\");\n\n  // Trennlinien\n  tft.drawLine(0, 20, 320, 20, TFT_WHITE);\n  tft.drawLine(184, 0, 184, 240, TFT_WHITE);\n}\n\n// WLAN-Ergebnisse\nvoid drawWifiResults(WifiEntry* entries, int n) {\n  const int maxRows = 9;\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(0, y - 19, 184, 24, TFT_BLACK);\n    delay(10);\n    if (i < n) {\n      // SSID\n      tft.setCursor(0, y);\n      String ssid = entries[i].ssid;\n      if (ssid.length() > 10) ssid = ssid.substring(0, 10);  // 1 Zeichen mehr\n      tft.print(ssid);\n\n      // Kanal (unter \"CH\")\n      tft.setCursor(122, y);\n      tft.printf(\"%2d\", entries[i].channel);\n\n      // RSSI mit 1 px Abstand zur Trennlinie\n      drawRSSIValue(170, y - 14, entries[i].rssi);\n    }\n  }\n}\n\n// BLE-Ergebnisse\nvoid drawBleResults(BLEScanResults* foundDevices) {\n  const int maxRows = 9;\n  int count = foundDevices->getCount();\n\n  BLEAdvertisedDevice* devices[count];\n  for (int i = 0; i < count; i++) {\n    devices[i] = new BLEAdvertisedDevice(foundDevices->getDevice(i));\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < count - 1; i++) {\n    for (int j = i + 1; j < count; j++) {\n      if (devices[j]->getRSSI() > devices[i]->getRSSI()) {\n        BLEAdvertisedDevice* tmp = devices[i];\n        devices[i] = devices[j];\n        devices[j] = tmp;\n      }\n    }\n  }\n\n  // Anzeige\n  for (int i = 0; i < maxRows; i++) {\n    int y = 40 + i * 24;\n    tft.fillRect(187, y - 19, 133, 24, TFT_BLACK);\n    delay(10);\n    if (i < count) {\n      BLEAdvertisedDevice* device = devices[i];\n      tft.setCursor(190, y);\n\n      String name;\n      if (device->getName().length() > 0) {\n        name = device->getName().c_str();\n      } else {\n        // MAC kürzen (letzte 3 Bytes)\n        String mac = device->getAddress().toString().c_str();\n        if (mac.length() > 8) mac = mac.substring(mac.length() - 8);\n        name = mac;\n      }\n\n      if (name.length() > 11) name = name.substring(0, 11);\n      tft.print(name);\n\n      // RSSI mit 1 px Abstand zur rechten Kante\n      drawRSSIValue(306, y - 14, device->getRSSI());\n    }\n  }\n\n  for (int i = 0; i < count; i++) {\n    delete devices[i];\n  }\n}\n\nvoid setup() {\n  tft.init();\n  tft.setRotation(1);\n  tft.fillScreen(TFT_BLACK);\n  tft.setTextColor(TFT_WHITE, TFT_BLACK);\n  tft.setFreeFont(&FreeMono9pt7b);\n\n  WiFi.mode(WIFI_STA);\n  WiFi.disconnect(true);\n  delay(100);\n\n  SerialBT.begin(\"ESP32_BT\");\n\n  BLEDevice::init(\"ESP32_BLE\");\n  pBLEScan = BLEDevice::getScan();\n  pBLEScan->setActiveScan(true);\n\n  drawHeader();\n}\n\nvoid loop() {\n  int n = WiFi.scanNetworks();\n  WifiEntry entries[n];\n  for (int i = 0; i < n; i++) {\n    entries[i].ssid = WiFi.SSID(i);\n    entries[i].rssi = WiFi.RSSI(i);\n    entries[i].channel = WiFi.channel(i);\n    entries[i].encryption = WiFi.encryptionType(i);\n  }\n\n  // Sortieren nach RSSI\n  for (int i = 0; i < n - 1; i++) {\n    for (int j = i + 1; j < n; j++) {\n      if (entries[j].rssi > entries[i].rssi) {\n        WifiEntry tmp = entries[i];\n        entries[i] = entries[j];\n        entries[j] = tmp;\n      }\n    }\n  }\n\n  drawWifiResults(entries, n);\n\n  BLEScanResults* foundDevices = pBLEScan->start(2);\n  drawBleResults(foundDevices);\n  if (foundDevices) pBLEScan->clearResults();\n\n  delay(200);\n}\n"}}}